(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (prev Addr) (opt Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main11 (Heap Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr) Bool)
(declare-fun inv_main13 (Heap Addr) Bool)
(declare-fun inv_main14 (Heap Addr) Bool)
(declare-fun inv_main16 (Heap Addr) Bool)
(declare-fun inv_main17 (Heap Addr) Bool)
(declare-fun inv_main18 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main24 (Heap Addr Addr) Bool)
(declare-fun inv_main25 (Heap Addr Addr) Bool)
(declare-fun inv_main28 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr) Bool)
(declare-fun inv_main35 (Heap Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main38 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main41 (Heap Addr Addr) Bool)
(declare-fun inv_main42 (Heap Addr Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr) Bool)
(declare-fun inv_main46 (Heap Addr Addr Int) Bool)
(declare-fun inv_main54 (Heap Addr Addr) Bool)
(declare-fun inv_main55 (Heap Addr Addr) Bool)
(declare-fun inv_main58 (Heap Addr Addr) Bool)
(declare-fun inv_main7 (Heap Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main41 var2 var1 var0)) (inv_main46 var2 var1 var0 (data (getTSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main23 var3 var2 var0 var1)) (inv_main22 (write var3 var0 (O_TSLL (TSLL var1 (prev (getTSLL (read var3 var0))) (opt (getTSLL (read var3 var0))) (data (getTSLL (read var3 var0)))))) var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap)) (or (not (and (inv_main54 var5 var2 var1) (and (and (and (= var6 var5) (= var4 var2)) (= var0 var1)) (= var3 (next (getTSLL (read var5 var1))))))) (inv_main55 var6 var4 var3))))
(assert (forall ((var0 Heap) (var1 TSLL) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main7 var4 var2) (and (= var0 (write var4 var2 (O_TSLL (TSLL (next (getTSLL (read var4 var2))) (prev (getTSLL (read var4 var2))) (opt (getTSLL (read var4 var2))) 2)))) (= var3 var2)))) (inv_main12 (newHeap (alloc var0 (O_TSLL var1))) var3 (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Heap)) (or (not (and (inv_main4 var4 var1) (and (= var2 0) (and (= var0 0) (and (= var5 (write var4 var1 (O_TSLL (TSLL (next (getTSLL (read var4 var1))) nullAddr (opt (getTSLL (read var4 var1))) (data (getTSLL (read var4 var1))))))) (= var3 var1)))))) (inv_main14 var5 var3))))
(assert (forall ((var0 TSLL) (var1 Heap)) (or (not (inv_main2 var1)) (inv_main3 (newHeap (alloc var1 (O_TSLL var0))) (newAddr (alloc var1 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Int) (var11 Addr)) (or (not (and (inv_main46 var9 var7 var0 var10) (and (and (not (= var1 0)) (and (= var10 2) (and (and (and (= var6 var9) (= var3 var7)) (= var2 var0)) (= var4 (opt (getTSLL (read var9 var0))))))) (and (and (and (= var5 var6) (= var8 var3)) (= var11 var2)) (or (and (= var4 var2) (= var1 1)) (and (not (= var4 var2)) (= var1 0))))))) (inv_main42 var5 var8 var11))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (inv_main55 var6 var3 var0) (and (= var5 2) (and (and (and (= var1 var6) (= var2 var3)) (= var4 var0)) (= var5 (data (getTSLL (read var6 var3)))))))) (inv_main58 var1 var2 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main35 var2 var1 var0)) (inv_main38 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) (prev (getTSLL (read var2 var0))) (opt (getTSLL (read var2 var0))) 0))) var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Heap) (var7 Addr)) (or (not (and (inv_main25 var6 var3 var1) (and (= var0 0) (and (= var5 0) (and (and (= var4 (write var6 var1 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var6 var1))) (opt (getTSLL (read var6 var1))) (data (getTSLL (read var6 var1))))))) (= var2 var3)) (= var7 var1)))))) (inv_main35 var4 var2 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main12 var2 var0 var1)) (inv_main11 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) (prev (getTSLL (read var2 var0))) var1 (data (getTSLL (read var2 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main42 var5 var3 var0) (and (not (= var6 nullAddr)) (and (and (and (= var4 var5) (= var1 var3)) (= var2 var0)) (= var6 (next (getTSLL (read var5 var0)))))))) (inv_main41 var4 var1 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int)) (or (not (and (inv_main18 var2 var1 var0) (and (not (= var1 nullAddr)) (= var3 0)))) (inv_main41 var2 var1 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 TSLL) (var3 Addr) (var4 Heap)) (or (not (and (inv_main18 var4 var3 var1) (not (= var0 0)))) (inv_main23 (newHeap (alloc var4 (O_TSLL var2))) var3 var1 (newAddr (alloc var4 (O_TSLL var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main42 var5 var3 var0) (and (not (= var1 nullAddr)) (and (= var6 nullAddr) (and (and (and (= var4 var5) (= var1 var3)) (= var2 var0)) (= var6 (next (getTSLL (read var5 var0))))))))) (inv_main54 var4 var1 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int)) (or (not (and (inv_main18 var2 var1 var0) (and (not (= var1 nullAddr)) (and (= var1 nullAddr) (= var3 0))))) (inv_main54 var2 var1 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Heap) (var8 Addr)) (or (not (and (inv_main58 var6 var2 var0) (and (and (not (= var4 nullAddr)) (and (and (= var7 (write var6 (opt (getTSLL (read var6 var2))) defObj)) (= var5 var2)) (= var8 var0))) (and (and (= var3 (write var7 var5 defObj)) (= var1 var5)) (= var4 var8))))) (inv_main54 var3 var4 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr)) (or (not (and (inv_main55 var7 var5 var1) (and (and (not (= var6 nullAddr)) (and (not (= var0 2)) (and (and (and (= var2 var7) (= var4 var5)) (= var8 var1)) (= var0 (data (getTSLL (read var7 var5))))))) (and (and (= var3 (write var2 var4 defObj)) (= var9 var4)) (= var6 var8))))) (inv_main54 var3 var6 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main33 var3 var2 var0 var1)) (inv_main32 (write var3 var0 (O_TSLL (TSLL (next (getTSLL (read var3 var0))) (prev (getTSLL (read var3 var0))) var1 (data (getTSLL (read var3 var0)))))) var2 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 TSLL) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main28 var6 var3 var1) (and (and (= var0 (write var6 var1 (O_TSLL (TSLL (next (getTSLL (read var6 var1))) (prev (getTSLL (read var6 var1))) (opt (getTSLL (read var6 var1))) 2)))) (= var5 var3)) (= var4 var1)))) (inv_main33 (newHeap (alloc var0 (O_TSLL var2))) var5 var4 (newAddr (alloc var0 (O_TSLL var2)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main14 var1 var0)) (inv_main17 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) (prev (getTSLL (read var1 var0))) (opt (getTSLL (read var1 var0))) 0))) var0))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var1 var0))) (opt (getTSLL (read var1 var0))) (data (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main24 var3 var1 var0) (and (and (and (= var2 var3) (= var6 var1)) (= var4 var0)) (= var5 (next (getTSLL (read var3 var0))))))) (inv_main25 var2 var6 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap)) (or (not (and (inv_main4 var3 var1) (and (not (= var0 0)) (and (= var4 (write var3 var1 (O_TSLL (TSLL (next (getTSLL (read var3 var1))) nullAddr (opt (getTSLL (read var3 var1))) (data (getTSLL (read var3 var1))))))) (= var2 var1))))) (inv_main7 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int)) (or (not (and (inv_main46 var2 var1 var0 var3) (not (= var3 2)))) (inv_main44 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Heap) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Int)) (or (not (and (inv_main46 var9 var8 var1 var11) (and (and (= var3 0) (and (= var11 2) (and (and (and (= var7 var9) (= var4 var8)) (= var2 var1)) (= var5 (opt (getTSLL (read var9 var1))))))) (and (and (and (= var6 var7) (= var10 var4)) (= var0 var2)) (or (and (= var5 var2) (= var3 1)) (and (not (= var5 var2)) (= var3 0))))))) (inv_main44 var6 var10 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Int)) (or (not (and (inv_main4 var4 var1) (and (not (= var5 0)) (and (= var0 0) (and (= var3 (write var4 var1 (O_TSLL (TSLL (next (getTSLL (read var4 var1))) nullAddr (opt (getTSLL (read var4 var1))) (data (getTSLL (read var4 var1))))))) (= var2 var1)))))) (inv_main13 var3 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main22 var2 var1 var0)) (inv_main24 (write var2 (next (getTSLL (read var2 var0))) (O_TSLL (TSLL (next (getTSLL (read var2 (next (getTSLL (read var2 var0)))))) var0 (opt (getTSLL (read var2 (next (getTSLL (read var2 var0)))))) (data (getTSLL (read var2 (next (getTSLL (read var2 var0))))))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main34 var2 var1 var0)) (inv_main37 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) (prev (getTSLL (read var2 var0))) (opt (getTSLL (read var2 var0))) 1))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Heap) (var7 Addr)) (or (not (and (inv_main25 var6 var3 var0) (and (not (= var2 0)) (and (= var5 0) (and (and (= var4 (write var6 var0 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var6 var0))) (opt (getTSLL (read var6 var0))) (data (getTSLL (read var6 var0))))))) (= var1 var3)) (= var7 var0)))))) (inv_main34 var4 var1 var7))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main13 var1 var0)) (inv_main16 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) (prev (getTSLL (read var1 var0))) (opt (getTSLL (read var1 var0))) 1))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main32 var2 var1 var0)) (inv_main18 (write var2 (opt (getTSLL (read var2 var0))) (O_TSLL (TSLL nullAddr (prev (getTSLL (read var2 (opt (getTSLL (read var2 var0)))))) (opt (getTSLL (read var2 (opt (getTSLL (read var2 var0)))))) (data (getTSLL (read var2 (opt (getTSLL (read var2 var0))))))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main37 var2 var1 var0)) (inv_main18 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) (prev (getTSLL (read var2 var0))) var0 (data (getTSLL (read var2 var0)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main38 var2 var1 var0)) (inv_main18 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) (prev (getTSLL (read var2 var0))) var0 (data (getTSLL (read var2 var0)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr)) (or (not (and (inv_main11 var2 var0) (and (= var1 (write var2 (opt (getTSLL (read var2 var0))) (O_TSLL (TSLL nullAddr (prev (getTSLL (read var2 (opt (getTSLL (read var2 var0)))))) (opt (getTSLL (read var2 (opt (getTSLL (read var2 var0)))))) (data (getTSLL (read var2 (opt (getTSLL (read var2 var0)))))))))) (= var3 var0)))) (inv_main18 var1 var3 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Heap)) (or (not (and (inv_main16 var3 var1) (and (= var2 (write var3 var1 (O_TSLL (TSLL (next (getTSLL (read var3 var1))) (prev (getTSLL (read var3 var1))) var1 (data (getTSLL (read var3 var1))))))) (= var0 var1)))) (inv_main18 var2 var0 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap)) (or (not (and (inv_main17 var3 var2) (and (= var1 (write var3 var2 (O_TSLL (TSLL (next (getTSLL (read var3 var2))) (prev (getTSLL (read var3 var2))) var2 (data (getTSLL (read var3 var2))))))) (= var0 var2)))) (inv_main18 var1 var0 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main25 var5 var3 var1) (and (not (= var0 0)) (and (and (= var4 (write var5 var1 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var5 var1))) (opt (getTSLL (read var5 var1))) (data (getTSLL (read var5 var1))))))) (= var2 var3)) (= var6 var1))))) (inv_main28 var4 var2 var6))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main7 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main12 var2 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main11 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main11 var1 var0) (not (is-O_TSLL (read var1 (opt (getTSLL (read var1 var0))))))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main13 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main16 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main14 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main17 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main23 var3 var2 var0 var1) (not (is-O_TSLL (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main22 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main22 var2 var1 var0) (not (is-O_TSLL (read var2 (next (getTSLL (read var2 var0))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main24 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main25 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main28 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main33 var3 var2 var0 var1) (not (is-O_TSLL (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main32 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main32 var2 var1 var0) (not (is-O_TSLL (read var2 (opt (getTSLL (read var2 var0))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main34 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main37 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main35 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main38 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main41 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int)) (not (and (inv_main46 var2 var1 var0 var3) (and (= var3 2) (not (is-O_TSLL (read var2 var0))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main44 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main42 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main54 var2 var1 var0) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main55 var2 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main58 var2 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(check-sat)
