(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main0 (Heap Int) Bool)
(declare-fun inv_main10 (Heap Addr Addr) Bool)
(declare-fun inv_main11 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr) Bool)
(declare-fun inv_main14 (Heap Addr Addr) Bool)
(declare-fun inv_main19 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main21 (Heap Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr) Bool)
(declare-fun inv_main24 (Heap Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main35 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main43 (Heap Addr Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr) Bool)
(declare-fun inv_main53 (Heap Addr Addr) Bool)
(declare-fun inv_main56 (Heap Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int)) (or (not (and (inv_main43 var0 var5 var4) (and (= var6 1) (and (and (and (= var1 var0) (= var2 var5)) (= var3 var4)) (= var6 (data (getTSLL (read var0 var4)))))))) (inv_main49 var1 var2 var3))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main35 var0 var4 var2) (and (not (= var3 1)) (and (and (and (= var1 var0) (= var6 var4)) (= var5 var2)) (= var3 (data (getTSLL (read var0 var2)))))))) (inv_main37 var1 var6 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (and (inv_main53 var0 var2 var1) (not (= var1 nullAddr)))) (inv_main56 var0 var1 var1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main43 var0 var4 var2) (and (not (= var1 1)) (and (and (and (= var5 var0) (= var6 var4)) (= var3 var2)) (= var1 (data (getTSLL (read var0 var2)))))))) (inv_main44 var5 var6 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 TSLL) (var4 Int)) (or (not (and (inv_main6 var0 var2 var1) (not (= var4 0)))) (inv_main11 (newHeap (alloc var0 (O_TSLL var3))) var2 var1 (newAddr (alloc var0 (O_TSLL var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main26 var1 var6 var5) (and (and (and (= var3 var1) (= var0 var6)) (= var2 var5)) (= var4 (next (getTSLL (read var1 var5))))))) (inv_main23 var3 var0 var4))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr)) (or (not (and (inv_main6 var0 var4 var2) (and (= var3 0) (= var1 0)))) (inv_main23 var0 var4 var4))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int)) (or (not (and (inv_main35 var1 var5 var4) (and (= var6 1) (and (and (and (= var0 var1) (= var2 var5)) (= var3 var4)) (= var6 (data (getTSLL (read var1 var4)))))))) (inv_main36 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main10 var1 var6 var4) (and (and (and (= var2 var1) (= var3 var6)) (= var0 var4)) (= var5 (next (getTSLL (read var1 var4))))))) (inv_main12 var2 var3 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main14 var0 var2 var1)) (inv_main6 (write var0 var1 (O_TSLL (TSLL nullAddr (data (getTSLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main4 var0 var3) (and (= var1 (write var0 var3 (O_TSLL (TSLL (next (getTSLL (read var0 var3))) 0)))) (= var2 var3)))) (inv_main6 var1 var2 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main19 var0 var2 var1)) (inv_main21 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) 1))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 TSLL) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr)) (or (not (and (inv_main6 var0 var6 var3) (and (and (and (and (= var4 (newHeap (alloc var0 (O_TSLL var5)))) (= var2 var6)) (= var9 var3)) (= var7 (newAddr (alloc var0 (O_TSLL var5))))) (and (not (= var8 0)) (= var1 0))))) (inv_main19 var4 var2 var7))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main37 var0 var4 var2) (and (and (and (= var5 var0) (= var1 var4)) (= var6 var2)) (= var3 (next (getTSLL (read var0 var2))))))) (inv_main35 var5 var1 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main34 var0 var5 var2 var6) (and (and (= var3 (write var0 var2 (O_TSLL (TSLL var6 (data (getTSLL (read var0 var2))))))) (= var4 var5)) (= var1 var2)))) (inv_main35 var3 var4 var4))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr)) (or (not (and (inv_main21 var1 var5 var3) (and (and (= var0 (write var1 var3 (O_TSLL (TSLL var5 (data (getTSLL (read var1 var3))))))) (= var4 var5)) (= var2 var3)))) (inv_main35 var0 var2 var2))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 TSLL) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main24 var0 var6 var4) (and (and (and (= var1 var0) (= var5 var6)) (= var2 var4)) (= var7 (next (getTSLL (read var0 var4))))))) (inv_main33 (newHeap (alloc var1 (O_TSLL var3))) var5 var2 var7 (newAddr (alloc var1 (O_TSLL var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (and (inv_main53 var0 var2 var1) (= var1 nullAddr))) (inv_main0 var0 0))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main36 var0 var6 var2) (and (not (= var3 nullAddr)) (and (and (and (= var1 var0) (= var5 var6)) (= var4 var2)) (= var3 (next (getTSLL (read var0 var2)))))))) (inv_main43 var1 var5 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main44 var1 var5 var4) (and (not (= var6 nullAddr)) (and (and (and (= var2 var1) (= var3 var5)) (= var0 var4)) (= var6 (next (getTSLL (read var1 var4)))))))) (inv_main43 var2 var3 var6))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main3 var0 var1)) (inv_main4 (write var0 var1 (O_TSLL (TSLL nullAddr (data (getTSLL (read var0 var1)))))) var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (or (not (and (inv_main23 var0 var3 var1) (and (= var2 0) (not (= (next (getTSLL (read var0 var1))) nullAddr))))) (inv_main26 var0 var3 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (and (inv_main23 var0 var2 var1) (= (next (getTSLL (read var0 var1))) nullAddr))) (inv_main24 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int)) (or (not (and (inv_main23 var0 var2 var1) (and (not (= var3 0)) (not (= (next (getTSLL (read var0 var1))) nullAddr))))) (inv_main24 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main12 var0 var2 var1)) (inv_main14 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) 0))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main56 var0 var5 var3) (and (and (and (= var1 var0) (= var2 var5)) (= var6 var3)) (= var4 (next (getTSLL (read var0 var3))))))) (inv_main53 (write var1 var2 defObj) var2 var4))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main36 var0 var6 var2) (and (= var3 nullAddr) (and (and (and (= var1 var0) (= var5 var6)) (= var4 var2)) (= var3 (next (getTSLL (read var0 var2)))))))) (inv_main53 var1 var5 var5))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main44 var1 var5 var4) (and (= var6 nullAddr) (and (and (and (= var2 var1) (= var3 var5)) (= var0 var4)) (= var6 (next (getTSLL (read var1 var4)))))))) (inv_main53 var2 var3 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main11 var0 var2 var1 var3)) (inv_main10 (write var0 var1 (O_TSLL (TSLL var3 (data (getTSLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main32 var0 var2 var1 var3)) (inv_main34 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) 1))) var2 var1 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr)) (or (not (inv_main33 var0 var3 var1 var4 var2)) (inv_main32 (write var0 var1 (O_TSLL (TSLL var2 (data (getTSLL (read var0 var1)))))) var3 var1 var4))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main3 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main4 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main11 var0 var2 var1 var3) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main10 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main12 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main14 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main19 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main21 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main23 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main26 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main24 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr)) (not (and (inv_main33 var0 var3 var1 var4 var2) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main32 var0 var2 var1 var3) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main34 var0 var2 var1 var3) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main35 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main37 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main36 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main43 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (inv_main49 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main44 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main56 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr)) (not (and (inv_main0 var0 var1) (not (= (read var0 var2) defObj))))))
(check-sat)
