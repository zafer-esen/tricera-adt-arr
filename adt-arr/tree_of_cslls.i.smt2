(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TListNode 0) (TTreeNode 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TListNode (getTListNode TListNode)) (O_TTreeNode (getTTreeNode TTreeNode)) (defObj))
                   ((TListNode (next Addr)))
                   ((TTreeNode (left Addr) (right Addr) (list Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main11 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main15 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main17 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main18 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main25 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main28 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main40 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main47 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main51 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main54 (Heap Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main57 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main59 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main60 (Heap Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main64 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main67 (Heap Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main70 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main71 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main72 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main75 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main76 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main78 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main79 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main8 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main80 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main81 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main82 (Heap Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main83 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main86 (Heap Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main9 (Heap Addr Addr Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main34 var3 var1 var2 var4 var0)) (inv_main49 (write var3 var0 (O_TTreeNode (TTreeNode nullAddr (right (getTTreeNode (read var3 var0))) (list (getTTreeNode (read var3 var0)))))) var1 var2 var4 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (or (not (inv_main52 var4 var1 var2 var5 var0 var3)) (inv_main51 (write var4 var0 (O_TTreeNode (TTreeNode (left (getTTreeNode (read var4 var0))) (right (getTTreeNode (read var4 var0))) var3))) var1 var2 var5 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Heap) (var10 Int) (var11 Addr)) (or (not (and (inv_main67 var9 var1 var5 var11 var6 var10) (and (not (= nullAddr var0)) (and (= var3 0) (and (= var10 0) (and (and (and (and (and (= var8 var9) (= var7 var1)) (= var2 var5)) (= var4 var11)) (= var0 var6)) (or (and (not (= nullAddr (right (getTTreeNode (read var9 var5))))) (= var3 1)) (and (= nullAddr (right (getTTreeNode (read var9 var5)))) (= var3 0))))))))) (inv_main76 var8 var7 var2 var4 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Heap) (var10 Int) (var11 Addr) (var12 TListNode) (var13 Addr) (var14 Addr) (var15 Addr)) (or (not (and (inv_main11 var7 var2 var4 var8 var11) (and (and (and (and (and (and (= var1 (newHeap (alloc var9 (O_TListNode var12)))) (= var6 var15)) (= var5 var3)) (= var0 var13)) (= var14 (newAddr (alloc var9 (O_TListNode var12))))) (not (= var10 0))) (and (and (and (= var9 (write var7 (list (getTTreeNode (read var7 var2))) (O_TListNode (TListNode var11)))) (= var15 var2)) (= var3 var4)) (= var13 var8))))) (inv_main15 var1 var6 var5 var14))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Int) (var8 Heap) (var9 Heap) (var10 Addr) (var11 Addr) (var12 TListNode) (var13 Addr) (var14 Addr)) (or (not (and (inv_main17 var9 var0 var4 var11) (and (and (and (and (and (and (= var5 (newHeap (alloc var8 (O_TListNode var12)))) (= var6 var14)) (= var13 var2)) (= var1 var3)) (= var10 (newAddr (alloc var8 (O_TListNode var12))))) (not (= var7 0))) (and (and (and (= var8 (write var9 (list (getTTreeNode (read var9 var0))) (O_TListNode (TListNode var11)))) (= var14 var0)) (= var2 var4)) (= var3 var11))))) (inv_main15 var5 var6 var13 var10))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main70 var3 var0 var1 var4 var2) (not (= nullAddr (left (getTTreeNode (read var3 var1))))))) (inv_main71 var3 var0 var1 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (or (not (and (inv_main82 var4 var1 var2 var5 var3 var0) (= var0 (next (getTListNode (read var4 (list (getTTreeNode (read var4 var2))))))))) (inv_main80 var4 var1 var2 var5 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main18 var3 var1 var2 var4 var0)) (inv_main17 (write var3 var4 (O_TListNode (TListNode var0))) var1 var2 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main40 var3 var1 var2 var4 var0)) (inv_main34 (write var3 var2 (O_TTreeNode (TTreeNode var0 (right (getTTreeNode (read var3 var2))) (list (getTTreeNode (read var3 var2)))))) var1 var2 var4 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main47 var3 var1 var2 var4 var0)) (inv_main34 (write var3 var2 (O_TTreeNode (TTreeNode (left (getTTreeNode (read var3 var2))) var0 (list (getTTreeNode (read var3 var2)))))) var1 var2 var4 var0))))
(assert (forall ((var0 TListNode) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr)) (or (not (and (inv_main6 var6 var1 var4 var7) (and (and (and (= var3 (write var6 var1 (O_TTreeNode (TTreeNode (left (getTTreeNode (read var6 var1))) nullAddr (list (getTTreeNode (read var6 var1))))))) (= var2 var1)) (= var5 var4)) (= var8 var7)))) (inv_main9 (newHeap (alloc var3 (O_TListNode var0))) var2 var5 var8 (newAddr (alloc var3 (O_TListNode var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main64 var3 var0 var1 var4 var2)) (and (or (not (not (= nullAddr (left (getTTreeNode (read var3 var1)))))) (inv_main67 var3 var0 var1 var4 var2 1)) (or (not (= nullAddr (left (getTTreeNode (read var3 var1))))) (inv_main67 var3 var0 var1 var4 var2 0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 TTreeNode) (var12 Heap) (var13 Addr) (var14 Addr) (var15 Int) (var16 Addr) (var17 Addr) (var18 Heap)) (or (not (and (inv_main33 var12 var4 var6 var13 var3) (and (and (and (and (and (and (= var18 (newHeap (alloc var5 (O_TTreeNode var11)))) (= var17 var14)) (= var1 var16)) (= var10 var9)) (= var7 var8)) (= var0 (newAddr (alloc var5 (O_TTreeNode var11))))) (and (not (= var2 0)) (and (not (= var15 0)) (and (and (and (and (and (= var5 var12) (= var14 var4)) (= var16 var6)) (= var9 var13)) (= var8 var3)) (or (and (= nullAddr (left (getTTreeNode (read var12 var6)))) (= var15 1)) (and (not (= nullAddr (left (getTTreeNode (read var12 var6))))) (= var15 0))))))))) (inv_main40 var18 var17 var1 var10 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main57 var3 var1 var2 var4 var0)) (inv_main60 var3 var1 var2 var4 var0 (next (getTListNode (read var3 (list (getTTreeNode (read var3 var1))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr)) (or (not (and (inv_main33 var9 var3 var6 var10 var2) (and (= var4 0) (and (and (and (and (and (= var0 var9) (= var8 var3)) (= var5 var6)) (= var7 var10)) (= var1 var2)) (or (and (= nullAddr (left (getTTreeNode (read var9 var6)))) (= var4 1)) (and (not (= nullAddr (left (getTTreeNode (read var9 var6))))) (= var4 0))))))) (inv_main36 var0 var8 var5 var7 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr)) (or (not (and (inv_main33 var9 var1 var5 var10 var0) (and (= var8 0) (and (not (= var3 0)) (and (and (and (and (and (= var2 var9) (= var11 var1)) (= var4 var5)) (= var7 var10)) (= var6 var0)) (or (and (= nullAddr (left (getTTreeNode (read var9 var5)))) (= var3 1)) (and (not (= nullAddr (left (getTTreeNode (read var9 var5))))) (= var3 0)))))))) (inv_main36 var2 var11 var4 var7 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (or (not (inv_main60 var4 var1 var3 var5 var0 var2)) (inv_main59 (write var4 var5 (O_TListNode (TListNode var2))) var1 var3 var5 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr)) (or (not (and (inv_main25 var3 var1 var2 var5 var4) (= var4 0))) (inv_main33 var3 var1 var2 var5 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr)) (or (not (and (inv_main25 var6 var2 var3 var8 var7) (and (= var1 0) (and (not (= var7 0)) (and (and (and (and (= var4 var6) (= var9 var2)) (= var5 var3)) (= var0 var8)) (or (and (not (= nullAddr (right (getTTreeNode (read var6 var3))))) (= var1 1)) (and (= nullAddr (right (getTTreeNode (read var6 var3)))) (= var1 0)))))))) (inv_main33 var4 var9 var5 var0 var10))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main70 var3 var0 var1 var4 var2) (= nullAddr (left (getTTreeNode (read var3 var1)))))) (inv_main72 var3 var0 var1 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main83 var3 var0 var1 var4 var2)) (inv_main86 var3 var0 var1 var4 var2 (next (getTListNode (read var3 var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main75 var3 var0 var1 var4 var2)) (inv_main82 var3 var0 var1 var4 var2 (list (getTTreeNode (read var3 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr)) (or (not (and (inv_main81 var7 var1 var4 var9 var5) (and (and (and (and (and (= var0 var7) (= var3 var1)) (= var2 var4)) (= var8 var9)) (= var10 var5)) (= var6 (next (getTListNode (read var7 (list (getTTreeNode (read var7 var4)))))))))) (inv_main83 var0 var3 var2 var6 var10))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main76 var3 var0 var1 var4 var2) (= var1 (left (getTTreeNode (read var3 var2)))))) (inv_main78 var3 var0 var1 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Heap) (var10 Addr)) (or (not (and (inv_main71 var9 var0 var5 var10 var6) (and (and (and (and (and (= var7 var9) (= var8 var0)) (= var2 var5)) (= var4 var10)) (= var3 var6)) (= var1 (left (getTTreeNode (read var9 var5))))))) (inv_main64 var7 var8 var1 var4 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr)) (or (not (and (inv_main72 var7 var0 var3 var8 var4) (and (and (and (and (and (= var1 var7) (= var5 var0)) (= var2 var3)) (= var6 var8)) (= var10 var4)) (= var9 (right (getTTreeNode (read var7 var3))))))) (inv_main64 var1 var5 var9 var6 var10))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Heap)) (or (not (and (inv_main80 var8 var2 var5 var9 var6) (and (and (not (= nullAddr var10)) (and (and (and (and (= var13 (write var8 (list (getTTreeNode (read var8 var5))) defObj)) (= var0 var2)) (= var4 var5)) (= var12 var9)) (= var3 var6))) (and (and (and (= var1 (write var13 var4 defObj)) (= var10 var0)) (= var11 var4)) (= var7 var12))))) (inv_main64 var1 var10 var10 var7 nullAddr))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main12 var3 var1 var2 var4) (and (not (= nullAddr var1)) (= var0 0)))) (inv_main64 var3 var1 var1 var4 nullAddr))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 TTreeNode) (var4 Heap) (var5 Heap)) (or (not (and (inv_main2 var5) (and (= var4 (newHeap (alloc var5 (O_TTreeNode var3)))) (= var1 (newAddr (alloc var5 (O_TTreeNode var3))))))) (inv_main5 var4 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 TTreeNode) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr)) (or (not (and (inv_main49 var9 var1 var5 var10 var0) (and (and (and (and (= var4 (write var9 var0 (O_TTreeNode (TTreeNode (left (getTTreeNode (read var9 var0))) nullAddr (list (getTTreeNode (read var9 var0))))))) (= var7 var1)) (= var6 var5)) (= var3 var10)) (= var8 var0)))) (inv_main52 (newHeap (alloc var4 (O_TTreeNode var2))) var7 var6 var3 var8 (newAddr (alloc var4 (O_TTreeNode var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main5 var2 var0 var1 var3)) (inv_main6 (write var2 var0 (O_TTreeNode (TTreeNode nullAddr (right (getTTreeNode (read var2 var0))) (list (getTTreeNode (read var2 var0)))))) var0 var1 var3))))
(assert (forall ((var0 TTreeNode) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Heap)) (or (not (and (inv_main36 var11 var4 var6 var12 var3) (and (and (and (and (and (and (= var2 (newHeap (alloc var18 (O_TTreeNode var0)))) (= var5 var13)) (= var17 var10)) (= var1 var7)) (= var16 var15)) (= var14 (newAddr (alloc var18 (O_TTreeNode var0))))) (and (not (= var9 0)) (and (not (= var8 0)) (and (and (and (and (and (= var18 var11) (= var13 var4)) (= var10 var6)) (= var7 var12)) (= var15 var3)) (or (and (= nullAddr (right (getTTreeNode (read var11 var6)))) (= var8 1)) (and (not (= nullAddr (right (getTTreeNode (read var11 var6))))) (= var8 0))))))))) (inv_main47 var2 var5 var17 var1 var14))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main8 var2 var0 var1 var3)) (inv_main11 var2 var0 var1 var3 (list (getTTreeNode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr)) (or (not (and (inv_main67 var3 var0 var1 var5 var2 var4) (not (= var4 0)))) (inv_main70 var3 var0 var1 var5 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Heap) (var10 Int) (var11 Addr)) (or (not (and (inv_main67 var9 var1 var5 var11 var6 var10) (and (not (= var3 0)) (and (= var10 0) (and (and (and (and (and (= var8 var9) (= var7 var1)) (= var2 var5)) (= var4 var11)) (= var0 var6)) (or (and (not (= nullAddr (right (getTTreeNode (read var9 var5))))) (= var3 1)) (and (= nullAddr (right (getTTreeNode (read var9 var5)))) (= var3 0)))))))) (inv_main70 var8 var7 var2 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Heap)) (or (not (and (inv_main36 var8 var2 var6 var9 var1) (and (= var5 0) (and (and (and (and (and (= var10 var8) (= var0 var2)) (= var3 var6)) (= var4 var9)) (= var7 var1)) (or (and (= nullAddr (right (getTTreeNode (read var8 var6)))) (= var5 1)) (and (not (= nullAddr (right (getTTreeNode (read var8 var6))))) (= var5 0))))))) (inv_main12 var10 var0 var3 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Addr)) (or (not (and (inv_main36 var9 var3 var5 var10 var2) (and (= var1 0) (and (not (= var7 0)) (and (and (and (and (and (= var4 var9) (= var11 var3)) (= var8 var5)) (= var6 var10)) (= var0 var2)) (or (and (= nullAddr (right (getTTreeNode (read var9 var5)))) (= var7 1)) (and (not (= nullAddr (right (getTTreeNode (read var9 var5))))) (= var7 0)))))))) (inv_main12 var4 var11 var8 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Heap)) (or (not (and (inv_main54 var9 var3 var6 var10 var2 var5) (and (= var8 0) (and (and (and (and (= var11 (write var9 (list (getTTreeNode (read var9 var2))) (O_TListNode (TListNode var5)))) (= var1 var3)) (= var4 var6)) (= var7 var10)) (= var0 var2))))) (inv_main12 var11 var1 var4 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr)) (or (not (and (inv_main59 var9 var3 var5 var10 var2) (and (= var6 0) (and (and (and (and (= var1 (write var9 (list (getTTreeNode (read var9 var3))) (O_TListNode (TListNode var10)))) (= var7 var3)) (= var8 var5)) (= var4 var10)) (= var0 var2))))) (inv_main12 var1 var7 var8 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Heap) (var8 Addr) (var9 Addr)) (or (not (and (inv_main11 var7 var3 var4 var8 var2) (and (= var1 0) (and (and (and (= var6 (write var7 (list (getTTreeNode (read var7 var3))) (O_TListNode (TListNode var2)))) (= var0 var3)) (= var5 var4)) (= var9 var8))))) (inv_main12 var6 var0 var5 var9))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Heap) (var7 Heap) (var8 Addr)) (or (not (and (inv_main17 var7 var0 var2 var8) (and (= var4 0) (and (and (and (= var6 (write var7 (list (getTTreeNode (read var7 var0))) (O_TListNode (TListNode var8)))) (= var5 var0)) (= var3 var2)) (= var1 var8))))) (inv_main12 var6 var5 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main76 var3 var0 var1 var4 var2) (not (= var1 (left (getTTreeNode (read var3 var2))))))) (inv_main79 var3 var0 var1 var4 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr)) (or (not (and (inv_main25 var7 var2 var3 var9 var8) (and (= var4 0) (and (not (= var1 0)) (and (not (= var8 0)) (and (and (and (and (= var5 var7) (= var10 var2)) (= var6 var3)) (= var0 var9)) (or (and (not (= nullAddr (right (getTTreeNode (read var7 var3))))) (= var1 1)) (and (= nullAddr (right (getTTreeNode (read var7 var3)))) (= var1 0))))))))) (inv_main29 var5 var10 var6 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main22 var2 var0 var1 var3)) (and (or (not (not (= nullAddr (left (getTTreeNode (read var2 var1)))))) (inv_main25 var2 var0 var1 var3 1)) (or (not (= nullAddr (left (getTTreeNode (read var2 var1))))) (inv_main25 var2 var0 var1 var3 0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 TListNode) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Addr) (var17 Addr) (var18 Addr)) (or (not (and (inv_main54 var10 var4 var7 var12 var3 var6) (and (and (and (and (and (and (and (= var2 (newHeap (alloc var11 (O_TListNode var5)))) (= var8 var1)) (= var9 var0)) (= var14 var18)) (= var17 var16)) (= var13 (newAddr (alloc var11 (O_TListNode var5))))) (not (= var15 0))) (and (and (and (and (= var11 (write var10 (list (getTTreeNode (read var10 var3))) (O_TListNode (TListNode var6)))) (= var1 var4)) (= var0 var7)) (= var18 var12)) (= var16 var3))))) (inv_main57 var2 var8 var9 var13 var17))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Heap) (var12 Addr) (var13 TListNode) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Addr)) (or (not (and (inv_main59 var10 var3 var6 var12 var2) (and (and (and (and (and (and (and (= var11 (newHeap (alloc var1 (O_TListNode var13)))) (= var0 var15)) (= var8 var4)) (= var16 var9)) (= var5 var14)) (= var17 (newAddr (alloc var1 (O_TListNode var13))))) (not (= var7 0))) (and (and (and (and (= var1 (write var10 (list (getTTreeNode (read var10 var3))) (O_TListNode (TListNode var12)))) (= var15 var3)) (= var4 var6)) (= var9 var12)) (= var14 var2))))) (inv_main57 var11 var0 var8 var17 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main51 var3 var1 var2 var4 var0)) (inv_main54 var3 var1 var2 var4 var0 (list (getTTreeNode (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main9 var3 var0 var2 var4 var1)) (inv_main8 (write var3 var0 (O_TTreeNode (TTreeNode (left (getTTreeNode (read var3 var0))) (right (getTTreeNode (read var3 var0))) var1))) var0 var2 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr)) (or (not (and (inv_main25 var7 var3 var4 var9 var8) (and (not (= var2 0)) (and (not (= var1 0)) (and (not (= var8 0)) (and (and (and (and (= var5 var7) (= var10 var3)) (= var6 var4)) (= var0 var9)) (or (and (not (= nullAddr (right (getTTreeNode (read var7 var4))))) (= var1 1)) (and (= nullAddr (right (getTTreeNode (read var7 var4)))) (= var1 0))))))))) (inv_main28 var5 var10 var6 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr)) (or (not (and (inv_main28 var7 var1 var3 var8) (and (and (and (and (= var2 var7) (= var6 var1)) (= var5 var3)) (= var4 var8)) (= var0 (left (getTTreeNode (read var7 var3))))))) (inv_main22 var2 var6 var0 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Addr)) (or (not (and (inv_main29 var7 var3 var4 var8) (and (and (and (and (= var5 var7) (= var2 var3)) (= var0 var4)) (= var1 var8)) (= var6 (right (getTTreeNode (read var7 var4))))))) (inv_main22 var5 var2 var6 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main12 var3 var1 var2 var4) (not (= var0 0)))) (inv_main22 var3 var1 var1 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (or (not (and (inv_main82 var4 var1 var2 var5 var3 var0) (not (= var0 (next (getTListNode (read var4 (list (getTTreeNode (read var4 var2)))))))))) (inv_main81 var4 var1 var2 var5 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main15 var2 var0 var1 var3)) (inv_main18 var2 var0 var1 var3 (next (getTListNode (read var2 (list (getTTreeNode (read var2 var0))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main78 var3 var0 var1 var4 var2)) (inv_main75 (write var3 var2 (O_TTreeNode (TTreeNode nullAddr (right (getTTreeNode (read var3 var2))) (list (getTTreeNode (read var3 var2)))))) var0 var1 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main79 var3 var0 var1 var4 var2)) (inv_main75 (write var3 var2 (O_TTreeNode (TTreeNode (left (getTTreeNode (read var3 var2))) nullAddr (list (getTTreeNode (read var3 var2)))))) var0 var1 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Heap) (var10 Int) (var11 Addr)) (or (not (and (inv_main67 var9 var1 var5 var11 var6 var10) (and (= nullAddr var0) (and (= var3 0) (and (= var10 0) (and (and (and (and (and (= var8 var9) (= var7 var1)) (= var2 var5)) (= var4 var11)) (= var0 var6)) (or (and (not (= nullAddr (right (getTTreeNode (read var9 var5))))) (= var3 1)) (and (= nullAddr (right (getTTreeNode (read var9 var5)))) (= var3 0))))))))) (inv_main75 var8 nullAddr var2 var4 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr)) (or (not (and (inv_main86 var8 var1 var5 var10 var6 var0) (and (and (and (and (= var4 (write var8 (list (getTTreeNode (read var8 var5))) (O_TListNode (TListNode var0)))) (= var7 var1)) (= var3 var5)) (= var2 var10)) (= var9 var6)))) (inv_main75 (write var4 var2 defObj) var7 var3 var2 var9))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main5 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main6 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main9 var3 var0 var2 var4 var1) (not (is-O_TTreeNode (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main8 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main11 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main11 var3 var1 var2 var4 var0) (not (is-O_TListNode (read var3 (list (getTTreeNode (read var3 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main15 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main15 var2 var0 var1 var3) (not (is-O_TListNode (read var2 (list (getTTreeNode (read var2 var0))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main18 var3 var1 var2 var4 var0) (not (is-O_TListNode (read var3 var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main17 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main17 var2 var0 var1 var3) (not (is-O_TListNode (read var2 (list (getTTreeNode (read var2 var0))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main22 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr)) (not (and (inv_main25 var2 var0 var1 var4 var3) (and (not (= var3 0)) (not (is-O_TTreeNode (read var2 var1))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main28 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main29 var2 var0 var1 var3) (not (is-O_TTreeNode (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main33 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main40 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main36 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main47 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main34 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main49 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main52 var4 var1 var2 var5 var0 var3) (not (is-O_TTreeNode (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main51 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main54 var4 var1 var3 var5 var0 var2) (not (is-O_TTreeNode (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main54 var4 var1 var3 var5 var0 var2) (not (is-O_TListNode (read var4 (list (getTTreeNode (read var4 var0))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main57 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main57 var3 var1 var2 var4 var0) (not (is-O_TListNode (read var3 (list (getTTreeNode (read var3 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main60 var4 var1 var3 var5 var0 var2) (not (is-O_TListNode (read var4 var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main59 var3 var1 var2 var4 var0) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main59 var3 var1 var2 var4 var0) (not (is-O_TListNode (read var3 (list (getTTreeNode (read var3 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main64 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr)) (not (and (inv_main67 var3 var0 var1 var5 var2 var4) (and (= var4 0) (not (is-O_TTreeNode (read var3 var1))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main70 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main71 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main72 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main76 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main78 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main79 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main75 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main82 var4 var1 var2 var5 var3 var0) (not (is-O_TTreeNode (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main82 var4 var1 var2 var5 var3 var0) (not (is-O_TListNode (read var4 (list (getTTreeNode (read var4 var2))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main81 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main81 var3 var0 var1 var4 var2) (not (is-O_TListNode (read var3 (list (getTTreeNode (read var3 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main83 var3 var0 var1 var4 var2) (not (is-O_TListNode (read var3 var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main86 var4 var1 var2 var5 var3 var0) (not (is-O_TTreeNode (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (not (and (inv_main86 var4 var1 var2 var5 var3 var0) (not (is-O_TListNode (read var4 (list (getTTreeNode (read var4 var2))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main80 var3 var0 var1 var4 var2) (not (is-O_TTreeNode (read var3 var1)))))))
(check-sat)
