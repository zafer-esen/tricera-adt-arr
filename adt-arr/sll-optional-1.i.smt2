(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (opt Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main10 (Heap Addr) Bool)
(declare-fun inv_main11 (Heap Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr) Bool)
(declare-fun inv_main13 (Heap Addr) Bool)
(declare-fun inv_main15 (Heap Addr) Bool)
(declare-fun inv_main16 (Heap Addr) Bool)
(declare-fun inv_main17 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main21 (Heap Addr Addr) Bool)
(declare-fun inv_main22 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main30 (Heap Addr Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr) Bool)
(declare-fun inv_main35 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr) Bool)
(declare-fun inv_main40 (Heap Addr Addr) Bool)
(declare-fun inv_main42 (Heap Addr Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr Int) Bool)
(declare-fun inv_main46 (Heap Addr Addr Int) Bool)
(declare-fun inv_main48 (Heap Addr Addr Int) Bool)
(declare-fun inv_main56 (Heap Addr Addr) Bool)
(declare-fun inv_main57 (Heap Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr) Bool)
(declare-fun inv_main60 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main30 var0 var2 var1)) (inv_main17 (write var0 (opt (getTSLL (read var0 var1))) (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 (opt (getTSLL (read var0 var1)))))) (data (getTSLL (read var0 (opt (getTSLL (read var0 var1))))))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main35 var0 var2 var1)) (inv_main17 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) var1 (data (getTSLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main36 var0 var2 var1)) (inv_main17 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) var1 (data (getTSLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main10 var0 var1) (and (= var2 (write var0 (opt (getTSLL (read var0 var1))) (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 (opt (getTSLL (read var0 var1)))))) (data (getTSLL (read var0 (opt (getTSLL (read var0 var1)))))))))) (= var3 var1)))) (inv_main17 var2 var3 var3))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main15 var0 var2) (and (= var1 (write var0 var2 (O_TSLL (TSLL (next (getTSLL (read var0 var2))) var2 (data (getTSLL (read var0 var2))))))) (= var3 var2)))) (inv_main17 var1 var3 var3))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main16 var0 var3) (and (= var1 (write var0 var3 (O_TSLL (TSLL (next (getTSLL (read var0 var3))) var3 (data (getTSLL (read var0 var3))))))) (= var2 var3)))) (inv_main17 var1 var2 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr)) (or (not (and (inv_main23 var0 var5 var1) (and (not (= var4 0)) (and (and (= var3 (write var0 var1 (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 var1))) (data (getTSLL (read var0 var1))))))) (= var2 var5)) (= var6 var1))))) (inv_main26 var3 var2 var6))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main40 var0 var5 var1) (and (not (= var4 nullAddr)) (and (= var6 nullAddr) (and (and (and (= var3 var0) (= var4 var5)) (= var2 var1)) (= var6 (next (getTSLL (read var0 var1))))))))) (inv_main56 var3 var4 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (or (not (and (inv_main17 var0 var3 var1) (and (not (= var3 nullAddr)) (and (= var3 nullAddr) (= var2 0))))) (inv_main56 var0 var3 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main60 var0 var6 var1) (and (and (not (= var3 nullAddr)) (and (and (= var5 (write var0 (opt (getTSLL (read var0 var6))) defObj)) (= var7 var6)) (= var4 var1))) (and (and (= var8 (write var5 var7 defObj)) (= var2 var7)) (= var3 var4))))) (inv_main56 var8 var3 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr)) (or (not (and (inv_main57 var0 var5 var1) (and (and (not (= var9 nullAddr)) (and (not (= var7 2)) (and (and (and (= var2 var0) (= var6 var5)) (= var4 var1)) (= var7 (data (getTSLL (read var0 var5))))))) (and (and (= var3 (write var2 var6 defObj)) (= var8 var6)) (= var9 var4))))) (inv_main56 var3 var9 var9))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main39 var0 var2 var1)) (inv_main44 var0 var2 var1 (data (getTSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main13 var0 var1)) (inv_main16 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) (opt (getTSLL (read var0 var1))) 0))) var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 TSLL) (var5 Addr) (var6 Heap)) (or (not (and (inv_main26 var0 var5 var1) (and (and (= var6 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) (opt (getTSLL (read var0 var1))) 2)))) (= var2 var5)) (= var3 var1)))) (inv_main31 (newHeap (alloc var6 (O_TSLL var4))) var2 var3 (newAddr (alloc var6 (O_TSLL var4)))))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 TSLL)) (or (not (and (inv_main6 var0 var3) (and (= var1 (write var0 var3 (O_TSLL (TSLL (next (getTSLL (read var0 var3))) (opt (getTSLL (read var0 var3))) 2)))) (= var2 var3)))) (inv_main11 (newHeap (alloc var1 (O_TSLL var4))) var2 (newAddr (alloc var1 (O_TSLL var4)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main11 var0 var2 var1)) (inv_main10 (write var0 var2 (O_TSLL (TSLL (next (getTSLL (read var0 var2))) var1 (data (getTSLL (read var0 var2)))))) var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main21 var0 var2 var1) (and (and (and (= var6 var0) (= var5 var2)) (= var4 var1)) (= var3 (next (getTSLL (read var0 var1))))))) (inv_main23 var6 var5 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main22 var0 var3 var1 var2)) (inv_main21 (write var0 var1 (O_TSLL (TSLL var2 (opt (getTSLL (read var0 var1))) (data (getTSLL (read var0 var1)))))) var3 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main32 var0 var2 var1)) (inv_main35 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) (opt (getTSLL (read var0 var1))) 1))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main12 var0 var1)) (inv_main15 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) (opt (getTSLL (read var0 var1))) 1))) var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main40 var0 var5 var1) (and (not (= var6 nullAddr)) (and (and (and (= var3 var0) (= var4 var5)) (= var2 var1)) (= var6 (next (getTSLL (read var0 var1)))))))) (inv_main39 var3 var4 var6))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (or (not (and (inv_main17 var0 var3 var1) (and (not (= var3 nullAddr)) (= var2 0)))) (inv_main39 var0 var3 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Heap) (var11 Int)) (or (not (and (inv_main48 var0 var8 var2 var4) (and (and (= var11 0) (and (= var4 0) (and (and (and (= var9 var0) (= var7 var8)) (= var1 var2)) (= var3 (opt (getTSLL (read var0 var2))))))) (and (and (and (= var10 var9) (= var6 var7)) (= var5 var1)) (or (and (= var3 var1) (= var11 1)) (and (not (= var3 var1)) (= var11 0))))))) (inv_main42 var10 var6 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main33 var0 var2 var1)) (inv_main36 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) (opt (getTSLL (read var0 var1))) 0))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main56 var0 var5 var2) (and (and (and (= var3 var0) (= var6 var5)) (= var4 var2)) (= var1 (next (getTSLL (read var0 var2))))))) (inv_main57 var3 var6 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main31 var0 var3 var1 var2)) (inv_main30 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) var2 (data (getTSLL (read var0 var1)))))) var3 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (or (not (and (inv_main46 var0 var3 var1 var2) (= var2 0))) (inv_main48 var0 var3 var1 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main46 var0 var5 var1 var3) (and (not (= var3 0)) (and (and (and (= var2 var0) (= var7 var5)) (= var4 var1)) (= var6 (next (getTSLL (read var0 (opt (getTSLL (read var0 var1))))))))))) (and (or (not (= var6 nullAddr)) (inv_main48 var2 var7 var4 1)) (or (not (not (= var6 nullAddr))) (inv_main48 var2 var7 var4 0))))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main3 var0 var4) (and (not (= var1 0)) (and (= var2 (write var0 var4 (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 var4))) (data (getTSLL (read var0 var4))))))) (= var3 var4))))) (inv_main6 var2 var3))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (or (not (and (inv_main3 var0 var4) (and (not (= var5 0)) (and (= var1 0) (and (= var2 (write var0 var4 (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 var4))) (data (getTSLL (read var0 var4))))))) (= var3 var4)))))) (inv_main12 var2 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (or (not (and (inv_main48 var0 var3 var1 var2) (not (= var2 0)))) (inv_main40 var0 var3 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Int) (var10 Heap) (var11 Addr)) (or (not (and (inv_main48 var0 var7 var2 var4) (and (and (not (= var9 0)) (and (= var4 0) (and (and (and (= var8 var0) (= var6 var7)) (= var1 var2)) (= var3 (opt (getTSLL (read var0 var2))))))) (and (and (and (= var10 var8) (= var5 var6)) (= var11 var1)) (or (and (= var3 var1) (= var9 1)) (and (not (= var3 var1)) (= var9 0))))))) (inv_main40 var10 var5 var11))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr)) (or (not (and (inv_main3 var0 var5) (and (= var4 0) (and (= var1 0) (and (= var3 (write var0 var5 (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 var5))) (data (getTSLL (read var0 var5))))))) (= var2 var5)))))) (inv_main13 var3 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main57 var0 var6 var1) (and (= var3 2) (and (and (and (= var4 var0) (= var5 var6)) (= var2 var1)) (= var3 (data (getTSLL (read var0 var6)))))))) (inv_main60 var4 var5 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (or (not (and (inv_main44 var0 var3 var1 var2) (not (= var2 2)))) (inv_main46 var0 var3 var1 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (or (not (and (inv_main44 var0 var7 var1 var6) (and (= var6 2) (and (and (and (= var3 var0) (= var2 var7)) (= var4 var1)) (= var5 (opt (getTSLL (read var0 var1)))))))) (and (or (not (not (= var5 var4))) (inv_main46 var3 var2 var4 1)) (or (not (= var5 var4)) (inv_main46 var3 var2 var4 0))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 TSLL) (var3 Addr) (var4 Int)) (or (not (and (inv_main17 var0 var3 var1) (not (= var4 0)))) (inv_main22 (newHeap (alloc var0 (O_TSLL var2))) var3 var1 (newAddr (alloc var0 (O_TSLL var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int)) (or (not (and (inv_main23 var0 var5 var1) (and (= var3 0) (and (= var7 0) (and (and (= var4 (write var0 var1 (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 var1))) (data (getTSLL (read var0 var1))))))) (= var2 var5)) (= var6 var1)))))) (inv_main33 var4 var2 var6))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int)) (or (not (and (inv_main23 var0 var5 var2) (and (not (= var1 0)) (and (= var7 0) (and (and (= var4 (write var0 var2 (O_TSLL (TSLL nullAddr (opt (getTSLL (read var0 var2))) (data (getTSLL (read var0 var2))))))) (= var3 var5)) (= var6 var2)))))) (inv_main32 var4 var3 var6))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main3 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main6 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main11 var0 var2 var1) (not (is-O_TSLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main10 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main10 var0 var1) (not (is-O_TSLL (read var0 (opt (getTSLL (read var0 var1))))))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main12 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main15 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main13 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main16 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main22 var0 var3 var1 var2) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main21 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main23 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main26 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main31 var0 var3 var1 var2) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main30 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main30 var0 var2 var1) (not (is-O_TSLL (read var0 (opt (getTSLL (read var0 var1))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main32 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main35 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main33 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main36 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main39 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (not (and (inv_main44 var0 var3 var1 var2) (and (= var2 2) (not (is-O_TSLL (read var0 var1))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (not (and (inv_main46 var0 var3 var1 var2) (and (not (= var2 0)) (not (is-O_TSLL (read var0 var1))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (not (and (inv_main46 var0 var3 var1 var2) (and (not (= var2 0)) (not (is-O_TSLL (read var0 (opt (getTSLL (read var0 var1)))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr)) (not (and (inv_main48 var0 var3 var1 var2) (and (= var2 0) (not (is-O_TSLL (read var0 var1))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (inv_main42 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main40 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main56 var0 var2 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main57 var0 var2 var1) (not (is-O_TSLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main60 var0 var2 var1) (not (is-O_TSLL (read var0 var2)))))))
(check-sat)
