(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defHeapObject)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main101 (Heap Int Int Addr Int Addr Int Addr Addr) Bool)
(declare-fun inv_main104 (Heap Int Int Addr Int Addr Int) Bool)
(declare-fun inv_main12 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main32 (Heap Int Int Int Int Addr Addr Int Addr Int) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main38 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main44 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main56 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main59 (Heap Int Int Addr Int Int Int Int Addr Int) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main63 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main67 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main68 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main69 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main72 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main73 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main74 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main75 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main76 (Heap Int Int Addr Int Addr) Bool)
(declare-fun inv_main77 (Heap Int Int Addr Int Addr) Bool)
(declare-fun inv_main82 (Heap Int Int Addr Int Addr Int) Bool)
(declare-fun inv_main85 (Heap Int Int Addr Int Addr Int) Bool)
(declare-fun inv_main97 (Heap Int Int Addr Int Addr Int Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (or (not (inv_main23 var1 var2 var3 var6 var5 var4 var0)) (inv_main44 (write var1 var0 (O_node (node var4 (prev (getnode (read var1 var0))) (data (getnode (read var1 var0)))))) var2 var3 var6 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Addr) (var14 Int) (var15 Int) (var16 Int)) (or (not (and (inv_main97 var7 var14 var15 var10 var4 var13 var3 var11) (and (not (= var2 var5)) (and (and (and (and (and (and (and (and (= var12 var7) (= var0 var14)) (= var6 var15)) (= var9 var10)) (= var1 var4)) (= var8 var13)) (= var16 var3)) (= var5 var11)) (= var2 (next (getnode (read var7 var11)))))))) (inv_main101 var12 var0 var6 var9 var1 var8 var16 var5 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap) (var15 Int) (var16 Addr) (var17 Int) (var18 Addr) (var19 Addr) (var20 Heap) (var21 Int) (var22 Int) (var23 Addr) (var24 Int) (var25 Addr) (var26 Int) (var27 Int) (var28 Int)) (or (not (and (inv_main101 var20 var15 var28 var23 var5 var13 var3 var10 var4) (and (not (= var7 var11)) (and (and (and (and (and (and (and (and (and (and (= var9 var20) (= var6 var15)) (= var26 var28)) (= var19 var23)) (= var17 var5)) (= var25 var13)) (= var24 var3)) (= var2 var10)) (= var12 var4)) (= var16 (next (getnode (read var20 var4))))) (and (and (and (and (and (and (and (and (and (= var14 (write var9 var12 defObj)) (= var0 var6)) (= var27 var26)) (= var8 var19)) (= var21 var17)) (= var1 var25)) (= var22 var24)) (= var11 var2)) (= var18 var12)) (= var7 var16)))))) (inv_main101 var14 var0 var27 var8 var21 var1 var22 var11 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int)) (or (not (and (inv_main85 var3 var13 var14 var6 var2 var12 var1) (and (not (= var8 var7)) (and (and (and (and (and (and (and (= var5 var3) (= var4 var13)) (= var11 var14)) (= var7 var6)) (= var10 var2)) (= var9 var12)) (= var0 var1)) (= var8 (next (getnode (read var3 var12)))))))) (inv_main82 var5 var4 var11 var7 var10 var8 (+ var0 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Int)) (or (not (and (inv_main77 var8 var9 var12 var0 var5 var7) (and (and (and (and (and (and (= var4 var8) (= var6 var9)) (= var2 var12)) (= var10 var0)) (= var1 var5)) (= var11 var7)) (= var3 (next (getnode (read var8 var7))))))) (inv_main82 var4 var6 var2 var10 var1 var3 1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 node) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int)) (or (not (and (inv_main22 var3 var13 var15 var7 var6 var5 var2) (and (and (not (= nullAddr var1)) (and (and (and (and (and (and (and (and (= var0 (newHeap (alloc var3 (O_node var9)))) (= var16 var13)) (= var14 var15)) (= var12 var7)) (= var8 var6)) (= var4 var5)) (= var10 var2)) (= var11 var6)) (= var1 (newAddr (alloc var3 (O_node var9)))))) (<= 0 (+ (+ var7 (- 1)) (- 1)))))) (inv_main29 var0 var16 var14 var12 var8 var4 var10 var11 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_main12 var1 var2 var4 var6 var5 var3 var0)) (inv_main18 (write var1 var0 (O_node (node nullAddr (prev (getnode (read var1 var0))) (data (getnode (read var1 var0)))))) var2 var4 var6 var5 var3 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int)) (or (not (and (inv_main76 var3 var4 var5 var0 var1 var2) (= var1 (data (getnode (read var3 var2)))))) (inv_main77 var3 var4 var5 var0 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main41 var4 var13 var14 var9 var8 var7 var3 var5) (and (and (and (and (and (and (and (= var6 (write var4 var7 (O_node (node (next (getnode (read var4 var7))) var5 (data (getnode (read var4 var7))))))) (= var1 var13)) (= var15 var14)) (= var11 var9)) (= var0 var8)) (= var10 var7)) (= var12 var3)) (= var2 var5)))) (inv_main22 var6 var1 var15 (+ var11 (- 1)) var0 var2 var12))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int)) (or (not (and (inv_main38 var3 var13 var15 var11 var10 var9 var2 var4) (and (= var14 nullAddr) (and (and (and (and (and (and (and (= var5 (write var3 var4 (O_node (node var9 (prev (getnode (read var3 var4))) (data (getnode (read var3 var4))))))) (= var6 var13)) (= var12 var15)) (= var8 var11)) (= var7 var10)) (= var14 var9)) (= var0 var2)) (= var1 var4))))) (inv_main22 var5 var6 var12 (+ var8 (- 1)) var7 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Int) (var13 Int)) (or (not (and (inv_main19 var5 var12 var13 var8 var7 var6 var11) (and (and (and (and (and (and (= var3 (write var5 var11 (O_node (node (next (getnode (read var5 var11))) (prev (getnode (read var5 var11))) var6)))) (= var1 var12)) (= var9 var13)) (= var10 var8)) (= var2 var7)) (= var0 var6)) (= var4 var11)))) (inv_main22 var3 var1 var9 var10 var2 var4 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_main18 var1 var2 var4 var6 var5 var3 var0)) (inv_main19 (write var1 var0 (O_node (node (next (getnode (read var1 var0))) nullAddr (data (getnode (read var1 var0)))))) var2 var4 var6 var5 var3 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (or (not (inv_main72 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5)) (inv_main73 (write var4 var8 (O_node (node var5 (prev (getnode (read var4 var8))) (data (getnode (read var4 var8)))))) var7 var9 var0 var2 var3 var6 var8 var1 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (or (not (inv_main73 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5)) (inv_main74 (write var4 var5 (O_node (node (next (getnode (read var4 var5))) var8 (data (getnode (read var4 var5)))))) var7 var9 var0 var2 var3 var6 var8 var1 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (or (not (inv_main74 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5)) (inv_main75 (write var4 var1 (O_node (node var8 (prev (getnode (read var4 var1))) (data (getnode (read var4 var1)))))) var7 var9 var0 var2 var3 var6 var8 var1 var5))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int)) (or (not (inv_main32 var4 var5 var6 var9 var8 var7 var3 var2 var0 var1)) (inv_main32 var4 var5 var6 var9 var8 var7 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 node) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap) (var11 Addr) (var12 Int) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int)) (or (not (and (inv_main22 var4 var15 var16 var9 var8 var7 var1) (and (and (= nullAddr var11) (and (and (and (and (and (and (and (and (= var10 (newHeap (alloc var4 (O_node var5)))) (= var3 var15)) (= var0 var16)) (= var12 var9)) (= var2 var8)) (= var13 var7)) (= var14 var1)) (= var6 var8)) (= var11 (newAddr (alloc var4 (O_node var5)))))) (<= 0 (+ (+ var9 (- 1)) (- 1)))))) (inv_main32 var10 var3 var0 var12 var2 var13 var14 var6 var11 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (or (not (and (inv_main22 var1 var2 var3 var6 var5 var4 var0) (not (<= 0 (+ (+ var6 (- 1)) (- 1)))))) (inv_main23 var1 var2 var3 var6 var5 var4 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (or (not (and (inv_main82 var4 var5 var6 var0 var2 var3 var1) (not (= var6 (data (getnode (read var4 var3))))))) (inv_main104 var4 var5 var6 var0 var2 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int)) (or (not (and (inv_main85 var3 var13 var14 var6 var2 var12 var1) (and (not (= (+ var0 1) (+ 1 var4))) (and (= var8 var7) (and (and (and (and (and (and (and (= var5 var3) (= var4 var13)) (= var11 var14)) (= var7 var6)) (= var10 var2)) (= var9 var12)) (= var0 var1)) (= var8 (next (getnode (read var3 var12))))))))) (inv_main104 var5 var4 var11 var7 var10 var8 (+ var0 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (or (not (and (inv_main76 var4 var5 var6 var0 var1 var3) (not (= var1 (data (getnode (read var4 var3))))))) (inv_main104 var4 var5 var6 var0 var1 var3 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (or (not (and (inv_main82 var4 var5 var6 var0 var2 var3 var1) (= var6 (data (getnode (read var4 var3)))))) (inv_main85 var4 var5 var6 var0 var2 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Addr) (var14 Int)) (or (not (and (inv_main69 var6 var12 var14 var10 var1 var5 var11 var8) (and (and (and (and (and (and (= var4 (write var6 var8 (O_node (node (next (getnode (read var6 var8))) var8 (data (getnode (read var6 var8))))))) (= var9 var12)) (= var7 var14)) (= var13 var10)) (= var3 var1)) (= var2 var5)) (= var0 var11)))) (inv_main76 var4 var9 var7 var13 var3 var13))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Addr) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main75 var3 var13 var14 var6 var0 var2 var12 var5 var8 var11) (and (and (and (and (and (and (= var16 (write var3 var5 (O_node (node (next (getnode (read var3 var5))) var8 (data (getnode (read var3 var5))))))) (= var9 var13)) (= var4 var14)) (= var1 var6)) (= var7 var0)) (= var15 var2)) (= var10 var12)))) (inv_main76 var16 var9 var4 var1 var7 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main56 var4 var7 var8 var0 var1 var3 var6 var5 var2)) (inv_main62 (write var4 var2 (O_node (node nullAddr (prev (getnode (read var4 var2))) (data (getnode (read var4 var2)))))) var7 var8 var0 var1 var3 var6 var5 var2))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Int)) (or (not (and (inv_main67 var4 var13 var16 var6 var1 var3 var12 var5) (and (and (and (and (and (and (and (and (= var0 var4) (= var15 var13)) (= var11 var16)) (= var14 var6)) (= var8 var1)) (= var9 var3)) (= var7 var12)) (= var2 var5)) (= var10 (prev (getnode (read var4 var6))))))) (inv_main72 var0 var15 var11 var2 var8 var9 var7 var2 var10 var14))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Heap) (var15 Int) (var16 Addr) (var17 Int)) (or (not (and (inv_main36 var1 var15 var17 var7 var6 var5 var0 var12 var9) (and (and (and (and (and (and (and (and (= var14 (write var1 var9 (O_node (node (next (getnode (read var1 var9))) (prev (getnode (read var1 var9))) var12)))) (= var13 var15)) (= var11 var17)) (= var3 var7)) (= var2 var6)) (= var4 var5)) (= var16 var0)) (= var8 var12)) (= var10 var9)))) (inv_main38 var14 var13 var11 var3 var2 var4 var16 var10))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_main15 var2 var3 var5 var7 var6 var4 var1 var0)) (inv_main15 var2 var3 var5 var7 var6 var4 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Heap) (var8 Int) (var9 node) (var10 Int)) (or (not (and (inv_main4 var7 var8 var10) (and (= nullAddr var6) (and (and (and (and (and (and (= var4 (newHeap (alloc var7 (O_node var9)))) (= var2 var8)) (= var0 var10)) (= var3 var8)) (= var5 var10)) (= var1 var10)) (= var6 (newAddr (alloc var7 (O_node var9)))))))) (inv_main15 var4 var2 var0 var3 var5 var1 var6 1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int)) (or (not (and (inv_main63 var6 var15 var17 var10 var3 var5 var14 var7 var12) (and (= nullAddr var4) (and (and (and (and (and (and (and (and (= var0 (write var6 var12 (O_node (node (next (getnode (read var6 var12))) (prev (getnode (read var6 var12))) var7)))) (= var16 var15)) (= var2 var17)) (= var4 var10)) (= var8 var3)) (= var11 var5)) (= var13 var14)) (= var1 var7)) (= var9 var12))))) (inv_main68 var0 var16 var2 var9 var8 var11 var13 var9))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int)) (or (not (and (inv_main63 var6 var15 var17 var10 var3 var5 var14 var7 var12) (and (not (= nullAddr var4)) (and (and (and (and (and (and (and (and (= var0 (write var6 var12 (O_node (node (next (getnode (read var6 var12))) (prev (getnode (read var6 var12))) var7)))) (= var16 var15)) (= var2 var17)) (= var4 var10)) (= var8 var3)) (= var11 var5)) (= var13 var14)) (= var1 var7)) (= var9 var12))))) (inv_main67 var0 var16 var2 var4 var8 var11 var13 var9))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int)) (or (not (and (inv_main85 var3 var13 var14 var6 var2 var12 var1) (and (not (= nullAddr var7)) (and (= (+ var0 1) (+ 1 var4)) (and (= var8 var7) (and (and (and (and (and (and (and (= var5 var3) (= var4 var13)) (= var11 var14)) (= var7 var6)) (= var10 var2)) (= var9 var12)) (= var0 var1)) (= var8 (next (getnode (read var3 var12)))))))))) (inv_main97 var5 var4 var11 var7 var10 var8 (+ var0 1) var7))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (or (not (inv_main35 var3 var4 var5 var8 var7 var6 var2 var1 var0)) (inv_main36 (write var3 var0 (O_node (node (next (getnode (read var3 var0))) nullAddr (data (getnode (read var3 var0)))))) var4 var5 var8 var7 var6 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (or (not (inv_main68 var3 var5 var7 var0 var1 var2 var4 var6)) (inv_main69 (write var3 var6 (O_node (node var6 (prev (getnode (read var3 var6))) (data (getnode (read var3 var6)))))) var5 var7 var0 var1 var2 var4 var6))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main38 var2 var13 var15 var7 var6 var5 var1 var3) (and (not (= var11 nullAddr)) (and (and (and (and (and (and (and (= var12 (write var2 var3 (O_node (node var5 (prev (getnode (read var2 var3))) (data (getnode (read var2 var3))))))) (= var0 var13)) (= var8 var15)) (= var4 var7)) (= var14 var6)) (= var11 var5)) (= var9 var1)) (= var10 var3))))) (inv_main41 var12 var0 var8 var4 var14 var11 var9 var10))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 node) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main4 var6 var8 var10) (and (not (= nullAddr var1)) (and (and (and (and (and (and (= var0 (newHeap (alloc var6 (O_node var2)))) (= var7 var8)) (= var9 var10)) (= var5 var8)) (= var4 var10)) (= var3 var10)) (= var1 (newAddr (alloc var6 (O_node var2)))))))) (inv_main12 var0 var7 var9 var5 var4 var3 var1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Int) (var3 Int) (var4 node) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Addr) (var16 Int) (var17 Int) (var18 Addr) (var19 Int) (var20 Addr) (var21 Int) (var22 Int) (var23 Int)) (or (not (and (inv_main44 var9 var22 var23 var14 var13 var12 var7) (and (and (not (= nullAddr var10)) (and (and (and (and (and (and (and (and (= var5 (newHeap (alloc var0 (O_node var4)))) (= var8 var2)) (= var16 var17)) (= var15 var20)) (= var6 5)) (= var11 3)) (= var21 5)) (= var19 5)) (= var10 (newAddr (alloc var0 (O_node var4)))))) (and (and (and (and (and (and (= var0 (write var9 var12 (O_node (node (next (getnode (read var9 var12))) var7 (data (getnode (read var9 var12))))))) (= var2 var22)) (= var17 var23)) (= var1 var14)) (= var3 var13)) (= var20 var12)) (= var18 var7))))) (inv_main56 var5 var8 var16 var15 var6 var11 var21 var19 var10))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main62 var4 var7 var8 var0 var1 var3 var6 var5 var2)) (inv_main63 (write var4 var2 (O_node (node (next (getnode (read var4 var2))) nullAddr (data (getnode (read var4 var2)))))) var7 var8 var0 var1 var3 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (inv_main59 var5 var8 var9 var0 var2 var4 var7 var6 var3 var1)) (inv_main59 var5 var8 var9 var0 var2 var4 var7 var6 var3 var1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 node) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Heap) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Addr) (var20 Addr) (var21 Int) (var22 Int) (var23 Int)) (or (not (and (inv_main44 var14 var21 var22 var17 var16 var15 var13) (and (and (= nullAddr var12) (and (and (and (and (and (and (and (and (= var11 (newHeap (alloc var1 (O_node var6)))) (= var3 var5)) (= var4 var18)) (= var8 var20)) (= var2 5)) (= var10 3)) (= var23 5)) (= var9 5)) (= var12 (newAddr (alloc var1 (O_node var6)))))) (and (and (and (and (and (and (= var1 (write var14 var15 (O_node (node (next (getnode (read var14 var15))) var13 (data (getnode (read var14 var15))))))) (= var5 var21)) (= var18 var22)) (= var0 var17)) (= var7 var16)) (= var20 var15)) (= var19 var13))))) (inv_main59 var11 var3 var4 var8 var2 var10 var23 var9 var12 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (or (not (inv_main29 var3 var4 var5 var8 var7 var6 var2 var1 var0)) (inv_main35 (write var3 var0 (O_node (node nullAddr (prev (getnode (read var3 var0))) (data (getnode (read var3 var0)))))) var4 var5 var8 var7 var6 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main12 var1 var2 var4 var6 var5 var3 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main18 var1 var2 var4 var6 var5 var3 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main19 var1 var2 var4 var6 var5 var3 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (not (and (inv_main29 var3 var4 var5 var8 var7 var6 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (not (and (inv_main35 var3 var4 var5 var8 var7 var6 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (not (and (inv_main36 var3 var4 var5 var8 var7 var6 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main38 var1 var3 var4 var7 var6 var5 var0 var2) (not (is-O_node (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main41 var1 var3 var4 var7 var6 var5 var0 var2) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main23 var1 var2 var3 var6 var5 var4 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main44 var1 var2 var3 var6 var5 var4 var0) (not (is-O_node (read var1 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main56 var4 var7 var8 var0 var1 var3 var6 var5 var2) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main62 var4 var7 var8 var0 var1 var3 var6 var5 var2) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main63 var4 var7 var8 var0 var1 var3 var6 var5 var2) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main68 var3 var5 var7 var0 var1 var2 var4 var6) (not (is-O_node (read var3 var6)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main69 var3 var5 var7 var0 var1 var2 var4 var6) (not (is-O_node (read var3 var6)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main67 var3 var5 var7 var0 var1 var2 var4 var6) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (not (and (inv_main72 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5) (not (is-O_node (read var4 var8)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (not (and (inv_main73 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5) (not (is-O_node (read var4 var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (not (and (inv_main74 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int)) (not (and (inv_main75 var4 var7 var9 var0 var2 var3 var6 var8 var1 var5) (not (is-O_node (read var4 var8)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int)) (not (and (inv_main76 var3 var4 var5 var0 var1 var2) (not (is-O_node (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int)) (not (and (inv_main77 var3 var4 var5 var0 var1 var2) (not (is-O_node (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (not (and (inv_main82 var4 var5 var6 var0 var2 var3 var1) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (not (and (inv_main85 var4 var5 var6 var0 var2 var3 var1) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main97 var5 var6 var7 var0 var3 var4 var2 var1) (not (is-O_node (read var5 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Heap) (var7 Int) (var8 Int)) (not (and (inv_main101 var6 var7 var8 var0 var4 var5 var2 var1 var3) (not (is-O_node (read var6 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (not (inv_main104 var4 var5 var6 var0 var2 var3 var1))))
(check-sat)
