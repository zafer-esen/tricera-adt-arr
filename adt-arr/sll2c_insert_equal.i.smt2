(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (next Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main12 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main21 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main28 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main31 (Heap Int Int Int Int Addr Addr Int Addr Int) Bool)
(declare-fun inv_main34 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main49 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main52 (Heap Int Int Addr Int Int Int Int Addr Int) Bool)
(declare-fun inv_main55 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main59 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main65 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main67 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main69 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main70 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main71 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main73 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main76 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main88 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main92 (Heap Int Int Addr Addr Int Addr Addr) Bool)
(declare-fun inv_main95 (Heap Int Int Addr Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 node) (var9 Heap) (var10 Int)) (or (not (and (inv_main4 var3 var2 var0) (and (not (= nullAddr var5)) (and (and (and (and (and (and (= var9 (newHeap (alloc var3 (O_node var8)))) (= var6 var2)) (= var10 var0)) (= var1 var2)) (= var4 var0)) (= var7 var0)) (= var5 (newAddr (alloc var3 (O_node var8)))))))) (inv_main12 var9 var6 var10 var1 var4 var7 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Int) (var17 Addr)) (or (not (and (inv_main34 var10 var8 var1 var16 var11 var17 var6 var5 var15) (and (and (and (and (and (and (and (and (= var14 (write var10 var15 (O_node (node (next (getnode (read var10 var15))) var5)))) (= var9 var8)) (= var7 var1)) (= var13 var16)) (= var0 var11)) (= var2 var17)) (= var12 var6)) (= var4 var5)) (= var3 var15)))) (inv_main36 var14 var9 var7 var13 var0 var2 var12 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Int)) (or (not (inv_main52 var7 var3 var0 var5 var4 var1 var2 var6 var8 var9)) (inv_main52 var7 var3 var0 var5 var4 var1 var2 var6 var8 var9))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 node) (var13 Int) (var14 Int) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Heap) (var20 Addr) (var21 Int) (var22 Addr) (var23 Int) (var24 Heap) (var25 Int) (var26 Addr) (var27 Heap) (var28 Int) (var29 Int) (var30 Addr) (var31 Int)) (or (not (and (inv_main22 var27 var23 var0 var11 var28 var30 var5) (and (and (and (= nullAddr var22) (and (and (and (and (and (and (and (and (= var1 (newHeap (alloc var19 (O_node var12)))) (= var18 var16)) (= var2 var17)) (= var15 var26)) (= var14 var21)) (= var13 var10)) (= var3 var8)) (= var4 var10)) (= var22 (newAddr (alloc var19 (O_node var12)))))) (and (and (and (and (and (and (= var19 var24) (= var16 var6)) (= var17 var25)) (= var26 var7)) (= var21 3)) (= var10 var25)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var31)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var31)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var31)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var31))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (= var8 var31)))) (and (and (and (and (and (and (= var24 (write var27 var5 (O_node (node var30 (data (getnode (read var27 var5))))))) (= var6 var23)) (= var25 var0)) (= var29 var11)) (= var9 var28)) (= var7 var30)) (= var20 var5))))) (inv_main52 var1 var18 var2 var15 var14 var13 var3 var4 var22 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (and (inv_main21 var2 var1 var0 var5 var3 var6 var4) (not (<= 0 (+ (+ var5 (- 1)) (- 1)))))) (inv_main22 var2 var1 var0 var5 var3 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (or (not (inv_main12 var2 var1 var0 var5 var3 var6 var4)) (inv_main18 (write var2 var4 (O_node (node nullAddr (data (getnode (read var2 var4)))))) var1 var0 var5 var3 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap)) (or (not (and (inv_main73 var5 var1 var0 var2 var4 var3) (= var0 (data (getnode (read var5 var4)))))) (inv_main76 var5 var1 var0 var2 var4 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr)) (or (not (inv_main31 var3 var2 var0 var8 var4 var9 var6 var5 var7 var1)) (inv_main31 var3 var2 var0 var8 var4 var9 var6 var5 var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 node) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr)) (or (not (and (inv_main21 var11 var9 var0 var15 var12 var16 var6) (and (and (= nullAddr var5) (and (and (and (and (and (and (and (and (= var4 (newHeap (alloc var11 (O_node var7)))) (= var10 var9)) (= var1 var0)) (= var13 var15)) (= var8 var12)) (= var14 var16)) (= var2 var6)) (= var3 var12)) (= var5 (newAddr (alloc var11 (O_node var7)))))) (<= 0 (+ (+ var15 (- 1)) (- 1)))))) (inv_main31 var4 var10 var1 var13 var8 var14 var2 var3 var5 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int) (var9 Addr) (var10 Heap) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Addr)) (or (not (and (inv_main88 var11 var8 var0 var9 var5 var4 var7) (and (not (= var13 var3)) (and (and (and (and (and (and (and (= var10 var11) (= var6 var8)) (= var2 var0)) (= var14 var9)) (= var12 var5)) (= var1 var4)) (= var3 var7)) (= var13 (next (getnode (read var11 var7)))))))) (inv_main92 var10 var6 var2 var14 var12 var1 var3 var13))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Addr) (var16 Int) (var17 Addr) (var18 Addr) (var19 Heap) (var20 Int) (var21 Int) (var22 Int) (var23 Addr) (var24 Heap) (var25 Addr)) (or (not (and (inv_main92 var19 var16 var1 var17 var5 var4 var13 var15) (and (not (= var11 var9)) (and (and (and (and (and (and (and (and (and (= var24 var19) (= var2 var16)) (= var22 var1)) (= var3 var17)) (= var10 var5)) (= var21 var4)) (= var12 var13)) (= var6 var15)) (= var23 (next (getnode (read var19 var15))))) (and (and (and (and (and (and (and (and (= var7 (write var24 var6 defObj)) (= var20 var2)) (= var0 var22)) (= var18 var3)) (= var8 var10)) (= var14 var21)) (= var9 var12)) (= var25 var6)) (= var11 var23)))))) (inv_main92 var7 var20 var0 var18 var8 var14 var9 var11))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (and (inv_main59 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (and (not (= var7 nullAddr)) (not (<= 0 (+ var2 (- 1))))))) (inv_main65 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (and (inv_main59 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (and (= var5 nullAddr) (and (= var7 nullAddr) (not (<= 0 (+ var2 (- 1)))))))) (inv_main70 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (and (inv_main59 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (and (not (= var5 nullAddr)) (and (= var7 nullAddr) (not (<= 0 (+ var2 (- 1)))))))) (inv_main69 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (inv_main65 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8)) (inv_main67 (write var6 var7 (O_node (node var9 (data (getnode (read var6 var7)))))) var3 var0 var5 var4 var1 var2 var9 var7 var8))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr)) (or (not (and (inv_main76 var7 var2 var0 var3 var6 var5) (and (not (= nullAddr var12)) (and (= (+ var10 1) (+ 1 var11)) (and (= var9 var12) (and (and (and (and (and (and (= var1 var7) (= var11 var2)) (= var8 var0)) (= var12 var3)) (= var4 var6)) (= var10 var5)) (= var9 (next (getnode (read var7 var6)))))))))) (inv_main88 var1 var11 var8 var12 var9 (+ var10 1) var12))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (inv_main69 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8)) (inv_main71 (write var6 var9 (O_node (node var5 (data (getnode (read var6 var9)))))) var3 var0 var5 var4 var1 var2 var9 var7 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (and (inv_main59 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (<= 0 (+ var2 (- 1))))) (inv_main62 var6 var3 var0 var5 var4 var1 var2 var9 var8 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Int) (var14 Addr) (var15 Heap) (var16 Addr) (var17 Addr) (var18 Int) (var19 Addr) (var20 Int)) (or (not (and (inv_main62 var15 var13 var0 var14 var3 var1 var2 var12 var10 var17) (and (and (and (and (and (and (and (and (and (and (= var4 var15) (= var6 var13)) (= var20 var0)) (= var16 var14)) (= var18 var3)) (= var11 var1)) (= var8 var2)) (= var7 var12)) (= var19 var10)) (= var9 var17)) (= var5 (next (getnode (read var15 var17))))))) (inv_main59 var4 var6 var20 var16 var18 var11 (+ var8 (- 1)) var7 var19 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Int) (var17 Heap) (var18 Addr) (var19 Addr) (var20 Int) (var21 Addr) (var22 Heap) (var23 Int) (var24 Int) (var25 Heap) (var26 Int)) (or (not (and (inv_main55 var17 var12 var1 var14 var5 var2 var3 var15 var18) (and (and (and (and (and (and (and (and (and (= var22 var25) (= var11 var10)) (= var24 var4)) (= var9 var6)) (= var0 var26)) (= var16 var23)) (= var13 var7)) (= var8 var19)) (= var21 nullAddr)) (and (and (and (and (and (and (and (and (= var25 (write var17 var18 (O_node (node (next (getnode (read var17 var18))) var15)))) (= var10 var12)) (= var4 var1)) (= var6 var14)) (= var26 var5)) (= var23 var2)) (= var7 var3)) (= var20 var15)) (= var19 var18))))) (inv_main59 var22 var11 var24 var9 var0 var16 var13 var8 var21 var9))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap)) (or (not (and (inv_main73 var5 var1 var0 var2 var4 var3) (not (= var0 (data (getnode (read var5 var4))))))) (inv_main95 var5 var1 var0 var2 var4 var3))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr)) (or (not (and (inv_main76 var7 var2 var0 var3 var6 var5) (and (not (= (+ var10 1) (+ 1 var11))) (and (= var9 var12) (and (and (and (and (and (and (= var1 var7) (= var11 var2)) (= var8 var0)) (= var12 var3)) (= var4 var6)) (= var10 var5)) (= var9 (next (getnode (read var7 var6))))))))) (inv_main95 var1 var11 var8 var12 var9 (+ var10 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr)) (or (not (and (inv_main36 var10 var7 var0 var13 var11 var14 var3 var2) (and (and (and (and (and (and (and (= var9 (write var10 var2 (O_node (node var14 (data (getnode (read var10 var2))))))) (= var12 var7)) (= var1 var0)) (= var4 var13)) (= var8 var11)) (= var15 var14)) (= var5 var3)) (= var6 var2)))) (inv_main21 var9 var12 var1 (+ var4 (- 1)) var8 var6 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main18 var10 var8 var0 var13 var11 var6 var5) (and (and (and (and (and (and (= var9 (write var10 var5 (O_node (node (next (getnode (read var10 var5))) var6)))) (= var12 var8)) (= var3 var0)) (= var7 var13)) (= var4 var11)) (= var1 var6)) (= var2 var5)))) (inv_main21 var9 var12 var3 var7 var4 var2 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 node) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Heap) (var22 Heap) (var23 Int) (var24 Addr) (var25 Heap) (var26 Int) (var27 Heap) (var28 Int) (var29 Int) (var30 Addr) (var31 Int)) (or (not (and (inv_main22 var25 var20 var0 var6 var26 var30 var1) (and (and (and (not (= nullAddr var14)) (and (and (and (and (and (and (and (and (= var22 (newHeap (alloc var27 (O_node var7)))) (= var10 var28)) (= var5 var19)) (= var8 var24)) (= var9 var12)) (= var11 var15)) (= var18 var17)) (= var13 var15)) (= var14 (newAddr (alloc var27 (O_node var7)))))) (and (and (and (and (and (and (= var27 var21) (= var28 var2)) (= var19 var23)) (= var24 var3)) (= var12 3)) (= var15 var23)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var31)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var31)))) (- 1)))) (or (not (<= 0 (+ (+ var2 (* (- 2) var31)) (- 1)))) (<= 0 (+ var2 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var31))) (- 1)))) (<= 0 (+ (* (- 1) var2) (- 1))))) (= var17 var31)))) (and (and (and (and (and (and (= var21 (write var25 var1 (O_node (node var30 (data (getnode (read var25 var1))))))) (= var2 var20)) (= var23 var0)) (= var29 var6)) (= var4 var26)) (= var3 var30)) (= var16 var1))))) (inv_main49 var22 var10 var5 var8 var9 var11 var18 var13 var14))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr)) (or (not (and (inv_main76 var7 var2 var0 var3 var6 var5) (and (not (= var9 var12)) (and (and (and (and (and (and (= var1 var7) (= var11 var2)) (= var8 var0)) (= var12 var3)) (= var4 var6)) (= var10 var5)) (= var9 (next (getnode (read var7 var6)))))))) (inv_main73 var1 var11 var8 var12 var9 (+ var10 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Heap) (var14 Addr) (var15 Addr) (var16 Int)) (or (not (and (inv_main67 var13 var11 var1 var12 var4 var2 var3 var9 var7 var15) (and (and (and (and (and (and (= var6 (write var13 var9 (O_node (node var15 (data (getnode (read var13 var9))))))) (= var0 var11)) (= var16 var1)) (= var14 var12)) (= var8 var4)) (= var5 var2)) (= var10 var3)))) (inv_main73 var6 var0 var16 var14 var14 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Heap) (var12 Int) (var13 Addr) (var14 Heap) (var15 Int) (var16 Addr) (var17 Addr) (var18 Int) (var19 Addr)) (or (not (and (inv_main71 var14 var12 var1 var13 var5 var2 var3 var9 var6 var16) (and (and (and (and (and (and (and (and (and (= var11 (write var14 var13 (O_node (node var9 (data (getnode (read var14 var13))))))) (= var10 var12)) (= var4 var1)) (= var8 var13)) (= var15 var5)) (= var0 var2)) (= var18 var3)) (= var17 var9)) (= var7 var6)) (= var19 var16)))) (inv_main73 var11 var10 var4 var17 var17 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Addr) (var15 Heap) (var16 Int) (var17 Addr) (var18 Addr) (var19 Int)) (or (not (and (inv_main70 var15 var12 var1 var14 var5 var2 var3 var10 var7 var18) (and (and (and (and (and (and (and (and (and (= var9 (write var15 var10 (O_node (node var10 (data (getnode (read var15 var10))))))) (= var13 var12)) (= var8 var1)) (= var17 var14)) (= var6 var5)) (= var19 var2)) (= var16 var3)) (= var4 var10)) (= var11 var7)) (= var0 var18)))) (inv_main73 var9 var13 var8 var4 var4 0))))
(assert (forall ((var0 node) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr)) (or (not (and (inv_main21 var12 var8 var1 var15 var13 var16 var6) (and (and (not (= nullAddr var2)) (and (and (and (and (and (and (and (and (= var3 (newHeap (alloc var12 (O_node var0)))) (= var7 var8)) (= var4 var1)) (= var11 var15)) (= var10 var13)) (= var14 var16)) (= var5 var6)) (= var9 var13)) (= var2 (newAddr (alloc var12 (O_node var0)))))) (<= 0 (+ (+ var15 (- 1)) (- 1)))))) (inv_main28 var3 var7 var4 var11 var10 var14 var5 var9 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (or (not (inv_main28 var2 var1 var0 var7 var3 var8 var5 var4 var6)) (inv_main34 (write var2 var6 (O_node (node nullAddr (data (getnode (read var2 var6)))))) var1 var0 var7 var3 var8 var5 var4 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_main15 var2 var1 var0 var5 var3 var7 var4 var6)) (inv_main15 var2 var1 var0 var5 var3 var7 var4 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 node) (var9 Int) (var10 Int)) (or (not (and (inv_main4 var3 var1 var0) (and (= nullAddr var7) (and (and (and (and (and (and (= var5 (newHeap (alloc var3 (O_node var8)))) (= var4 var1)) (= var10 var0)) (= var9 var1)) (= var2 var0)) (= var6 var0)) (= var7 (newAddr (alloc var3 (O_node var8)))))))) (inv_main15 var5 var4 var10 var9 var2 var6 var7 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr)) (or (not (inv_main49 var7 var3 var0 var5 var4 var1 var2 var6 var8)) (inv_main55 (write var7 var8 (O_node (node nullAddr (data (getnode (read var7 var8)))))) var3 var0 var5 var4 var1 var2 var6 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main12 var2 var1 var0 var5 var3 var6 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main18 var2 var1 var0 var5 var3 var6 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (not (and (inv_main28 var2 var1 var0 var7 var3 var8 var5 var4 var6) (not (is-O_node (read var2 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (not (and (inv_main34 var2 var1 var0 var7 var3 var8 var5 var4 var6) (not (is-O_node (read var2 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (not (and (inv_main36 var2 var1 var0 var6 var3 var7 var5 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Addr)) (not (and (inv_main22 var2 var1 var0 var5 var3 var6 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr)) (not (and (inv_main49 var7 var3 var0 var5 var4 var1 var2 var6 var8) (not (is-O_node (read var7 var8)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr)) (not (and (inv_main55 var7 var3 var0 var5 var4 var1 var2 var6 var8) (not (is-O_node (read var7 var8)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (not (and (inv_main62 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (not (is-O_node (read var6 var8)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (not (and (inv_main65 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (not (is-O_node (read var6 var7)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (not (and (inv_main67 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (not (is-O_node (read var6 var9)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (not (and (inv_main69 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (not (is-O_node (read var6 var9)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (not (and (inv_main71 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (not (is-O_node (read var6 var5)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (not (and (inv_main70 var6 var3 var0 var5 var4 var1 var2 var9 var7 var8) (not (is-O_node (read var6 var9)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap)) (not (and (inv_main73 var5 var1 var0 var2 var4 var3) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap)) (not (and (inv_main76 var5 var1 var0 var2 var4 var3) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr)) (not (and (inv_main88 var5 var1 var0 var2 var4 var3 var6) (not (is-O_node (read var5 var6)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr)) (not (and (inv_main92 var6 var2 var1 var3 var5 var4 var7 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap)) (not (inv_main95 var5 var1 var0 var2 var4 var3))))
(check-sat)
