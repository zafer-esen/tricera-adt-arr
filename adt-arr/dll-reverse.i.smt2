(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TDLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TDLL (getTDLL TDLL)) (defObj))
                   ((TDLL (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main11 (Heap Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main13 (Heap Addr Addr) Bool)
(declare-fun inv_main14 (Heap Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main17 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main23 (Heap Addr Addr) Bool)
(declare-fun inv_main25 (Heap Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main40 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main41 (Heap Addr Addr) Bool)
(declare-fun inv_main42 (Heap Addr Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr) Bool)
(declare-fun inv_main48 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr) Bool)
(declare-fun inv_main50 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main54 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main56 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main60 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main63 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main65 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main68 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main69 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main77 (Heap Addr Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main40 var0 var2 var1 var3)) (inv_main39 (write var0 var1 (O_TDLL (TDLL var3 (prev (getTDLL (read var0 var1))) (data (getTDLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main23 var0 var4 var2) (and (and (and (= var5 var0) (= var1 var4)) (= var6 var2)) (= var3 (next (getTDLL (read var0 var2))))))) (inv_main17 var5 var1 var3))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main16 var0 var4 var3) (and (= var1 0) (and (and (= var2 (write var0 var3 (O_TDLL (TDLL (next (getTDLL (read var0 var3))) (prev (getTDLL (read var0 var3))) 0)))) (= var6 var4)) (= var5 var3))))) (inv_main17 var2 var6 var6))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (and (inv_main5 var0 var3) (and (= var4 0) (and (= var1 (write var0 var3 (O_TDLL (TDLL (next (getTDLL (read var0 var3))) (prev (getTDLL (read var0 var3))) 0)))) (= var2 var3))))) (inv_main17 var1 var2 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main13 var0 var4 var1) (and (and (and (= var3 var0) (= var6 var4)) (= var5 var1)) (= var2 (next (getTDLL (read var0 var1))))))) (inv_main14 var3 var6 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main50 var0 var7 var4 var1 var5) (and (not (= var8 nullAddr)) (and (and (and (and (= var9 (write var0 var4 (O_TDLL (TDLL (next (getTDLL (read var0 var4))) var5 (data (getTDLL (read var0 var4))))))) (= var2 var7)) (= var3 var4)) (= var6 var1)) (= var8 var5))))) (inv_main48 var9 var2 var8 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr)) (or (not (and (inv_main44 var0 var8 var3) (and (and (not (= var4 nullAddr)) (and (and (and (= var5 var7) (= var4 var6)) (= var9 var2)) (= var1 nullAddr))) (and (and (= var7 (write var0 var3 (O_TDLL (TDLL (next (getTDLL (read var0 var3))) (prev (getTDLL (read var0 var3))) 2)))) (= var6 var8)) (= var2 var3))))) (inv_main48 var5 var4 var4 var1))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (and (inv_main37 var0 var8 var5) (and (and (not (= var6 nullAddr)) (and (and (and (= var1 var4) (= var6 var7)) (= var9 var3)) (= var2 nullAddr))) (and (and (= var4 (write var0 (next (getTDLL (read var0 var5))) (O_TDLL (TDLL (next (getTDLL (read var0 (next (getTDLL (read var0 var5)))))) (prev (getTDLL (read var0 (next (getTDLL (read var0 var5)))))) 2)))) (= var7 var8)) (= var3 var5))))) (inv_main48 var1 var6 var6 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main17 var0 var3 var2) (and (not (= var6 nullAddr)) (and (= var1 nullAddr) (and (and (and (= var5 var0) (= var4 var3)) (= var6 var2)) (= var1 (next (getTDLL (read var0 var2))))))))) (inv_main29 var5 var4 var6))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (or (not (and (inv_main17 var0 var5 var3) (and (not (= var4 nullAddr)) (and (= var6 0) (and (not (= var7 nullAddr)) (and (and (and (= var2 var0) (= var1 var5)) (= var4 var3)) (= var7 (next (getTDLL (read var0 var3)))))))))) (inv_main29 var2 var1 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (and (inv_main54 var0 var3 var2 var1) (and (not (= var3 nullAddr)) (= var2 nullAddr)))) (inv_main77 var0 var3 var3 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr)) (or (not (and (inv_main77 var0 var9 var3 var1) (and (and (not (= var12 nullAddr)) (and (and (and (and (= var6 var0) (= var4 var9)) (= var11 var3)) (= var7 var1)) (= var2 (next (getTDLL (read var0 var3)))))) (and (and (and (= var10 (write var6 var4 defObj)) (= var8 var4)) (= var12 var2)) (= var5 var7))))) (inv_main77 var10 var12 var12 var5))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main4 var0 var1)) (inv_main5 (write var0 var1 (O_TDLL (TDLL (next (getTDLL (read var0 var1))) nullAddr (data (getTDLL (read var0 var1)))))) var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr)) (or (not (inv_main49 var0 var4 var2 var1 var3)) (inv_main50 (write var0 var2 (O_TDLL (TDLL var1 (prev (getTDLL (read var0 var2))) (data (getTDLL (read var0 var2)))))) var4 var2 var1 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr)) (or (not (and (inv_main69 var0 var9 var6 var1 var10 var5) (and (and (and (and (and (and (= var2 var0) (= var7 var9)) (= var8 var6)) (= var12 var1)) (= var3 var10)) (= var4 var5)) (= var11 (next (getTDLL (read var0 var6))))))) (inv_main68 var2 var7 var11 var12 var3 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int)) (or (not (and (inv_main63 var0 var10 var5 var1 var11 var4) (and (not (= var6 2)) (and (and (and (and (and (and (= var3 var0) (= var2 var10)) (= var9 var5)) (= var8 var1)) (= var12 var11)) (= var7 var4)) (= var6 (data (getTDLL (read var0 var5)))))))) (inv_main68 var3 var2 var9 var8 var12 var7))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (and (inv_main54 var0 var3 var2 var1) (not (= var2 nullAddr)))) (inv_main56 var0 var3 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main14 var0 var2 var1)) (inv_main16 (write var0 var1 (O_TDLL (TDLL nullAddr (prev (getTDLL (read var0 var1))) (data (getTDLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main17 var0 var6 var3) (and (not (= var5 nullAddr)) (and (not (= var4 0)) (and (not (= var7 nullAddr)) (and (and (and (= var2 var0) (= var1 var6)) (= var5 var3)) (= var7 (next (getTDLL (read var0 var3)))))))))) (inv_main23 var2 var1 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main12 var0 var3 var2 var1)) (inv_main11 (write var0 var2 (O_TDLL (TDLL var1 (prev (getTDLL (read var0 var2))) (data (getTDLL (read var0 var2)))))) var3 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int)) (or (not (and (inv_main56 var0 var6 var3 var1) (and (= var8 2) (and (and (and (and (= var4 var0) (= var2 var6)) (= var7 var3)) (= var5 var1)) (= var8 (data (getTDLL (read var0 var3)))))))) (inv_main60 var4 var2 var7 var5 var8 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr)) (or (not (and (inv_main63 var0 var10 var5 var2 var11 var4) (and (= var3 2) (and (and (and (and (and (and (= var6 var0) (= var12 var10)) (= var1 var5)) (= var9 var2)) (= var7 var11)) (= var8 var4)) (= var3 (data (getTDLL (read var0 var5)))))))) (inv_main69 var6 var12 var1 var9 var7 var8))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main17 var0 var3 var2) (and (= var6 nullAddr) (and (= var1 nullAddr) (and (and (and (= var5 var0) (= var4 var3)) (= var6 var2)) (= var1 (next (getTDLL (read var0 var2))))))))) (inv_main31 var5 var4 var6))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (or (not (and (inv_main17 var0 var5 var3) (and (= var4 nullAddr) (and (= var6 0) (and (not (= var7 nullAddr)) (and (and (and (= var2 var0) (= var1 var5)) (= var4 var3)) (= var7 (next (getTDLL (read var0 var3)))))))))) (inv_main31 var2 var1 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main17 var0 var6 var3) (and (= var5 nullAddr) (and (not (= var4 0)) (and (not (= var7 nullAddr)) (and (and (and (= var2 var0) (= var1 var6)) (= var5 var3)) (= var7 (next (getTDLL (read var0 var3)))))))))) (inv_main25 var2 var1 var5))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr)) (or (not (and (inv_main60 var0 var10 var8 var2 var11 var7) (and (or (not (= var1 2)) (= var5 1)) (and (and (and (and (and (and (= var4 var0) (= var6 var10)) (= var9 var8)) (= var12 var2)) (= var1 var11)) (= var3 var7)) (= var5 (data (getTDLL (read var0 (next (getTDLL (read var0 var8))))))))))) (inv_main63 var4 var6 var9 var12 var1 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main56 var0 var7 var3 var1) (and (and (not (= var4 2)) (not (= var4 2))) (and (and (and (and (= var2 var0) (= var6 var7)) (= var8 var3)) (= var5 var1)) (= var4 (data (getTDLL (read var0 var3)))))))) (inv_main63 var2 var6 var8 var5 var4 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Heap)) (or (not (and (inv_main68 var0 var8 var6 var1 var9 var5) (and (and (and (and (and (and (= var12 var0) (= var3 var8)) (= var7 var6)) (= var10 var1)) (= var4 var9)) (= var11 var5)) (= var2 (next (getTDLL (read var0 var6))))))) (inv_main54 var12 var3 var2 var10))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main50 var0 var7 var4 var1 var5) (and (= var8 nullAddr) (and (and (and (and (= var9 (write var0 var4 (O_TDLL (TDLL (next (getTDLL (read var0 var4))) var5 (data (getTDLL (read var0 var4))))))) (= var2 var7)) (= var3 var4)) (= var6 var1)) (= var8 var5))))) (inv_main54 var9 var3 var3 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr)) (or (not (and (inv_main44 var0 var4 var2) (and (and (= var5 nullAddr) (and (and (and (= var3 var6) (= var5 var1)) (= var9 var8)) (= var7 nullAddr))) (and (and (= var6 (write var0 var2 (O_TDLL (TDLL (next (getTDLL (read var0 var2))) (prev (getTDLL (read var0 var2))) 2)))) (= var1 var4)) (= var8 var2))))) (inv_main54 var3 var7 var7 var7))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr)) (or (not (and (inv_main37 var0 var6 var4) (and (and (= var9 nullAddr) (and (and (and (= var8 var1) (= var9 var7)) (= var2 var3)) (= var5 nullAddr))) (and (and (= var1 (write var0 (next (getTDLL (read var0 var4))) (O_TDLL (TDLL (next (getTDLL (read var0 (next (getTDLL (read var0 var4)))))) (prev (getTDLL (read var0 (next (getTDLL (read var0 var4)))))) 2)))) (= var7 var6)) (= var3 var4))))) (inv_main54 var8 var5 var5 var5))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr)) (or (not (and (inv_main60 var0 var10 var8 var2 var11 var7) (and (and (= var1 2) (not (= var5 1))) (and (and (and (and (and (and (= var4 var0) (= var6 var10)) (= var9 var8)) (= var12 var2)) (= var1 var11)) (= var3 var7)) (= var5 (data (getTDLL (read var0 (next (getTDLL (read var0 var8))))))))))) (inv_main65 var4 var6 var9 var12 var1 var5))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main56 var0 var7 var4 var2) (and (and (= var1 2) (not (= var1 2))) (and (and (and (and (= var8 var0) (= var6 var7)) (= var3 var4)) (= var5 var2)) (= var1 (data (getTDLL (read var0 var4)))))))) (inv_main65 var8 var6 var3 var5 var1 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (or (not (inv_main48 var0 var3 var2 var1)) (inv_main49 var0 var3 var2 var1 (next (getTDLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main3 var0 var1)) (inv_main4 (write var0 var1 (O_TDLL (TDLL nullAddr (prev (getTDLL (read var0 var1))) (data (getTDLL (read var0 var1)))))) var1))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 TDLL) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main34 var0 var6 var3) (and (= var5 nullAddr) (and (and (and (= var1 var0) (= var2 var6)) (= var7 var3)) (= var5 (next (getTDLL (read var0 var3)))))))) (inv_main40 (newHeap (alloc var1 (O_TDLL var4))) var2 var7 (newAddr (alloc var1 (O_TDLL var4)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main41 var0 var4 var2) (and (and (and (= var5 var0) (= var1 var4)) (= var6 var2)) (= var3 (next (getTDLL (read var0 var2))))))) (inv_main42 var5 var1 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main42 var0 var2 var1)) (inv_main44 (write var0 var1 (O_TDLL (TDLL nullAddr (prev (getTDLL (read var0 var1))) (data (getTDLL (read var0 var1)))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main39 var0 var2 var1)) (inv_main41 (write var0 (next (getTDLL (read var0 var1))) (O_TDLL (TDLL (next (getTDLL (read var0 (next (getTDLL (read var0 var1)))))) var1 (data (getTDLL (read var0 (next (getTDLL (read var0 var1))))))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 TDLL)) (or (not (and (inv_main16 var0 var6 var4) (and (not (= var3 0)) (and (and (= var5 (write var0 var4 (O_TDLL (TDLL (next (getTDLL (read var0 var4))) (prev (getTDLL (read var0 var4))) 0)))) (= var2 var6)) (= var1 var4))))) (inv_main12 (newHeap (alloc var5 (O_TDLL var7))) var2 var1 (newAddr (alloc var5 (O_TDLL var7)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Heap) (var3 Addr) (var4 TDLL) (var5 Int)) (or (not (and (inv_main5 var0 var3) (and (not (= var5 0)) (and (= var2 (write var0 var3 (O_TDLL (TDLL (next (getTDLL (read var0 var3))) (prev (getTDLL (read var0 var3))) 0)))) (= var1 var3))))) (inv_main12 (newHeap (alloc var2 (O_TDLL var4))) var1 var1 (newAddr (alloc var2 (O_TDLL var4)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main34 var0 var4 var2) (and (not (= var1 nullAddr)) (and (and (and (= var5 var0) (= var6 var4)) (= var3 var2)) (= var1 (next (getTDLL (read var0 var2)))))))) (inv_main37 var5 var6 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main29 var0 var2 var1)) (inv_main34 (write var0 var1 (O_TDLL (TDLL (next (getTDLL (read var0 var1))) (prev (getTDLL (read var0 var1))) 1))) var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (or (not (inv_main11 var0 var2 var1)) (inv_main13 (write var0 (next (getTDLL (read var0 var1))) (O_TDLL (TDLL (next (getTDLL (read var0 (next (getTDLL (read var0 var1)))))) var1 (data (getTDLL (read var0 (next (getTDLL (read var0 var1))))))))) var2 var1))))
(assert (forall ((var0 Heap) (var1 TDLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TDLL var1))) (newAddr (alloc var0 (O_TDLL var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main3 var0 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main4 var0 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main5 var0 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main12 var0 var3 var2 var1) (not (is-O_TDLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main11 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main11 var0 var2 var1) (not (is-O_TDLL (read var0 (next (getTDLL (read var0 var1))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main13 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main14 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main16 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main17 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (inv_main25 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main23 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (inv_main31 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main29 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main34 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main40 var0 var2 var1 var3) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main39 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main39 var0 var2 var1) (not (is-O_TDLL (read var0 (next (getTDLL (read var0 var1))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main41 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main42 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main44 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main37 var0 var2 var1) (not (is-O_TDLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr)) (not (and (inv_main37 var0 var2 var1) (not (is-O_TDLL (read var0 (next (getTDLL (read var0 var1))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main48 var0 var3 var2 var1) (not (is-O_TDLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr)) (not (and (inv_main49 var0 var4 var2 var1 var3) (not (is-O_TDLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr)) (not (and (inv_main50 var0 var4 var2 var1 var3) (not (is-O_TDLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main56 var0 var3 var2 var1) (not (is-O_TDLL (read var0 var2)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main60 var0 var4 var3 var1 var5 var2) (not (is-O_TDLL (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main60 var0 var4 var3 var1 var5 var2) (not (is-O_TDLL (read var0 (next (getTDLL (read var0 var3))))))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int)) (not (inv_main65 var0 var4 var3 var1 var5 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main63 var0 var4 var3 var1 var5 var2) (not (is-O_TDLL (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main69 var0 var4 var3 var1 var5 var2) (not (is-O_TDLL (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main68 var0 var4 var3 var1 var5 var2) (not (is-O_TDLL (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr)) (not (and (inv_main77 var0 var3 var2 var1) (not (is-O_TDLL (read var0 var2)))))))
(check-sat)
