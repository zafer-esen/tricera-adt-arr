(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main12 (Heap Addr Addr Int) Bool)
(declare-fun inv_main13 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main14 (Heap Addr Addr Int) Bool)
(declare-fun inv_main15 (Heap Addr Addr Int) Bool)
(declare-fun inv_main18 (Heap Addr Addr Int) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main28 (Heap Addr Addr Int) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr Int) Bool)
(declare-fun inv_main34 (Heap Addr Addr Int) Bool)
(declare-fun inv_main36 (Heap Addr Addr Int) Bool)
(declare-fun inv_main39 (Heap Addr Addr Int) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main40 (Heap Addr Addr Int) Bool)
(declare-fun inv_main42 (Heap Addr Addr Int) Bool)
(declare-fun inv_main44 (Heap Addr Addr Int) Bool)
(declare-fun inv_main46 (Heap Addr Addr Int Int) Bool)
(declare-fun inv_main47 (Heap Addr Addr Int Int) Bool)
(declare-fun inv_main5 (Heap Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr Int) Bool)
(declare-fun inv_main57 (Heap Addr Addr Int) Bool)
(declare-fun inv_main9 (Heap Addr Addr Int) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main46 var4 var3 var2 var1 var0) (not (= var0 0)))) (inv_main47 var4 var3 var2 var1 (data (getTSLL (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main39 var4 var3 var2 var1) (and (and (and (and (= var8 var4) (= var0 var3)) (= var6 var2)) (= var5 var1)) (= var7 (next (getTSLL (read var4 var3))))))) (inv_main52 var8 var0 var7 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Heap)) (or (not (and (inv_main57 var6 var5 var4 var3) (and (and (and (and (= var8 var6) (= var0 var5)) (= var7 var4)) (= var2 var3)) (= var1 (next (getTSLL (read var6 var4))))))) (inv_main52 (write var8 var0 defObj) var0 var1 var2))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL var0 (prev (getTSLL (read var1 var0))) (data (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 TSLL) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Heap) (var9 Addr)) (or (not (and (inv_main18 var5 var4 var3 var2) (and (not (= var1 0)) (and (not (= nullAddr var7)) (and (and (and (= var8 (write var5 var3 (O_TSLL (TSLL (next (getTSLL (read var5 var3))) (prev (getTSLL (read var5 var3))) var2)))) (= var9 var4)) (= var7 var3)) (= var6 var2)))))) (inv_main13 (newHeap (alloc var8 (O_TSLL var0))) var9 var7 var6 (newAddr (alloc var8 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Int) (var5 TSLL)) (or (not (and (inv_main5 var3 var2) (and (not (= var4 0)) (and (= var1 (write var3 var2 (O_TSLL (TSLL (next (getTSLL (read var3 var2))) (prev (getTSLL (read var3 var2))) 0)))) (= var0 var2))))) (inv_main13 (newHeap (alloc var1 (O_TSLL var5))) var0 var0 1 (newAddr (alloc var1 (O_TSLL var5)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr)) (or (not (and (inv_main14 var6 var5 var4 var3) (and (and (and (and (= var2 var6) (= var8 var5)) (= var7 var4)) (= var1 var3)) (= var0 (next (getTSLL (read var6 var4))))))) (inv_main15 var2 var8 var0 var1))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int)) (or (not (and (inv_main15 var4 var3 var2 var1) (and (not (= var8 2)) (and (not (= var8 1)) (and (not (= var6 0)) (and (and (and (= var0 (write var4 var2 (O_TSLL (TSLL var3 (prev (getTSLL (read var4 var2))) (data (getTSLL (read var4 var2))))))) (= var7 var3)) (= var5 var2)) (= var8 var1))))))) (inv_main9 var0 var7 var5 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr)) (or (not (and (inv_main18 var3 var2 var1 var0) (and (= var6 0) (and (not (= nullAddr var5)) (and (and (and (= var7 (write var3 var1 (O_TSLL (TSLL (next (getTSLL (read var3 var1))) (prev (getTSLL (read var3 var1))) var0)))) (= var8 var2)) (= var5 var1)) (= var4 var0)))))) (inv_main9 var7 var8 var5 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Int)) (or (not (and (inv_main5 var1 var0) (and (= var4 0) (and (= var3 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) (prev (getTSLL (read var1 var0))) 0)))) (= var2 var0))))) (inv_main9 var3 var2 var2 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main42 var5 var3 var2 var1) (and (and (and (and (= var4 var5) (= var7 var3)) (= var6 var2)) (= var0 var1)) (= var8 (next (getTSLL (read var5 var2))))))) (inv_main34 var4 var7 var8 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Heap)) (or (not (and (inv_main31 var5 var4 var3 var2) (and (not (= nullAddr var1)) (and (and (and (and (= var8 var5) (= var0 var4)) (= var7 var3)) (= var6 var2)) (= var1 (next (getTSLL (read var5 var4)))))))) (inv_main34 var8 var0 var1 var6))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main4 var1 var0)) (inv_main5 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) nullAddr (data (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Int)) (or (not (and (inv_main52 var6 var5 var4 var3) (and (not (= var8 0)) (and (and (and (and (= var0 var6) (= var2 var5)) (= var1 var4)) (= var7 var3)) (= var8 (data (getTSLL (read var6 var4)))))))) (inv_main57 var0 var1 var1 var7))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main13 var3 var2 var1 var0 var4)) (inv_main12 (write var3 var1 (O_TSLL (TSLL var4 (prev (getTSLL (read var3 var1))) (data (getTSLL (read var3 var1)))))) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main34 var8 var6 var5 var4) (and (not (= var1 0)) (and (and (and (and (= var3 var8) (= var0 var6)) (= var7 var5)) (= var2 var4)) (= var1 (data (getTSLL (read var8 var5)))))))) (inv_main40 var3 var0 var7 var2))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int)) (or (not (and (inv_main15 var4 var3 var2 var1) (and (= var6 0) (and (and (and (= var0 (write var4 var2 (O_TSLL (TSLL var3 (prev (getTSLL (read var4 var2))) (data (getTSLL (read var4 var2))))))) (= var7 var3)) (= var5 var2)) (= var8 var1))))) (inv_main18 var0 var7 var5 var8))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int)) (or (not (and (inv_main15 var4 var3 var2 var1) (and (= var8 1) (and (not (= var6 0)) (and (and (and (= var0 (write var4 var2 (O_TSLL (TSLL var3 (prev (getTSLL (read var4 var2))) (data (getTSLL (read var4 var2))))))) (= var7 var3)) (= var5 var2)) (= var8 var1)))))) (inv_main18 var0 var7 var5 2))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int)) (or (not (and (inv_main15 var4 var3 var2 var1) (and (= var8 2) (and (not (= var8 1)) (and (not (= var6 0)) (and (and (and (= var0 (write var4 var2 (O_TSLL (TSLL var3 (prev (getTSLL (read var4 var2))) (data (getTSLL (read var4 var2))))))) (= var7 var3)) (= var5 var2)) (= var8 var1))))))) (inv_main18 var0 var7 var5 3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main46 var4 var3 var2 var1 var0) (= var0 0))) (inv_main42 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main47 var5 var4 var3 var2 var6) (and (not (= var1 0)) (and (and (and (and (= var9 var5) (= var8 var4)) (= var7 var3)) (= var0 var2)) (or (and (<= 0 (+ (data (getTSLL (read var5 (next (getTSLL (read var5 var3)))))) (* (- 1) var6))) (= var1 1)) (and (not (<= 0 (+ (data (getTSLL (read var5 (next (getTSLL (read var5 var3)))))) (* (- 1) var6)))) (= var1 0))))))) (inv_main42 var9 var8 var7 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main40 var3 var2 var1 var0)) (inv_main46 var3 var2 var1 var0 (data (getTSLL (read var3 (next (getTSLL (read var3 var1))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Int)) (or (not (and (inv_main34 var6 var5 var4 var3) (and (= var2 0) (and (and (and (and (= var1 var6) (= var7 var5)) (= var0 var4)) (= var8 var3)) (= var2 (data (getTSLL (read var6 var4)))))))) (inv_main39 var1 var7 var0 var8))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr)) (or (not (and (inv_main18 var6 var5 var4 var3) (and (= nullAddr var0) (and (and (and (= var2 (write var6 var4 (O_TSLL (TSLL (next (getTSLL (read var6 var4))) (prev (getTSLL (read var6 var4))) var3)))) (= var7 var5)) (= var0 var4)) (= var1 var3))))) (inv_main28 var2 var7 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main47 var5 var4 var3 var2 var6) (and (= var1 0) (and (and (and (and (= var9 var5) (= var8 var4)) (= var7 var3)) (= var0 var2)) (or (and (<= 0 (+ (data (getTSLL (read var5 (next (getTSLL (read var5 var3)))))) (* (- 1) var6))) (= var1 1)) (and (not (<= 0 (+ (data (getTSLL (read var5 (next (getTSLL (read var5 var3)))))) (* (- 1) var6)))) (= var1 0))))))) (inv_main44 var9 var8 var7 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main12 var3 var2 var1 var0)) (inv_main14 (write var3 (next (getTSLL (read var3 var1))) (O_TSLL (TSLL (next (getTSLL (read var3 (next (getTSLL (read var3 var1)))))) var1 (data (getTSLL (read var3 (next (getTSLL (read var3 var1))))))))) var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main9 var3 var2 var1 var0)) (inv_main31 (write var3 var1 (O_TSLL (TSLL (next (getTSLL (read var3 var1))) (prev (getTSLL (read var3 var1))) var0))) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Heap)) (or (not (and (inv_main31 var5 var4 var3 var2) (and (= nullAddr var1) (and (and (and (and (= var8 var5) (= var0 var4)) (= var7 var3)) (= var6 var2)) (= var1 (next (getTSLL (read var5 var4)))))))) (inv_main36 var8 var0 var1 var6))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main5 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main13 var3 var2 var1 var0 var4) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main12 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main12 var3 var2 var1 var0) (not (is-O_TSLL (read var3 (next (getTSLL (read var3 var1))))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main15 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (inv_main28 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main9 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main31 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (inv_main36 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main34 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main40 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main40 var3 var2 var1 var0) (not (is-O_TSLL (read var3 (next (getTSLL (read var3 var1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main46 var4 var3 var2 var1 var0) (and (not (= var0 0)) (not (is-O_TSLL (read var4 var2))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int)) (not (and (inv_main47 var3 var2 var1 var0 var4) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int)) (not (and (inv_main47 var3 var2 var1 var0 var4) (not (is-O_TSLL (read var3 (next (getTSLL (read var3 var1))))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (inv_main44 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main42 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main39 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main52 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main57 var3 var2 var1 var0) (not (is-O_TSLL (read var3 var1)))))))
(check-sat)
