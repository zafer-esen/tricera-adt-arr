(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main100 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main104 (Heap Int Int Addr Addr Int Addr Addr) Bool)
(declare-fun inv_main107 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main12 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main32 (Heap Int Int Int Int Addr Addr Int Addr Int) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main38 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main44 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main55 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main58 (Heap Int Int Addr Int Int Int Int Addr Int) Bool)
(declare-fun inv_main61 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Int Int Int Int Addr) Bool)
(declare-fun inv_main66 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main69 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main72 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main74 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main75 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main76 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main78 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main79 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main80 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main81 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main82 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main83 (Heap Int Int Addr Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main85 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main88 (Heap Int Int Addr Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main100 var14 var13 var12 var11 var10 var9 var8) (and (and (not (= var7 var6)) (is-O_node (read var14 var8))) (and (and (and (and (and (and (and (= var5 var14) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var1 var10)) (= var0 var9)) (= var6 var8)) (= var7 (next (getnode (read var14 var8)))))))) (inv_main104 var5 var4 var3 var2 var1 var0 var6 var7))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Heap) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Int) (var21 Addr) (var22 Addr) (var23 Int) (var24 Int) (var25 Heap)) (or (not (and (inv_main104 var25 var24 var23 var22 var21 var20 var19 var18) (and (not (= var17 var16)) (and (and (is-O_node (read var25 var18)) (and (and (and (and (and (and (and (and (= var15 var25) (= var14 var24)) (= var13 var23)) (= var12 var22)) (= var11 var21)) (= var10 var20)) (= var9 var19)) (= var8 var18)) (= var7 (next (getnode (read var25 var18)))))) (and (and (and (and (and (and (and (and (= var6 (write var15 var8 defObj)) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var1 var10)) (= var16 var9)) (= var0 var8)) (= var17 var7)))))) (inv_main104 var6 var5 var4 var3 var2 var1 var16 var17))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (inv_main58 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main58 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 node) (var21 Heap) (var22 Heap) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Heap) (var31 Int)) (or (not (and (inv_main44 var30 var29 var28 var27 var26 var25 var24) (and (and (and (= nullAddr var23) (and (and (and (and (and (and (and (and (= var22 (newHeap (alloc var21 (O_node var20)))) (= var19 var18)) (= var17 var16)) (= var15 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var10)) (= var23 (newAddr (alloc var21 (O_node var20)))))) (and (and (and (and (and (and (= var21 var6) (= var18 var5)) (= var16 var4)) (= var14 var3)) (= var12 3)) (= var10 var4)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var31)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var31)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var31)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var31))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (= var8 var31)))) (and (is-O_node (read var30 var25)) (and (and (and (and (and (and (= var6 (write var30 var25 (O_node (node (next (getnode (read var30 var25))) var24 (data (getnode (read var30 var25))))))) (= var5 var29)) (= var4 var28)) (= var2 var27)) (= var1 var26)) (= var3 var25)) (= var0 var24)))))) (inv_main58 var22 var19 var17 var15 var13 var11 var9 var7 var23 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 node) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main22 var16 var15 var14 var13 var12 var11 var10) (and (and (not (= nullAddr var9)) (and (and (and (and (and (and (and (and (= var8 (newHeap (alloc var16 (O_node var7)))) (= var6 var15)) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var1 var10)) (= var0 var12)) (= var9 (newAddr (alloc var16 (O_node var7)))))) (<= 0 (+ (+ var13 (- 1)) (- 1)))))) (inv_main29 var8 var6 var5 var4 var3 var2 var1 var0 var9))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main29 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var8 var0)))) (inv_main35 (write var8 var0 (O_node (node nullAddr (prev (getnode (read var8 var0))) (data (getnode (read var8 var0)))))) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main22 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var3 (- 1)) (- 1)))))) (inv_main23 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main75 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var2)))) (inv_main76 (write var9 var2 (O_node (node var0 (prev (getnode (read var9 var2))) (data (getnode (read var9 var2)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main55 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var8 var0)))) (inv_main61 (write var8 var0 (O_node (node nullAddr (prev (getnode (read var8 var0))) (data (getnode (read var8 var0)))))) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main78 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var2)))) (inv_main80 (write var9 var2 (O_node (node var6 (prev (getnode (read var9 var2))) (data (getnode (read var9 var2)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main35 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var8 var0)))) (inv_main36 (write var8 var0 (O_node (node (next (getnode (read var8 var0))) nullAddr (data (getnode (read var8 var0)))))) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main66 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ var3 (- 1))))) (inv_main69 var9 var8 var7 var6 var5 var4 var3 var2 var0 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main18 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var6 var0)))) (inv_main19 (write var6 var0 (O_node (node (next (getnode (read var6 var0))) nullAddr (data (getnode (read var6 var0)))))) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap)) (or (not (inv_main32 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main32 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 node) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main22 var16 var15 var14 var13 var12 var11 var10) (and (and (= nullAddr var9) (and (and (and (and (and (and (and (and (= var8 (newHeap (alloc var16 (O_node var7)))) (= var6 var15)) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var1 var10)) (= var0 var12)) (= var9 (newAddr (alloc var16 (O_node var7)))))) (<= 0 (+ (+ var13 (- 1)) (- 1)))))) (inv_main32 var8 var6 var5 var4 var3 var2 var1 var0 var9 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main85 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var5 var1)) (not (= var3 (data (getnode (read var5 var1)))))))) (inv_main107 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main88 var12 var11 var10 var9 var8 var7) (and (not (= (+ var6 1) (+ 1 var5))) (and (= var4 var3) (and (is-O_node (read var12 var8)) (and (and (and (and (and (and (= var2 var12) (= var5 var11)) (= var1 var10)) (= var3 var9)) (= var0 var8)) (= var6 var7)) (= var4 (next (getnode (read var12 var8)))))))))) (inv_main107 var2 var5 var1 var3 var4 (+ var6 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 node) (var21 Heap) (var22 Heap) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Heap) (var31 Int)) (or (not (and (inv_main44 var30 var29 var28 var27 var26 var25 var24) (and (and (and (not (= nullAddr var23)) (and (and (and (and (and (and (and (and (= var22 (newHeap (alloc var21 (O_node var20)))) (= var19 var18)) (= var17 var16)) (= var15 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var10)) (= var23 (newAddr (alloc var21 (O_node var20)))))) (and (and (and (and (and (and (= var21 var6) (= var18 var5)) (= var16 var4)) (= var14 var3)) (= var12 3)) (= var10 var4)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var31)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var31)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var31)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var31))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (= var8 var31)))) (and (is-O_node (read var30 var25)) (and (and (and (and (and (and (= var6 (write var30 var25 (O_node (node (next (getnode (read var30 var25))) var24 (data (getnode (read var30 var25))))))) (= var5 var29)) (= var4 var28)) (= var2 var27)) (= var1 var26)) (= var3 var25)) (= var0 var24)))))) (inv_main55 var22 var19 var17 var15 var13 var11 var9 var7 var23))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main12 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var6 var0)))) (inv_main18 (write var6 var0 (O_node (node nullAddr (prev (getnode (read var6 var0))) (data (getnode (read var6 var0)))))) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 node) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main4 var10 var9 var8) (and (not (= nullAddr var7)) (and (and (and (and (and (and (= var6 (newHeap (alloc var10 (O_node var5)))) (= var4 var9)) (= var3 var8)) (= var2 var9)) (= var1 var8)) (= var0 var8)) (= var7 (newAddr (alloc var10 (O_node var5)))))))) (inv_main12 var6 var4 var3 var2 var1 var0 var7))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (inv_main15 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main15 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 node) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main4 var10 var9 var8) (and (= nullAddr var7) (and (and (and (and (and (and (= var6 (newHeap (alloc var10 (O_node var5)))) (= var4 var9)) (= var3 var8)) (= var2 var9)) (= var1 var8)) (= var0 var8)) (= var7 (newAddr (alloc var10 (O_node var5)))))))) (inv_main15 var6 var4 var3 var2 var1 var0 var7 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main66 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var6 nullAddr) (and (= var1 nullAddr) (not (<= 0 (+ var3 (- 1)))))))) (inv_main79 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main41 var15 var14 var13 var12 var11 var10 var9 var8) (and (is-O_node (read var15 var10)) (and (and (and (and (and (and (and (= var7 (write var15 var10 (O_node (node (next (getnode (read var15 var10))) var8 (data (getnode (read var15 var10))))))) (= var6 var14)) (= var5 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var8))))) (inv_main22 var7 var6 var5 (+ var4 (- 1)) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main38 var15 var14 var13 var12 var11 var10 var9 var8) (and (and (= var7 nullAddr) (is-O_node (read var15 var8))) (and (and (and (and (and (and (and (= var6 (write var15 var8 (O_node (node var10 (prev (getnode (read var15 var8))) (data (getnode (read var15 var8))))))) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var7 var10)) (= var1 var9)) (= var0 var8))))) (inv_main22 var6 var5 var4 (+ var3 (- 1)) var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main19 var13 var12 var11 var10 var9 var8 var7) (and (is-O_node (read var13 var7)) (and (and (and (and (and (and (= var6 (write var13 var7 (O_node (node (next (getnode (read var13 var7))) (prev (getnode (read var13 var7))) var8)))) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))) (inv_main22 var6 var5 var4 var3 var2 var0 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main88 var12 var11 var10 var9 var8 var7) (and (not (= var6 var5)) (and (is-O_node (read var12 var8)) (and (and (and (and (and (and (= var4 var12) (= var3 var11)) (= var2 var10)) (= var5 var9)) (= var1 var8)) (= var0 var7)) (= var6 (next (getnode (read var12 var8))))))))) (inv_main85 var4 var3 var2 var5 var6 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main76 var16 var15 var14 var13 var12 var11 var10 var9 var8 var7) (and (is-O_node (read var16 var7)) (and (and (and (and (and (and (= var6 (write var16 var7 (O_node (node (next (getnode (read var16 var7))) var9 (data (getnode (read var16 var7))))))) (= var5 var15)) (= var4 var14)) (= var3 var13)) (= var2 var12)) (= var1 var11)) (= var0 var10))))) (inv_main85 var6 var5 var4 var3 var3 0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Addr) (var17 Int) (var18 Int) (var19 Heap)) (or (not (and (inv_main82 var19 var18 var17 var16 var15 var14 var13 var12 var11 var10) (and (is-O_node (read var19 var16)) (and (and (and (and (and (and (and (and (and (= var9 (write var19 var16 (O_node (node (next (getnode (read var19 var16))) var12 (data (getnode (read var19 var16))))))) (= var8 var18)) (= var7 var17)) (= var6 var16)) (= var5 var15)) (= var4 var14)) (= var3 var13)) (= var2 var12)) (= var1 var11)) (= var0 var10))))) (inv_main85 var9 var8 var7 var2 var2 0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Addr) (var17 Int) (var18 Int) (var19 Heap)) (or (not (and (inv_main83 var19 var18 var17 var16 var15 var14 var13 var12 var11 var10) (and (is-O_node (read var19 var12)) (and (and (and (and (and (and (and (and (and (= var9 (write var19 var12 (O_node (node (next (getnode (read var19 var12))) var12 (data (getnode (read var19 var12))))))) (= var8 var18)) (= var7 var17)) (= var6 var16)) (= var5 var15)) (= var4 var14)) (= var3 var13)) (= var2 var12)) (= var1 var11)) (= var0 var10))))) (inv_main85 var9 var8 var7 var2 var2 0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main80 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var2)))) (inv_main81 (write var9 var2 (O_node (node (next (getnode (read var9 var2))) var6 (data (getnode (read var9 var2)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main72 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var1)))) (inv_main74 (write var9 var1 (O_node (node var2 (prev (getnode (read var9 var1))) (data (getnode (read var9 var1)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main88 var12 var11 var10 var9 var8 var7) (and (not (= nullAddr var6)) (and (= (+ var5 1) (+ 1 var4)) (and (= var3 var6) (and (is-O_node (read var12 var8)) (and (and (and (and (and (and (= var2 var12) (= var4 var11)) (= var1 var10)) (= var6 var9)) (= var0 var8)) (= var5 var7)) (= var3 (next (getnode (read var12 var8))))))))))) (inv_main100 var2 var4 var1 var6 var3 (+ var5 1) var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main66 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var1 nullAddr)) (not (<= 0 (+ var3 (- 1))))))) (inv_main72 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var8 var0)))) (inv_main62 (write var8 var0 (O_node (node (next (getnode (read var8 var0))) nullAddr (data (getnode (read var8 var0)))))) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main81 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var6)))) (inv_main82 (write var9 var6 (O_node (node var2 (prev (getnode (read var9 var6))) (data (getnode (read var9 var6)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var6 var0)))) (inv_main44 (write var6 var0 (O_node (node var1 (prev (getnode (read var6 var0))) (data (getnode (read var6 var0)))))) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main66 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var6 nullAddr)) (and (= var1 nullAddr) (not (<= 0 (+ var3 (- 1)))))))) (inv_main78 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main85 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var5 var1)) (= var3 (data (getnode (read var5 var1))))))) (inv_main88 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap)) (or (not (and (inv_main36 var17 var16 var15 var14 var13 var12 var11 var10 var9) (and (is-O_node (read var17 var9)) (and (and (and (and (and (and (and (and (= var8 (write var17 var9 (O_node (node (next (getnode (read var17 var9))) (prev (getnode (read var17 var9))) var10)))) (= var7 var16)) (= var6 var15)) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var1 var10)) (= var0 var9))))) (inv_main38 var8 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main74 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var2)))) (inv_main75 (write var9 var2 (O_node (node (next (getnode (read var9 var2))) var1 (data (getnode (read var9 var2)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main38 var15 var14 var13 var12 var11 var10 var9 var8) (and (and (not (= var7 nullAddr)) (is-O_node (read var15 var8))) (and (and (and (and (and (and (and (= var6 (write var15 var8 (O_node (node var10 (prev (getnode (read var15 var8))) (data (getnode (read var15 var8))))))) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var7 var10)) (= var1 var9)) (= var0 var8))))) (inv_main41 var6 var5 var4 var3 var2 var7 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main79 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var9 var2)))) (inv_main83 (write var9 var2 (O_node (node var2 (prev (getnode (read var9 var2))) (data (getnode (read var9 var2)))))) var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Int) (var16 Int) (var17 Addr) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (inv_main69 var20 var19 var18 var17 var16 var15 var14 var13 var12 var11) (and (is-O_node (read var20 var11)) (and (and (and (and (and (and (and (and (and (and (= var10 var20) (= var9 var19)) (= var8 var18)) (= var7 var17)) (= var6 var16)) (= var5 var15)) (= var4 var14)) (= var3 var13)) (= var2 var12)) (= var1 var11)) (= var0 (next (getnode (read var20 var11)))))))) (inv_main66 var10 var9 var8 var7 var6 var5 (+ var4 (- 1)) var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap) (var17 Heap) (var18 Addr) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Addr) (var24 Int) (var25 Int) (var26 Heap)) (or (not (and (inv_main62 var26 var25 var24 var23 var22 var21 var20 var19 var18) (and (and (and (and (and (and (and (and (and (= var17 var16) (= var15 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 nullAddr)) (and (is-O_node (read var26 var18)) (and (and (and (and (and (and (and (and (= var16 (write var26 var18 (O_node (node (next (getnode (read var26 var18))) (prev (getnode (read var26 var18))) var19)))) (= var14 var25)) (= var12 var24)) (= var10 var23)) (= var8 var22)) (= var6 var21)) (= var4 var20)) (= var0 var19)) (= var2 var18)))))) (inv_main66 var17 var15 var13 var11 var9 var7 var5 var3 var1 var11))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main12 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main18 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main29 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main35 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main36 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main38 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main41 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main44 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main55 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main62 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main69 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main72 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main74 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main75 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main76 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main78 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main80 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main81 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main82 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main79 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main83 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var9 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main85 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var5 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main88 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var5 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main100 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main104 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (inv_main107 var5 var4 var3 var2 var1 var0))))
(check-sat)
