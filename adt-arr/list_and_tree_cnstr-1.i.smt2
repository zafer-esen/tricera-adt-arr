(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0) (TreeNode 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (O_TreeNode (getTreeNode TreeNode)) (defObj))
                   ((node (h Int) (n Addr)))
                   ((TreeNode (left Addr) (right Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main10 (Heap Addr Addr) Bool)
(declare-fun inv_main102 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main103 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main107 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main11 (Heap Addr Addr) Bool)
(declare-fun inv_main13 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main17 (Heap Addr Addr) Bool)
(declare-fun inv_main21 (Heap Addr Addr) Bool)
(declare-fun inv_main27 (Heap Addr Addr) Bool)
(declare-fun inv_main28 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap) Bool)
(declare-fun inv_main35 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr Addr) Bool)
(declare-fun inv_main43 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main46 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr Addr) Bool)
(declare-fun inv_main50 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main51 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main55 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main57 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main58 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr) Bool)
(declare-fun inv_main63 (Heap Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main68 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main69 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main74 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main77 (Heap Addr Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main80 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main82 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main83 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main88 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main91 (Heap Addr Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main94 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main97 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main98 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main99 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main3 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main46 var2 var0 var3 var4 var1) (not (= var1 nullAddr)))) (inv_main49 var2 var0 var3 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main46 var3 var1 var7 var8 var2) (and (not (= var4 0)) (and (= var2 nullAddr) (and (and (and (and (= var9 var3) (= var5 var1)) (= var6 var7)) (= var0 var8)) (= var4 (right (getTreeNode (read var3 var7))))))))) (inv_main49 var9 var5 var6 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Int) (var14 Addr)) (or (not (and (inv_main98 var12 var11 var2 var7 var6 var5 var10) (and (not (= var13 1)) (and (and (and (and (and (and (and (= var4 var12) (= var9 var11)) (= var0 var2)) (= var14 var7)) (= var1 var6)) (= var3 var5)) (= var8 var10)) (= var13 (h (getnode (read var12 var10)))))))) (inv_main102 var4 var9 var0 var14 var1 var3 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Heap) (var14 Addr)) (or (not (and (inv_main98 var10 var9 var2 var6 var5 var4 var7) (and (= var8 1) (and (and (and (and (and (and (and (= var13 var10) (= var12 var9)) (= var3 var2)) (= var0 var6)) (= var11 var5)) (= var1 var4)) (= var14 var7)) (= var8 (h (getnode (read var10 var7)))))))) (inv_main103 var13 var12 var3 var0 var11 var1 var14))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main4 var1 var0 var2)) (inv_main5 (write var1 var0 (O_TreeNode (TreeNode nullAddr (right (getTreeNode (read var1 var0)))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (or (not (inv_main91 var1 var0 var2 var5 var4 var3 var7 var6)) (inv_main91 var1 var0 var2 var5 var4 var3 var7 var6))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 node) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr)) (or (not (and (inv_main83 var18 var17 var6 var10 var9 var8 var15) (and (= var11 nullAddr) (and (and (and (and (and (and (and (and (= var1 (newHeap (alloc var2 (O_node var5)))) (= var4 var3)) (= var19 var13)) (= var12 var7)) (= var0 var22)) (= var20 var14)) (= var16 var21)) (= var11 (newAddr (alloc var2 (O_node var5))))) (and (and (and (and (and (and (= var2 (write var18 var15 (O_node (node 2 (n (getnode (read var18 var15))))))) (= var3 var17)) (= var13 var6)) (= var7 var10)) (= var22 var9)) (= var14 var8)) (= var21 var15)))))) (inv_main91 var1 var4 var19 var12 var0 var11 var16 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 node) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr)) (or (not (and (inv_main83 var18 var17 var6 var10 var9 var8 var15) (and (not (= var11 nullAddr)) (and (and (and (and (and (and (and (and (= var1 (newHeap (alloc var2 (O_node var5)))) (= var4 var3)) (= var19 var13)) (= var12 var7)) (= var0 var22)) (= var20 var14)) (= var16 var21)) (= var11 (newAddr (alloc var2 (O_node var5))))) (and (and (and (and (and (and (= var2 (write var18 var15 (O_node (node 2 (n (getnode (read var18 var15))))))) (= var3 var17)) (= var13 var6)) (= var7 var10)) (= var22 var9)) (= var14 var8)) (= var21 var15)))))) (inv_main88 var1 var4 var19 var12 var0 var11 var16))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Addr) (var14 Heap)) (or (not (and (inv_main94 var12 var10 var3 var6 var5 var4 var8) (and (and (and (and (and (and (and (= var14 var12) (= var9 var10)) (= var0 var3)) (= var13 var6)) (= var7 var5)) (= var2 var4)) (= var11 var8)) (= var1 (n (getnode (read var12 var8))))))) (inv_main68 var14 var9 var0 var13 var7 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Heap) (var12 Int) (var13 Addr) (var14 Addr) (var15 Addr)) (or (not (and (inv_main80 var11 var10 var2 var5 var4 var3 var8) (and (= var12 0) (and (and (and (and (and (and (and (= var9 var11) (= var1 var10)) (= var14 var2)) (= var13 var5)) (= var0 var4)) (= var15 var3)) (= var6 var8)) (= var7 (n (getnode (read var11 var8)))))))) (inv_main68 var9 var1 var14 var13 var0 var15 var7))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 node) (var9 Addr) (var10 Heap) (var11 Addr)) (or (not (and (inv_main39 var4 var2 var6 var9) (and (and (= var1 0) (and (not (= var5 nullAddr)) (and (and (and (and (= var10 (newHeap (alloc var4 (O_node var8)))) (= var3 var2)) (= var11 var6)) (= var7 var9)) (= var5 (newAddr (alloc var4 (O_node var8))))))) (= var2 nullAddr)))) (inv_main68 var10 var3 var11 var7 var5 var0 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main68 var2 var1 var3 var6 var5 var4 var7) (not (= var0 0)))) (inv_main83 var2 var1 var3 var6 var5 var4 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main35 var1 var0 var2)) (inv_main37 (write var1 (right (getTreeNode (read var1 var2))) (O_TreeNode (TreeNode nullAddr (right (getTreeNode (read var1 (right (getTreeNode (read var1 var2))))))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (inv_main74 var1 var0 var2 var5 var4 var3 var6)) (inv_main80 (write var1 var6 (O_node (node (h (getnode (read var1 var6))) var3))) var0 var2 var5 var4 var3 var6))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main29 var1 var0 var2)) (inv_main21 (write var1 (left (getTreeNode (read var1 var2))) (O_TreeNode (TreeNode (left (getTreeNode (read var1 (left (getTreeNode (read var1 var2)))))) nullAddr))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main11 var1 var0 var4) (and (= var3 0) (and (and (and (= var5 var1) (= var2 var0)) (= var6 var4)) (or (and (= (left (getTreeNode (read var1 var4))) nullAddr) (= var3 1)) (and (not (= (left (getTreeNode (read var1 var4))) nullAddr)) (= var3 0))))))) (inv_main21 var5 var2 var6))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr) (var7 Int)) (or (not (and (inv_main11 var3 var1 var4) (and (= var5 0) (and (not (= var7 0)) (and (and (and (= var0 var3) (= var6 var1)) (= var2 var4)) (or (and (= (left (getTreeNode (read var3 var4))) nullAddr) (= var7 1)) (and (not (= (left (getTreeNode (read var3 var4))) nullAddr)) (= var7 0)))))))) (inv_main21 var0 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 node) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Heap) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Heap)) (or (not (and (inv_main69 var16 var15 var3 var6 var5 var4 var12) (and (not (= var9 nullAddr)) (and (and (and (and (and (and (and (and (= var22 (newHeap (alloc var10 (O_node var8)))) (= var7 var11)) (= var19 var0)) (= var1 var2)) (= var18 var17)) (= var14 var20)) (= var13 var21)) (= var9 (newAddr (alloc var10 (O_node var8))))) (and (and (and (and (and (and (= var10 (write var16 var12 (O_node (node 1 (n (getnode (read var16 var12))))))) (= var11 var15)) (= var0 var3)) (= var2 var6)) (= var17 var5)) (= var20 var4)) (= var21 var12)))))) (inv_main74 var22 var7 var19 var1 var18 var9 var13))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main50 var3 var2 var4 var6) (and (and (and (and (= var8 var3) (= var5 var2)) (= var1 var4)) (= var7 var6)) (= var0 (left (getTreeNode (read var3 var4))))))) (inv_main43 var8 var5 var0 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main51 var2 var0 var4 var6) (and (and (and (and (= var1 var2) (= var5 var0)) (= var3 var4)) (= var7 var6)) (= var8 (right (getTreeNode (read var2 var4))))))) (inv_main43 var1 var5 var8 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main39 var1 var0 var4 var6) (and (not (= var0 nullAddr)) (and (and (and (= var2 var1) (= var3 var0)) (= var5 var4)) (= var7 nullAddr))))) (inv_main43 var2 var3 var3 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr)) (or (not (inv_main63 var1 var0 var3 var5 var4 var2)) (inv_main63 var1 var0 var3 var5 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 node) (var9 Heap)) (or (not (and (inv_main39 var3 var2 var5 var6) (and (and (= var0 nullAddr) (and (and (and (and (= var9 (newHeap (alloc var3 (O_node var8)))) (= var7 var2)) (= var1 var5)) (= var4 var6)) (= var0 (newAddr (alloc var3 (O_node var8)))))) (= var2 nullAddr)))) (inv_main63 var9 var7 var1 var4 var0 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (or (not (inv_main77 var1 var0 var2 var5 var4 var3 var7 var6)) (inv_main77 var1 var0 var2 var5 var4 var3 var7 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 node) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Heap) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Heap)) (or (not (and (inv_main69 var16 var15 var3 var6 var5 var4 var12) (and (= var9 nullAddr) (and (and (and (and (and (and (and (and (= var22 (newHeap (alloc var10 (O_node var8)))) (= var7 var11)) (= var19 var0)) (= var1 var2)) (= var18 var17)) (= var14 var20)) (= var13 var21)) (= var9 (newAddr (alloc var10 (O_node var8))))) (and (and (and (and (and (and (= var10 (write var16 var12 (O_node (node 1 (n (getnode (read var16 var12))))))) (= var11 var15)) (= var0 var3)) (= var2 var6)) (= var17 var5)) (= var20 var4)) (= var21 var12)))))) (inv_main77 var22 var7 var19 var1 var18 var9 var13 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main27 var1 var0 var2)) (inv_main29 (write var1 (left (getTreeNode (read var1 var2))) (O_TreeNode (TreeNode nullAddr (right (getTreeNode (read var1 (left (getTreeNode (read var1 var2))))))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main55 var1 var0 var2 var3) (= var2 (left (getTreeNode (read var1 var3)))))) (inv_main57 var1 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main55 var1 var0 var2 var3) (not (= var2 (left (getTreeNode (read var1 var3))))))) (inv_main58 var1 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (inv_main88 var1 var0 var2 var5 var4 var3 var6)) (inv_main94 (write var1 var6 (O_node (node (h (getnode (read var1 var6))) var3))) var0 var2 var5 var4 var3 var6))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (or (not (and (inv_main13 var3 var1 var6 var4) (and (= var7 0) (and (not (= var2 0)) (and (not (= var4 nullAddr)) (and (and (and (= var0 var3) (= var5 var1)) (= var8 var6)) (= var2 (right (getTreeNode (read var3 var6)))))))))) (inv_main17 var0 var5 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Heap) (var13 Addr) (var14 Addr) (var15 Addr)) (or (not (and (inv_main80 var12 var11 var2 var5 var4 var3 var9) (and (not (= var7 0)) (and (and (and (and (and (and (and (= var10 var12) (= var1 var11)) (= var14 var2)) (= var13 var5)) (= var0 var4)) (= var15 var3)) (= var6 var9)) (= var8 (n (getnode (read var12 var9)))))))) (inv_main69 var10 var1 var14 var13 var0 var15 var8))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 node) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr)) (or (not (and (inv_main39 var4 var2 var6 var10) (and (and (not (= var1 0)) (and (not (= var0 nullAddr)) (and (and (and (and (= var8 (newHeap (alloc var4 (O_node var5)))) (= var9 var2)) (= var3 var6)) (= var7 var10)) (= var0 (newAddr (alloc var4 (O_node var5))))))) (= var2 nullAddr)))) (inv_main69 var8 var9 var3 var7 var0 var11 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 TreeNode) (var7 Int) (var8 Int)) (or (not (and (inv_main11 var3 var1 var4) (and (not (= var7 0)) (and (not (= var8 0)) (and (and (and (= var0 var3) (= var5 var1)) (= var2 var4)) (or (and (= (left (getTreeNode (read var3 var4))) nullAddr) (= var8 1)) (and (not (= (left (getTreeNode (read var3 var4))) nullAddr)) (= var8 0)))))))) (inv_main28 (newHeap (alloc var0 (O_TreeNode var6))) var5 var2 (newAddr (alloc var0 (O_TreeNode var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main10 var1 var0 var2)) (inv_main13 var1 var0 var2 (left (getTreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (inv_main36 var1 var0 var2 var3)) (inv_main35 (write var1 var2 (O_TreeNode (TreeNode (left (getTreeNode (read var1 var2))) var3))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (inv_main43 var1 var0 var2 var3)) (inv_main46 var1 var0 var2 var3 (left (getTreeNode (read var1 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main68 var2 var1 var3 var6 var5 var4 var7) (= var0 0))) (inv_main82 var2 var1 var3 var6 var5 var4 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Heap) (var13 Addr) (var14 Addr)) (or (not (and (inv_main102 var10 var9 var1 var5 var4 var3 var7) (and (not (= var6 3)) (and (and (and (and (and (and (and (= var12 var10) (= var8 var9)) (= var13 var1)) (= var14 var5)) (= var11 var4)) (= var0 var3)) (= var2 var7)) (= var6 (h (getnode (read var10 var7)))))))) (inv_main107 var12 var8 var13 var14 var11 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (inv_main99 var10 var9 var4 var7 var6 var5 var8) (and (and (and (and (and (and (and (= var14 var10) (= var0 var9)) (= var1 var4)) (= var12 var7)) (= var3 var6)) (= var2 var5)) (= var11 var8)) (= var13 (n (getnode (read var10 var8))))))) (inv_main97 var14 var0 var1 var12 var3 var2 var13))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Addr)) (or (not (and (inv_main82 var9 var8 var1 var4 var3 var2 var6) (and (and (and (and (and (and (= var12 (write var9 var6 (O_node (node 3 (n (getnode (read var9 var6))))))) (= var0 var8)) (= var7 var1)) (= var5 var4)) (= var13 var3)) (= var11 var2)) (= var10 var6)))) (inv_main97 var12 var0 var7 var5 var13 var11 var13))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Int)) (or (not (and (inv_main97 var11 var10 var2 var6 var5 var4 var7) (and (= var14 2) (and (and (and (and (and (and (and (= var9 var11) (= var8 var10)) (= var0 var2)) (= var1 var6)) (= var3 var5)) (= var13 var4)) (= var12 var7)) (= var14 (h (getnode (read var11 var7)))))))) (inv_main99 var9 var8 var0 var1 var3 var13 var12))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main13 var1 var0 var3 var2) (= var2 nullAddr))) (inv_main11 var1 var0 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main13 var3 var1 var6 var4) (and (= var2 0) (and (not (= var4 nullAddr)) (and (and (and (= var0 var3) (= var5 var1)) (= var7 var6)) (= var2 (right (getTreeNode (read var3 var6))))))))) (inv_main11 var0 var5 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr)) (or (not (and (inv_main57 var3 var1 var4 var5) (and (and (and (= var6 (write var3 var5 (O_TreeNode (TreeNode nullAddr (right (getTreeNode (read var3 var5))))))) (= var2 var1)) (= var7 var4)) (= var0 var5)))) (inv_main39 (write var6 var7 defObj) var2 var7 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr)) (or (not (and (inv_main58 var3 var2 var5 var7) (and (and (and (= var1 (write var3 var7 (O_TreeNode (TreeNode (left (getTreeNode (read var3 var7))) nullAddr)))) (= var6 var2)) (= var4 var5)) (= var0 var7)))) (inv_main39 (write var1 var4 defObj) var6 var4 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Heap)) (or (not (and (inv_main46 var9 var7 var4 var5 var8) (and (and (= var6 nullAddr) (and (= var1 0) (and (= var8 nullAddr) (and (and (and (and (= var13 var9) (= var2 var7)) (= var3 var4)) (= var6 var5)) (= var1 (right (getTreeNode (read var9 var4)))))))) (and (and (and (= var0 var13) (= var12 nullAddr)) (= var11 var3)) (= var10 var6))))) (inv_main39 (write var0 var11 defObj) var12 var11 var10))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr)) (or (not (and (inv_main6 var1 var0 var3) (and (= var6 0) (and (and (= var5 var1) (= var7 var0)) (= var2 nullAddr))))) (inv_main39 var5 var7 var2 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main16 var2 var1 var4) (and (and (and (= var6 var2) (= var5 var1)) (= var3 var4)) (= var0 (left (getTreeNode (read var2 var4))))))) (inv_main10 var6 var5 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main17 var2 var1 var4) (and (and (and (= var5 var2) (= var3 var1)) (= var0 var4)) (= var6 (right (getTreeNode (read var2 var4))))))) (inv_main10 var5 var3 var6))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int)) (or (not (and (inv_main6 var1 var0 var2) (not (= var3 0)))) (inv_main10 var1 var0 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (inv_main28 var1 var0 var2 var3)) (inv_main27 (write var1 var2 (O_TreeNode (TreeNode var3 (right (getTreeNode (read var1 var2)))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main49 var1 var0 var2 var3) (= (left (getTreeNode (read var1 var2))) nullAddr))) (inv_main51 var1 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main46 var3 var1 var7 var8 var2) (and (not (= var0 nullAddr)) (and (= var4 0) (and (= var2 nullAddr) (and (and (and (and (= var9 var3) (= var5 var1)) (= var6 var7)) (= var0 var8)) (= var4 (right (getTreeNode (read var3 var7)))))))))) (inv_main55 var9 var5 var6 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (or (not (and (inv_main13 var3 var1 var6 var4) (and (not (= var7 0)) (and (not (= var2 0)) (and (not (= var4 nullAddr)) (and (and (and (= var0 var3) (= var5 var1)) (= var8 var6)) (= var2 (right (getTreeNode (read var3 var6)))))))))) (inv_main16 var0 var5 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 TreeNode)) (or (not (and (inv_main21 var2 var1 var3) (and (not (= var0 0)) (and (not (= var5 0)) (and (and (and (= var4 var2) (= var6 var1)) (= var7 var3)) (or (and (= (right (getTreeNode (read var2 var3))) nullAddr) (= var5 1)) (and (not (= (right (getTreeNode (read var2 var3))) nullAddr)) (= var5 0)))))))) (inv_main36 (newHeap (alloc var4 (O_TreeNode var8))) var6 var7 (newAddr (alloc var4 (O_TreeNode var8)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 TreeNode)) (or (not (inv_main3 var0)) (inv_main4 (newHeap (alloc var0 (O_TreeNode var2))) (newAddr (alloc var0 (O_TreeNode var2))) var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main5 var1 var0 var2)) (inv_main6 (write var1 var0 (O_TreeNode (TreeNode (left (getTreeNode (read var1 var0))) nullAddr))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main37 var1 var0 var2)) (inv_main6 (write var1 (right (getTreeNode (read var1 var2))) (O_TreeNode (TreeNode (left (getTreeNode (read var1 (right (getTreeNode (read var1 var2)))))) nullAddr))) var0 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main21 var3 var1 var4) (and (= var2 0) (and (and (and (= var0 var3) (= var6 var1)) (= var5 var4)) (or (and (= (right (getTreeNode (read var3 var4))) nullAddr) (= var2 1)) (and (not (= (right (getTreeNode (read var3 var4))) nullAddr)) (= var2 0))))))) (inv_main6 var0 var6 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr)) (or (not (and (inv_main21 var2 var1 var3) (and (= var0 0) (and (not (= var5 0)) (and (and (and (= var4 var2) (= var6 var1)) (= var7 var3)) (or (and (= (right (getTreeNode (read var2 var3))) nullAddr) (= var5 1)) (and (not (= (right (getTreeNode (read var2 var3))) nullAddr)) (= var5 0)))))))) (inv_main6 var4 var6 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (or (not (and (inv_main49 var1 var0 var2 var3) (not (= (left (getTreeNode (read var1 var2))) nullAddr)))) (inv_main50 var1 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Heap) (var14 Addr)) (or (not (and (inv_main97 var10 var9 var0 var3 var2 var1 var7) (and (not (= var8 2)) (and (and (and (and (and (and (and (= var13 var10) (= var12 var9)) (= var5 var0)) (= var4 var3)) (= var6 var2)) (= var14 var1)) (= var11 var7)) (= var8 (h (getnode (read var10 var7)))))))) (inv_main98 var13 var12 var5 var4 var6 var14 var11))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Heap) (var14 Addr)) (or (not (and (inv_main103 var10 var9 var2 var6 var5 var4 var8) (and (and (and (and (and (and (and (= var13 var10) (= var7 var9)) (= var0 var2)) (= var1 var6)) (= var14 var5)) (= var12 var4)) (= var11 var8)) (= var3 (n (getnode (read var10 var8))))))) (inv_main98 var13 var7 var0 var1 var14 var12 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main4 var1 var0 var2) (not (is-O_TreeNode (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main5 var1 var0 var2) (not (is-O_TreeNode (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main10 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main13 var1 var0 var3 var2) (and (not (= var2 nullAddr)) (not (is-O_TreeNode (read var1 var3))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main16 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main17 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main11 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main28 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main27 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main27 var1 var0 var2) (not (is-O_TreeNode (read var1 (left (getTreeNode (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main29 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main29 var1 var0 var2) (not (is-O_TreeNode (read var1 (left (getTreeNode (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main21 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main36 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main35 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main35 var1 var0 var2) (not (is-O_TreeNode (read var1 (right (getTreeNode (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main37 var1 var0 var2) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main37 var1 var0 var2) (not (is-O_TreeNode (read var1 (right (getTreeNode (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main43 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main46 var2 var0 var3 var4 var1) (and (= var1 nullAddr) (not (is-O_TreeNode (read var2 var3))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main49 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main50 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main51 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main55 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main57 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr)) (not (and (inv_main58 var1 var0 var2 var3) (not (is-O_TreeNode (read var1 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main69 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main74 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main80 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main83 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main88 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main94 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main82 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main97 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main99 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main98 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main103 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (and (inv_main102 var1 var0 var2 var5 var4 var3 var6) (not (is-O_node (read var1 var6)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr)) (not (inv_main107 var1 var0 var2 var5 var4 var3 var6))))
(check-sat)
