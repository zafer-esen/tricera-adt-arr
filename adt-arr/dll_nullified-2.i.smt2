(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (data_0 Int) (next Addr) (data_1 Int) (prev Addr) (data_2 Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main11 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main14 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main17 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main18 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main20 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main23 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main26 (Heap Int Addr) Bool)
(declare-fun inv_main28 (Heap Int Addr) Bool)
(declare-fun inv_main29 (Heap Int Addr) Bool)
(declare-fun inv_main3 (Heap Int) Bool)
(declare-fun inv_main32 (Heap Int Addr Int) Bool)
(declare-fun inv_main34 (Heap Int Addr Int) Bool)
(declare-fun inv_main39 (Heap Int Addr) Bool)
(declare-fun inv_main40 (Heap Int Addr Addr) Bool)
(declare-fun inv_main44 (Heap Int Addr Addr Int) Bool)
(declare-fun inv_main46 (Heap Int Addr Addr Int) Bool)
(declare-fun inv_main50 (Heap Int Addr) Bool)
(declare-fun inv_main7 (Heap Int Int Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main3 var0 5))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main28 var2 var1 var0) (is-O_node (read var2 var0)))) (and (or (not (not (= 0 (data_0 (getnode (read var2 var0)))))) (inv_main32 var2 var1 var0 1)) (or (not (= 0 (data_0 (getnode (read var2 var0))))) (inv_main32 var2 var1 var0 0))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main26 var2 var1 var0) (and (is-O_node (read var2 var0)) (not (= (next (getnode (read var2 var0))) nullAddr))))) (inv_main28 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (inv_main44 var4 var3 var2 var1 var0) (not (= var0 0)))) (inv_main46 var4 var3 var2 var1 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (inv_main44 var9 var8 var7 var6 var5) (and (and (= var5 0) (is-O_node (read var9 var7))) (and (and (and (and (= var4 var9) (= var3 var8)) (= var2 var7)) (= var1 var6)) (or (and (not (= 0 (data_1 (getnode (read var9 var7))))) (= var0 1)) (and (= 0 (data_1 (getnode (read var9 var7)))) (= var0 0))))))) (inv_main46 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (and (inv_main32 var3 var2 var1 var0) (not (= var0 0)))) (inv_main34 var3 var2 var1 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main32 var7 var6 var5 var4) (and (and (= var4 0) (is-O_node (read var7 var5))) (and (and (and (= var3 var7) (= var2 var6)) (= var1 var5)) (or (and (not (= 0 (data_1 (getnode (read var7 var5))))) (= var0 1)) (and (= 0 (data_1 (getnode (read var7 var5)))) (= var0 0))))))) (inv_main34 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main34 var7 var6 var5 var4) (and (= var3 0) (and (and (= var4 0) (is-O_node (read var7 var5))) (and (and (and (= var2 var7) (= var1 var6)) (= var0 var5)) (or (and (not (= 0 (data_2 (getnode (read var7 var5))))) (= var3 1)) (and (= 0 (data_2 (getnode (read var7 var5)))) (= var3 0)))))))) (inv_main29 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (and (inv_main40 var3 var2 var1 var0) (is-O_node (read var3 var1)))) (and (or (not (not (= 0 (data_0 (getnode (read var3 var1)))))) (inv_main44 var3 var2 var1 var0 1)) (or (not (= 0 (data_0 (getnode (read var3 var1))))) (inv_main44 var3 var2 var1 var0 0))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main7 var9 var8 var7 var6) (and (and (not (= nullAddr var5)) (and (and (and (and (= var4 (newHeap (alloc var9 (O_node var3)))) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (newAddr (alloc var9 (O_node var3)))))) (<= 0 (+ var7 (- 1)))))) (inv_main11 var4 var2 var1 var0 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main11 var4 var3 var2 var1 var0) (is-O_node (read var4 var0)))) (inv_main17 (write var4 var0 (O_node (node 0 (next (getnode (read var4 var0))) (data_1 (getnode (read var4 var0))) (prev (getnode (read var4 var0))) (data_2 (getnode (read var4 var0)))))) var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main23 var9 var8 var7 var6 var5) (and (is-O_node (read var9 var6)) (and (and (and (and (= var4 (write var9 var6 (O_node (node (data_0 (getnode (read var9 var6))) (next (getnode (read var9 var6))) (data_1 (getnode (read var9 var6))) var5 (data_2 (getnode (read var9 var6))))))) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 var5))))) (inv_main7 var4 var3 (+ var2 (- 1)) var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main20 var9 var8 var7 var6 var5) (and (and (= var4 nullAddr) (is-O_node (read var9 var5))) (and (and (and (and (= var3 (write var9 var5 (O_node (node (data_0 (getnode (read var9 var5))) (next (getnode (read var9 var5))) (data_1 (getnode (read var9 var5))) nullAddr (data_2 (getnode (read var9 var5))))))) (= var2 var8)) (= var1 var7)) (= var4 var6)) (= var0 var5))))) (inv_main7 var3 var2 (+ var1 (- 1)) var0))))
(assert (forall ((var0 Int) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main7 var1 var0 var0 nullAddr))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main26 var2 var1 var0) (and (not (= var0 nullAddr)) (and (is-O_node (read var2 var0)) (= (next (getnode (read var2 var0))) nullAddr))))) (inv_main39 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Addr) (var12 Int) (var13 Heap)) (or (not (and (inv_main46 var13 var12 var11 var10 var9) (and (not (= var8 nullAddr)) (and (and (= var7 0) (and (and (= var9 0) (is-O_node (read var13 var11))) (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 var11)) (= var3 var10)) (or (and (not (= 0 (data_2 (getnode (read var13 var11))))) (= var7 1)) (and (= 0 (data_2 (getnode (read var13 var11)))) (= var7 0)))))) (and (and (and (= var2 (write var6 var4 defObj)) (= var1 var5)) (= var0 var4)) (= var8 var3)))))) (inv_main39 var2 var1 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (is-O_node (read var4 var0)))) (inv_main20 (write var4 var0 (O_node (node (data_0 (getnode (read var4 var0))) var1 (data_1 (getnode (read var4 var0))) (prev (getnode (read var4 var0))) (data_2 (getnode (read var4 var0)))))) var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main17 var4 var3 var2 var1 var0) (is-O_node (read var4 var0)))) (inv_main18 (write var4 var0 (O_node (node (data_0 (getnode (read var4 var0))) (next (getnode (read var4 var0))) 0 (prev (getnode (read var4 var0))) (data_2 (getnode (read var4 var0)))))) var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main20 var9 var8 var7 var6 var5) (and (and (not (= var4 nullAddr)) (is-O_node (read var9 var5))) (and (and (and (and (= var3 (write var9 var5 (O_node (node (data_0 (getnode (read var9 var5))) (next (getnode (read var9 var5))) (data_1 (getnode (read var9 var5))) nullAddr (data_2 (getnode (read var9 var5))))))) (= var2 var8)) (= var1 var7)) (= var4 var6)) (= var0 var5))))) (inv_main23 var3 var2 var1 var4 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (inv_main14 var5 var4 var3 var2 var1 var0)) (inv_main14 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main7 var9 var8 var7 var6) (and (and (= nullAddr var5) (and (and (and (and (= var4 (newHeap (alloc var9 (O_node var3)))) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (newAddr (alloc var9 (O_node var3)))))) (<= 0 (+ var7 (- 1)))))) (inv_main14 var4 var2 var1 var0 var5 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (inv_main46 var4 var3 var2 var1 var0) (not (= var0 0)))) (inv_main50 var4 var3 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (inv_main46 var9 var8 var7 var6 var5) (and (not (= var4 0)) (and (and (= var5 0) (is-O_node (read var9 var7))) (and (and (and (and (= var3 var9) (= var2 var8)) (= var1 var7)) (= var0 var6)) (or (and (not (= 0 (data_2 (getnode (read var9 var7))))) (= var4 1)) (and (= 0 (data_2 (getnode (read var9 var7)))) (= var4 0)))))))) (inv_main50 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (and (inv_main34 var3 var2 var1 var0) (not (= var0 0)))) (inv_main50 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main34 var7 var6 var5 var4) (and (not (= var3 0)) (and (and (= var4 0) (is-O_node (read var7 var5))) (and (and (and (= var2 var7) (= var1 var6)) (= var0 var5)) (or (and (not (= 0 (data_2 (getnode (read var7 var5))))) (= var3 1)) (and (= 0 (data_2 (getnode (read var7 var5)))) (= var3 0)))))))) (inv_main50 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (inv_main29 var6 var5 var4) (and (is-O_node (read var6 var4)) (and (and (and (= var3 var6) (= var2 var5)) (= var1 var4)) (= var0 (next (getnode (read var6 var4)))))))) (inv_main26 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main7 var3 var2 var1 var0) (not (<= 0 (+ var1 (- 1)))))) (inv_main26 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main39 var2 var1 var0) (is-O_node (read var2 var0)))) (inv_main40 var2 var1 var0 (prev (getnode (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main18 var4 var3 var2 var1 var0) (is-O_node (read var4 var0)))) (inv_main19 (write var4 var0 (O_node (node (data_0 (getnode (read var4 var0))) (next (getnode (read var4 var0))) (data_1 (getnode (read var4 var0))) (prev (getnode (read var4 var0))) 0))) var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main11 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main17 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main18 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main19 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main23 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main26 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main28 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main32 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var3 var1))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main34 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var3 var1))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main29 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main39 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main40 var3 var2 var1 var0) (not (is-O_node (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main44 var4 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main46 var4 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (inv_main50 var2 var1 var0))))
(check-sat)
