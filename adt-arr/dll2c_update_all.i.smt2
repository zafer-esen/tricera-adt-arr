(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main12 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main32 (Heap Int Int Int Int Addr Addr Int Addr Int) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main38 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main44 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main49 (Heap Int Int Addr Int) Bool)
(declare-fun inv_main56 (Heap Int Int Addr Int Int Addr Int Int) Bool)
(declare-fun inv_main57 (Heap Int Int Addr Int Int Addr Int Int) Bool)
(declare-fun inv_main61 (Heap Int Int Addr Int) Bool)
(declare-fun inv_main70 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main71 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main78 (Heap Int Int Addr Int Addr) Bool)
(declare-fun inv_main82 (Heap Int Int Addr Int Addr Addr) Bool)
(declare-fun inv_main85 (Heap Int Int Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main49 var4 var2 var1 var0 var3) (not (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))))) (inv_main61 var4 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main70 var6 var9 var8 var7 var11 var3 var4 var12) (and (= var13 var2) (and (and (and (and (and (and (= var14 var6) (= var0 var9)) (= var1 var8)) (= var10 var7)) (= var5 var11)) (= var13 var3)) (= var2 (data (getnode (read var6 var4)))))))) (inv_main61 var14 var0 var1 var10 (+ var5 1)))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int)) (or (not (and (inv_main57 var4 var13 var10 var9 var14 var18 var0 var12 var15) (and (not (<= 0 (+ (+ var16 (- 1)) (- 1)))) (and (and (and (and (and (and (and (and (and (= var7 var4) (= var2 var13)) (= var8 var10)) (= var1 var9)) (= var11 var14)) (= var3 var18)) (= var6 var0)) (= var17 var12)) (= var16 var15)) (= var5 (next (getnode (read var4 var0)))))))) (inv_main56 var7 var2 var8 var1 var11 var3 var5 var17 (+ var16 (- 1))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main49 var4 var2 var1 var0 var3) (and (not (<= 0 (+ var3 (- 1)))) (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))))) (inv_main56 var4 var2 var1 var0 var3 (+ var3 var2) var0 (+ var3 var2) var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (inv_main15 var7 var4 var1 var3 var6 var0 var2 var5)) (inv_main15 var7 var4 var1 var3 var6 var0 var2 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Heap) (var8 Int) (var9 Int) (var10 node)) (or (not (and (inv_main4 var7 var4 var2) (and (= nullAddr var1) (and (and (and (and (and (and (= var6 (newHeap (alloc var7 (O_node var10)))) (= var9 var4)) (= var0 var2)) (= var5 var4)) (= var8 var2)) (= var3 var2)) (= var1 (newAddr (alloc var7 (O_node var10)))))))) (inv_main15 var6 var9 var0 var5 var8 var3 var1 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (inv_main29 var8 var3 var0 var2 var7 var1 var5 var6 var4)) (inv_main35 (write var8 var4 (O_node (node nullAddr (prev (getnode (read var8 var4))) (data (getnode (read var8 var4)))))) var3 var0 var2 var7 var1 var5 var6 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 node) (var8 Int) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Int) (var16 Int)) (or (not (and (inv_main22 var2 var9 var5 var8 var13 var6 var10) (and (and (not (= nullAddr var12)) (and (and (and (and (and (and (and (and (= var14 (newHeap (alloc var2 (O_node var7)))) (= var1 var9)) (= var4 var5)) (= var3 var8)) (= var15 var13)) (= var0 var6)) (= var11 var10)) (= var16 var13)) (= var12 (newAddr (alloc var2 (O_node var7)))))) (<= 0 (+ (+ var8 (- 1)) (- 1)))))) (inv_main29 var14 var1 var4 var3 var15 var0 var11 var16 var12))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (inv_main12 var6 var4 var1 var3 var5 var0 var2)) (inv_main18 (write var6 var2 (O_node (node nullAddr (prev (getnode (read var6 var2))) (data (getnode (read var6 var2)))))) var4 var1 var3 var5 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap) (var11 Addr) (var12 Heap)) (or (not (and (inv_main78 var12 var6 var2 var1 var7 var0) (and (not (= var8 var11)) (and (and (and (and (and (and (= var10 var12) (= var4 var6)) (= var3 var2)) (= var5 var1)) (= var9 var7)) (= var11 var0)) (= var8 (next (getnode (read var12 var0)))))))) (inv_main82 var10 var4 var3 var5 var9 var11 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Int) (var17 Int) (var18 Addr) (var19 Int) (var20 Heap) (var21 Int) (var22 Int)) (or (not (and (inv_main82 var8 var15 var12 var10 var17 var2 var14) (and (not (= var1 var9)) (and (and (and (and (and (and (and (and (= var3 var8) (= var22 var15)) (= var19 var12)) (= var5 var10)) (= var16 var17)) (= var18 var2)) (= var4 var14)) (= var11 (next (getnode (read var8 var14))))) (and (and (and (and (and (and (and (= var20 (write var3 var4 defObj)) (= var21 var22)) (= var13 var19)) (= var0 var5)) (= var6 var16)) (= var9 var18)) (= var7 var4)) (= var1 var11)))))) (inv_main82 var20 var21 var13 var0 var6 var9 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (inv_main22 var6 var3 var0 var2 var5 var1 var4) (not (<= 0 (+ (+ var2 (- 1)) (- 1)))))) (inv_main23 var6 var3 var0 var2 var5 var1 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap) (var16 Addr) (var17 Int)) (or (not (and (inv_main56 var4 var11 var8 var7 var12 var17 var1 var10 var14) (and (and (and (and (and (and (and (and (= var15 (write var4 var1 (O_node (node (next (getnode (read var4 var1))) (prev (getnode (read var4 var1))) var10)))) (= var13 var11)) (= var0 var8)) (= var16 var7)) (= var6 var12)) (= var3 var17)) (= var2 var1)) (= var5 var10)) (= var9 var14)))) (inv_main49 var15 var13 var0 var16 (+ var6 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Heap) (var12 Int) (var13 Addr)) (or (not (and (inv_main44 var2 var9 var5 var7 var12 var6 var10) (and (and (and (and (and (and (= var11 (write var2 var6 (O_node (node (next (getnode (read var2 var6))) var10 (data (getnode (read var2 var6))))))) (= var1 var9)) (= var0 var5)) (= var4 var7)) (= var3 var12)) (= var8 var6)) (= var13 var10)))) (inv_main49 var11 var1 var0 var8 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Addr)) (or (not (and (inv_main71 var5 var11 var9 var8 var13 var3 var4 var15) (and (<= 0 (+ (+ var0 (- 1)) (- 1))) (and (and (and (and (and (and (and (and (= var6 var5) (= var1 var11)) (= var2 var9)) (= var16 var8)) (= var10 var13)) (= var14 var3)) (= var12 var4)) (= var0 var15)) (= var7 (next (getnode (read var5 var4)))))))) (inv_main71 var6 var1 var2 var16 var10 var14 var7 (+ var0 (- 1))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main61 var4 var2 var1 var0 var3) (and (<= 0 (+ var3 (- 1))) (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))))) (inv_main71 var4 var2 var1 var0 var3 (+ var3 var2) var0 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Heap) (var9 Int) (var10 node)) (or (not (and (inv_main4 var8 var6 var3) (and (not (= nullAddr var1)) (and (and (and (and (and (and (= var7 (newHeap (alloc var8 (O_node var10)))) (= var4 var6)) (= var9 var3)) (= var2 var6)) (= var0 var3)) (= var5 var3)) (= var1 (newAddr (alloc var8 (O_node var10)))))))) (inv_main12 var7 var4 var9 var2 var0 var5 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int)) (or (not (and (inv_main57 var4 var13 var10 var9 var14 var18 var0 var12 var15) (and (<= 0 (+ (+ var16 (- 1)) (- 1))) (and (and (and (and (and (and (and (and (and (= var7 var4) (= var2 var13)) (= var8 var10)) (= var1 var9)) (= var11 var14)) (= var3 var18)) (= var6 var0)) (= var17 var12)) (= var16 var15)) (= var5 (next (getnode (read var4 var0)))))))) (inv_main57 var7 var2 var8 var1 var11 var3 var5 var17 (+ var16 (- 1))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main49 var4 var2 var1 var0 var3) (and (<= 0 (+ var3 (- 1))) (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))))) (inv_main57 var4 var2 var1 var0 var3 (+ var3 var2) var0 (+ var3 var2) var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (inv_main18 var6 var4 var1 var3 var5 var0 var2)) (inv_main19 (write var6 var2 (O_node (node (next (getnode (read var6 var2))) nullAddr (data (getnode (read var6 var2)))))) var4 var1 var3 var5 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int) (var16 Addr)) (or (not (and (inv_main71 var5 var11 var9 var8 var13 var3 var4 var15) (and (not (<= 0 (+ (+ var0 (- 1)) (- 1)))) (and (and (and (and (and (and (and (and (= var6 var5) (= var1 var11)) (= var2 var9)) (= var16 var8)) (= var10 var13)) (= var14 var3)) (= var12 var4)) (= var0 var15)) (= var7 (next (getnode (read var5 var4)))))))) (inv_main70 var6 var1 var2 var16 var10 var14 var7 (+ var0 (- 1))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main61 var4 var2 var1 var0 var3) (and (not (<= 0 (+ var3 (- 1)))) (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))))) (inv_main70 var4 var2 var1 var0 var3 (+ var3 var2) var0 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (inv_main23 var6 var3 var0 var2 var5 var1 var4)) (inv_main44 (write var6 var4 (O_node (node var1 (prev (getnode (read var6 var4))) (data (getnode (read var6 var4)))))) var3 var0 var2 var5 var1 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Heap) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int)) (or (not (and (inv_main70 var6 var11 var10 var9 var12 var4 var5 var14) (and (not (= var13 var0)) (and (and (and (and (and (and (= var2 var6) (= var3 var11)) (= var8 var10)) (= var1 var9)) (= var7 var12)) (= var13 var4)) (= var0 (data (getnode (read var6 var5)))))))) (inv_main85 var2 var3 var8 var1 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Addr) (var16 Int) (var17 Addr)) (or (not (and (inv_main36 var5 var12 var9 var11 var16 var10 var15 var4 var2) (and (and (and (and (and (and (and (and (= var6 (write var5 var2 (O_node (node (next (getnode (read var5 var2))) (prev (getnode (read var5 var2))) var4)))) (= var14 var12)) (= var3 var9)) (= var13 var11)) (= var1 var16)) (= var17 var10)) (= var8 var15)) (= var0 var4)) (= var7 var2)))) (inv_main38 var6 var14 var3 var13 var1 var17 var8 var7))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main41 var4 var10 var7 var9 var13 var8 var11 var0) (and (and (and (and (and (and (and (= var15 (write var4 var8 (O_node (node (next (getnode (read var4 var8))) var0 (data (getnode (read var4 var8))))))) (= var3 var10)) (= var1 var7)) (= var14 var9)) (= var2 var13)) (= var6 var8)) (= var12 var11)) (= var5 var0)))) (inv_main22 var15 var3 var1 (+ var14 (- 1)) var2 var5 var12))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Addr) (var14 Int) (var15 Int)) (or (not (and (inv_main38 var4 var11 var7 var10 var14 var8 var12 var0) (and (= var9 nullAddr) (and (and (and (and (and (and (and (= var1 (write var4 var0 (O_node (node var8 (prev (getnode (read var4 var0))) (data (getnode (read var4 var0))))))) (= var15 var11)) (= var2 var7)) (= var3 var10)) (= var5 var14)) (= var9 var8)) (= var13 var12)) (= var6 var0))))) (inv_main22 var1 var15 var2 (+ var3 (- 1)) var5 var6 var13))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main19 var6 var11 var9 var10 var13 var2 var3) (and (and (and (and (and (and (= var5 (write var6 var3 (O_node (node (next (getnode (read var6 var3))) (prev (getnode (read var6 var3))) var2)))) (= var8 var11)) (= var7 var9)) (= var1 var10)) (= var0 var13)) (= var12 var2)) (= var4 var3)))) (inv_main22 var5 var8 var7 var1 var0 var4 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (inv_main35 var8 var3 var0 var2 var7 var1 var5 var6 var4)) (inv_main36 (write var8 var4 (O_node (node (next (getnode (read var8 var4))) nullAddr (data (getnode (read var8 var4)))))) var3 var0 var2 var7 var1 var5 var6 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main61 var4 var2 var1 var0 var3) (and (not (= nullAddr var0)) (not (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1))))))) (inv_main78 var4 var2 var1 var0 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (inv_main32 var9 var4 var1 var3 var8 var2 var6 var7 var5 var0)) (inv_main32 var9 var4 var1 var3 var8 var2 var6 var7 var5 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 node) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Addr) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr)) (or (not (and (inv_main22 var7 var13 var10 var12 var15 var11 var14) (and (and (= nullAddr var16) (and (and (and (and (and (and (and (and (= var4 (newHeap (alloc var7 (O_node var6)))) (= var5 var13)) (= var2 var10)) (= var1 var12)) (= var0 var15)) (= var3 var11)) (= var9 var14)) (= var8 var15)) (= var16 (newAddr (alloc var7 (O_node var6)))))) (<= 0 (+ (+ var12 (- 1)) (- 1)))))) (inv_main32 var4 var5 var2 var1 var0 var3 var9 var8 var16 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main38 var5 var11 var8 var10 var14 var9 var12 var0) (and (not (= var7 nullAddr)) (and (and (and (and (and (and (and (= var4 (write var5 var0 (O_node (node var9 (prev (getnode (read var5 var0))) (data (getnode (read var5 var0))))))) (= var1 var11)) (= var13 var8)) (= var2 var10)) (= var15 var14)) (= var7 var9)) (= var3 var12)) (= var6 var0))))) (inv_main41 var4 var1 var13 var2 var15 var7 var3 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main12 var6 var4 var1 var3 var5 var0 var2) (not (is-O_node (read var6 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main18 var6 var4 var1 var3 var5 var0 var2) (not (is-O_node (read var6 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main19 var6 var4 var1 var3 var5 var0 var2) (not (is-O_node (read var6 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main29 var8 var3 var0 var2 var7 var1 var5 var6 var4) (not (is-O_node (read var8 var4)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main35 var8 var3 var0 var2 var7 var1 var5 var6 var4) (not (is-O_node (read var8 var4)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main36 var8 var3 var0 var2 var7 var1 var5 var6 var4) (not (is-O_node (read var8 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (not (and (inv_main38 var7 var4 var1 var3 var6 var2 var5 var0) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (not (and (inv_main41 var7 var4 var1 var3 var6 var2 var5 var0) (not (is-O_node (read var7 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var3 var0 var2 var5 var1 var4) (not (is-O_node (read var6 var4)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap)) (not (and (inv_main44 var6 var3 var0 var2 var5 var1 var4) (not (is-O_node (read var6 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (not (and (inv_main57 var7 var4 var2 var1 var5 var8 var0 var3 var6) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (not (and (inv_main56 var7 var4 var2 var1 var5 var8 var0 var3 var6) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (not (and (inv_main71 var7 var2 var1 var0 var3 var4 var5 var6) (not (is-O_node (read var7 var5)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (not (and (inv_main70 var7 var2 var1 var0 var3 var4 var5 var6) (not (is-O_node (read var7 var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main78 var5 var3 var2 var1 var4 var0) (not (is-O_node (read var5 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main82 var6 var4 var2 var1 var5 var0 var3) (not (is-O_node (read var6 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (inv_main85 var4 var2 var1 var0 var3))))
(check-sat)
