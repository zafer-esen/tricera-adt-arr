(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (prev Addr) (inner Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main101 (Heap Addr Addr) Bool)
(declare-fun inv_main104 (Heap Addr Addr) Bool)
(declare-fun inv_main107 (Heap Addr Addr) Bool)
(declare-fun inv_main109 (Heap Addr Addr) Bool)
(declare-fun inv_main11 (Heap Addr) Bool)
(declare-fun inv_main112 (Heap Addr Addr) Bool)
(declare-fun inv_main114 (Heap Addr Addr) Bool)
(declare-fun inv_main119 (Heap Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr) Bool)
(declare-fun inv_main122 (Heap Addr Addr) Bool)
(declare-fun inv_main15 (Heap Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main17 (Heap Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main20 (Heap Addr) Bool)
(declare-fun inv_main22 (Heap Addr Addr) Bool)
(declare-fun inv_main27 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr) Bool)
(declare-fun inv_main47 (Heap Addr Addr) Bool)
(declare-fun inv_main48 (Heap Addr Addr) Bool)
(declare-fun inv_main51 (Heap Addr Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main53 (Heap Addr Addr) Bool)
(declare-fun inv_main56 (Heap Addr Addr) Bool)
(declare-fun inv_main58 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main66 (Heap Addr Addr) Bool)
(declare-fun inv_main71 (Heap Addr Addr Int) Bool)
(declare-fun inv_main72 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main78 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main8 (Heap Addr) Bool)
(declare-fun inv_main80 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main83 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main85 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main88 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main90 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main94 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main96 (Heap Addr Addr Int Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Heap)) (or (not (and (inv_main4 var3 var1) (and (= var0 nullAddr) (and (= var2 (write var3 var1 (O_TSLL (TSLL (next (getTSLL (read var3 var1))) nullAddr (inner (getTSLL (read var3 var1))))))) (= var0 var1))))) (inv_main8 var2 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main112 var1 var0 var2) (= nullAddr (next (getTSLL (read var1 var2)))))) (inv_main122 (write var1 var2 defObj) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main51 var1 var0 var2)) (inv_main53 (write var1 (inner (getTSLL (read var1 var2))) (O_TSLL (TSLL nullAddr (prev (getTSLL (read var1 (inner (getTSLL (read var1 var2)))))) (inner (getTSLL (read var1 (inner (getTSLL (read var1 var2))))))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main12 var1 var0)) (inv_main11 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) (prev (getTSLL (read var1 var0))) nullAddr))) var0))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main17 var1 var0)) (inv_main11 (write var1 (inner (getTSLL (read var1 var0))) (O_TSLL (TSLL (next (getTSLL (read var1 (inner (getTSLL (read var1 var0)))))) (prev (getTSLL (read var1 (inner (getTSLL (read var1 var0)))))) nullAddr))) var0))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr)) (or (not (and (inv_main94 var7 var3 var8 var6 var9) (and (not (= nullAddr var4)) (and (and (and (and (and (= var1 var7) (= var5 var3)) (= var2 var8)) (= var0 var6)) (= var10 var9)) (= var4 (next (getTSLL (read var7 var8)))))))) (inv_main71 var1 var5 var4 0))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main27 var3 var2 var4) (and (not (= nullAddr var6)) (and (not (= nullAddr var6)) (and (= var1 0) (and (and (= var0 var3) (= var6 var2)) (= var5 nullAddr))))))) (inv_main71 var0 var6 var6 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main101 var5 var3 var6) (and (not (= nullAddr var1)) (and (not (= nullAddr var1)) (and (and (and (= var0 var5) (= var2 var3)) (= var4 var6)) (= var1 (inner (getTSLL (read var5 var3))))))))) (inv_main107 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 TSLL)) (or (not (and (inv_main27 var2 var1 var3) (not (= var0 0)))) (inv_main32 (newHeap (alloc var2 (O_TSLL var4))) var1 var3 (newAddr (alloc var2 (O_TSLL var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main104 var3 var1 var4) (and (not (= nullAddr var0)) (and (and (and (and (= var9 var3) (= var7 var1)) (= var8 var4)) (= var6 (next (getTSLL (read var3 var1))))) (and (and (= var2 (write var9 var7 defObj)) (= var5 var7)) (= var0 var6)))))) (inv_main101 var2 var0 var0))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr)) (or (not (and (inv_main94 var7 var3 var8 var6 var9) (and (not (= nullAddr var5)) (and (= nullAddr var4) (and (and (and (and (and (= var1 var7) (= var5 var3)) (= var2 var8)) (= var0 var6)) (= var10 var9)) (= var4 (next (getTSLL (read var7 var8))))))))) (inv_main101 var1 var5 var4))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main27 var3 var2 var4) (and (not (= nullAddr var6)) (and (= nullAddr var6) (and (not (= nullAddr var6)) (and (= var1 0) (and (and (= var0 var3) (= var6 var2)) (= var5 nullAddr)))))))) (inv_main101 var0 var6 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main33 var5 var3 var6) (and (and (and (= var2 var5) (= var1 var3)) (= var4 var6)) (= var0 (next (getTSLL (read var5 var6))))))) (inv_main34 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main78 var2 var0 var3 var1 var4) (not (= nullAddr (inner (getTSLL (read var2 var4))))))) (inv_main85 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main47 var1 var0 var2)) (inv_main58 var1 var0 var2 (inner (getTSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 TSLL) (var4 Heap) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main34 var4 var2 var5) (and (= var6 0) (and (not (= var0 nullAddr)) (and (not (= nullAddr var0)) (and (and (= var7 (write var4 var5 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var4 var5))) (inner (getTSLL (read var4 var5))))))) (= var1 var2)) (= var0 var5))))))) (inv_main52 (newHeap (alloc var7 (O_TSLL var3))) var1 var0 (newAddr (alloc var7 (O_TSLL var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main72 var2 var0 var3 var1 var4) (and (not (= nullAddr var4)) (and (= var1 0) (not (= nullAddr var4)))))) (inv_main78 var2 var0 var3 1 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main72 var2 var0 var3 var1 var4) (and (not (= nullAddr var4)) (and (not (= var1 0)) (not (= nullAddr var4)))))) (inv_main78 var2 var0 var3 2 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main78 var2 var0 var3 var1 var4) (= nullAddr (inner (getTSLL (read var2 var4)))))) (inv_main83 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main15 var1 var0)) (inv_main17 (write var1 (inner (getTSLL (read var1 var0))) (O_TSLL (TSLL nullAddr (prev (getTSLL (read var1 (inner (getTSLL (read var1 var0)))))) (inner (getTSLL (read var1 (inner (getTSLL (read var1 var0))))))))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main16 var2 var1 var0)) (inv_main15 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) (prev (getTSLL (read var2 var1))) var0))) var1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main27 var3 var2 var4) (and (= nullAddr var6) (and (= var1 0) (and (and (= var0 var3) (= var6 var2)) (= var5 nullAddr)))))) (inv_main66 var0 var6 var6))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main107 var1 var0 var2) (not (= nullAddr (inner (getTSLL (read var1 var2))))))) (inv_main114 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main31 var1 var0 var2)) (inv_main33 (write var1 (next (getTSLL (read var1 var2))) (O_TSLL (TSLL (next (getTSLL (read var1 (next (getTSLL (read var1 var2)))))) var2 (inner (getTSLL (read var1 (next (getTSLL (read var1 var2))))))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main72 var2 var0 var3 var1 var4) (and (not (<= 0 (+ 1 (* (- 1) var1)))) (= nullAddr var4)))) (inv_main96 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main101 var5 var3 var6) (and (= nullAddr var1) (and (not (= nullAddr var1)) (and (and (and (= var0 var5) (= var2 var3)) (= var4 var6)) (= var1 (inner (getTSLL (read var5 var3))))))))) (inv_main109 var0 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap)) (or (not (and (inv_main34 var3 var2 var4) (and (= var0 nullAddr) (and (not (= nullAddr var0)) (and (and (= var5 (write var3 var4 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var3 var4))) (inner (getTSLL (read var3 var4))))))) (= var1 var2)) (= var0 var4)))))) (inv_main44 var5 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main52 var2 var1 var3 var0)) (inv_main51 (write var2 var3 (O_TSLL (TSLL (next (getTSLL (read var2 var3))) (prev (getTSLL (read var2 var3))) var0))) var1 var3))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr)) (or (not (inv_main71 var2 var0 var3 var1)) (inv_main72 var2 var0 var3 var1 (inner (getTSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr)) (or (not (and (inv_main88 var8 var5 var9 var7 var10) (and (and (and (and (and (= var6 var8) (= var0 var5)) (= var2 var9)) (= var3 var7)) (= var1 var10)) (= var4 (inner (getTSLL (read var8 var10))))))) (inv_main72 var6 var0 var2 var3 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main48 var1 var0 var2)) (inv_main47 (write var1 var2 (O_TSLL (TSLL (next (getTSLL (read var1 var2))) (prev (getTSLL (read var1 var2))) nullAddr))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main53 var1 var0 var2)) (inv_main47 (write var1 (inner (getTSLL (read var1 var2))) (O_TSLL (TSLL (next (getTSLL (read var1 (inner (getTSLL (read var1 var2)))))) (prev (getTSLL (read var1 (inner (getTSLL (read var1 var2)))))) nullAddr))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main72 var2 var0 var3 var1 var4) (and (= nullAddr var4) (and (= var1 0) (not (= nullAddr var4)))))) (inv_main80 var2 var0 var3 1 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main72 var2 var0 var3 var1 var4) (and (= nullAddr var4) (and (not (= var1 0)) (not (= nullAddr var4)))))) (inv_main80 var2 var0 var3 2 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main83 var2 var0 var3 var1 var4) (= nullAddr (next (getTSLL (read var2 var4)))))) (inv_main88 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main11 var1 var0)) (inv_main22 var1 var0 (inner (getTSLL (read var1 var0)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int)) (or (not (and (inv_main4 var3 var2) (and (not (= var4 0)) (and (not (= var1 nullAddr)) (and (= var0 (write var3 var2 (O_TSLL (TSLL (next (getTSLL (read var3 var2))) nullAddr (inner (getTSLL (read var3 var2))))))) (= var1 var2)))))) (inv_main12 var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main112 var1 var0 var2) (not (= nullAddr (next (getTSLL (read var1 var2))))))) (inv_main119 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main58 var2 var1 var3 var0) (not (= var0 nullAddr)))) (inv_main27 var2 var1 var3))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Int) (var11 Heap)) (or (not (and (inv_main58 var7 var5 var8 var1) (and (and (not (= var10 0)) (and (= var1 nullAddr) (and (and (and (= var11 var7) (= var6 var5)) (= var9 var8)) (= var4 (inner (getTSLL (read var7 var8))))))) (and (and (and (= var0 var11) (= var2 var6)) (= var3 var9)) (or (and (= var4 nullAddr) (= var10 1)) (and (not (= var4 nullAddr)) (= var10 0))))))) (inv_main27 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main22 var2 var0 var1) (not (= var1 nullAddr)))) (inv_main27 var2 var0 var0))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr)) (or (not (and (inv_main22 var6 var3 var5) (and (and (not (= var0 0)) (and (= var5 nullAddr) (and (and (= var2 var6) (= var7 var3)) (= var8 (inner (getTSLL (read var6 var3))))))) (and (and (= var1 var2) (= var4 var7)) (or (and (= var8 nullAddr) (= var0 1)) (and (not (= var8 nullAddr)) (= var0 0))))))) (inv_main27 var1 var4 var4))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main22 var5 var3 var4) (and (and (= var0 0) (and (= var4 nullAddr) (and (and (= var2 var5) (= var6 var3)) (= var8 (inner (getTSLL (read var5 var3))))))) (and (and (= var1 var2) (= var7 var6)) (or (and (= var8 nullAddr) (= var0 1)) (and (not (= var8 nullAddr)) (= var0 0))))))) (inv_main20 var1 var7))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main72 var2 var0 var3 var1 var4) (and (<= 0 (+ 1 (* (- 1) var1))) (= nullAddr var4)))) (inv_main94 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap)) (or (not (and (inv_main34 var4 var3 var5) (and (not (= var2 0)) (and (not (= var0 nullAddr)) (and (not (= nullAddr var0)) (and (and (= var6 (write var4 var5 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var4 var5))) (inner (getTSLL (read var4 var5))))))) (= var1 var3)) (= var0 var5))))))) (inv_main48 var6 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main32 var2 var1 var3 var0)) (inv_main31 (write var2 var3 (O_TSLL (TSLL var0 (prev (getTSLL (read var2 var3))) (inner (getTSLL (read var2 var3)))))) var1 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main107 var1 var0 var2) (= nullAddr (inner (getTSLL (read var1 var2)))))) (inv_main112 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap)) (or (not (and (inv_main58 var7 var5 var8 var0) (and (and (= var4 0) (and (= var0 nullAddr) (and (and (and (= var11 var7) (= var6 var5)) (= var10 var8)) (= var3 (inner (getTSLL (read var7 var8))))))) (and (and (and (= var2 var11) (= var9 var6)) (= var1 var10)) (or (and (= var3 nullAddr) (= var4 1)) (and (not (= var3 nullAddr)) (= var4 0))))))) (inv_main56 var2 var9 var1))))
(assert (forall ((var0 Heap) (var1 TSLL) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (inv_main4 var5 var4) (and (= var2 0) (and (not (= var3 nullAddr)) (and (= var0 (write var5 var4 (O_TSLL (TSLL (next (getTSLL (read var5 var4))) nullAddr (inner (getTSLL (read var5 var4))))))) (= var3 var4)))))) (inv_main16 (newHeap (alloc var0 (O_TSLL var1))) var3 (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 TSLL) (var1 Heap)) (or (not (inv_main2 var1)) (inv_main3 (newHeap (alloc var1 (O_TSLL var0))) (newAddr (alloc var1 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (and (inv_main83 var2 var0 var3 var1 var4) (not (= nullAddr (next (getTSLL (read var2 var4))))))) (inv_main90 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr)) (or (not (and (inv_main34 var4 var1 var5) (and (= nullAddr var0) (and (and (= var3 (write var4 var5 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var4 var5))) (inner (getTSLL (read var4 var5))))))) (= var2 var1)) (= var0 var5))))) (inv_main39 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var1 var0))) (inner (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main122 var1 var0 var2)) (inv_main104 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) (prev (getTSLL (read var1 var0))) nullAddr))) var0 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main101 var5 var3 var6) (and (= nullAddr var1) (and (and (and (= var0 var5) (= var2 var3)) (= var4 var6)) (= var1 (inner (getTSLL (read var5 var3)))))))) (inv_main104 var0 var2 var1))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (inv_main8 var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main12 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main16 var2 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main15 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main15 var1 var0) (not (is-O_TSLL (read var1 (inner (getTSLL (read var1 var0))))))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main17 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main17 var1 var0) (not (is-O_TSLL (read var1 (inner (getTSLL (read var1 var0))))))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main11 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main22 var2 var0 var1) (and (= var1 nullAddr) (not (is-O_TSLL (read var2 var0))))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (inv_main20 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main32 var2 var1 var3 var0) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main31 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main31 var1 var0 var2) (not (is-O_TSLL (read var1 (next (getTSLL (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main33 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main34 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main39 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main44 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main48 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main52 var2 var1 var3 var0) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main51 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main51 var1 var0 var2) (not (is-O_TSLL (read var1 (inner (getTSLL (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main53 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main53 var1 var0 var2) (not (is-O_TSLL (read var1 (inner (getTSLL (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main47 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main58 var2 var1 var3 var0) (and (= var0 nullAddr) (not (is-O_TSLL (read var2 var3))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main56 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main66 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr)) (not (and (inv_main71 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (inv_main80 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main78 var2 var0 var3 var1 var4) (not (is-O_TSLL (read var2 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (inv_main85 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main83 var2 var0 var3 var1 var4) (not (is-O_TSLL (read var2 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (inv_main90 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main88 var2 var0 var3 var1 var4) (not (is-O_TSLL (read var2 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (inv_main96 var2 var0 var3 var1 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main94 var2 var0 var3 var1 var4) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main101 var1 var0 var2) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main109 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main107 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main114 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main112 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main119 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main122 var1 var0 var2) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main104 var1 var0 var2) (not (is-O_TSLL (read var1 var0)))))))
(check-sat)
