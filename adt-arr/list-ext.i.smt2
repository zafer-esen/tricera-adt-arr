(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (h Int) (n Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defHeapObject)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main13 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main14 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main18 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main25 (Heap Int Int Addr Addr Addr Int) Bool)
(declare-fun inv_main28 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main30 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main38 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Addr Addr Addr Int) Bool)
(declare-fun inv_main44 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main46 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main50 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main51 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main54 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main56 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main59 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main66 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main68 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main9 (Heap Int Int Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 0 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap) (var12 Addr)) (or (not (and (inv_main50 var7 var9 var1 var3 var12 var8) (and (= var10 1) (and (and (and (and (and (and (= var11 var7) (= var6 var9)) (= var2 var1)) (= var5 var3)) (= var0 var12)) (= var4 var8)) (= var10 (h (getnode (read var7 var8)))))))) (inv_main54 var11 (+ var6 1) var2 var5 var0 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Addr) (var10 Int) (var11 Heap) (var12 Addr)) (or (not (and (inv_main50 var8 var10 var0 var2 var12 var9) (and (not (= var7 1)) (and (and (and (and (and (and (= var11 var8) (= var6 var10)) (= var5 var0)) (= var4 var2)) (= var3 var12)) (= var1 var9)) (= var7 (h (getnode (read var8 var9)))))))) (inv_main51 var11 var6 var5 var4 var3 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Int)) (or (not (and (inv_main59 var6 var8 var0 var3 var11 var7) (and (and (and (and (and (and (= var9 var6) (= var12 var8)) (= var4 var0)) (= var2 var3)) (= var10 var11)) (= var5 var7)) (= var1 (n (getnode (read var6 var7))))))) (inv_main51 var9 var12 var4 var2 var10 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Heap) (var15 node) (var16 Heap) (var17 Addr) (var18 Int) (var19 Addr)) (or (not (and (inv_main34 var8 var10 var11 var6 var19 var9) (and (not (= var5 nullAddr)) (and (and (and (and (and (and (and (= var16 (newHeap (alloc var14 (O_node var15)))) (= var0 var12)) (= var2 var18)) (= var13 var17)) (= var3 var7)) (= var4 var1)) (= var5 (newAddr (alloc var14 (O_node var15))))) (and (and (and (and (and (= var14 (write var8 var9 (O_node (node 2 (n (getnode (read var8 var9))))))) (= var12 var10)) (= var18 var11)) (= var17 var6)) (= var7 var19)) (= var1 var9)))))) (inv_main38 var16 var0 var2 var13 var5 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (inv_main25 var3 var5 var0 var1 var6 var4 var2)) (inv_main25 var3 var5 var0 var1 var6 var4 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 node) (var10 Int) (var11 Heap) (var12 Int) (var13 Heap) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Addr) (var19 Addr)) (or (not (and (inv_main18 var4 var6 var12 var2 var19 var5) (and (= var3 nullAddr) (and (and (and (and (and (and (and (= var11 (newHeap (alloc var13 (O_node var9)))) (= var10 var17)) (= var0 var16)) (= var1 var14)) (= var18 var8)) (= var15 var7)) (= var3 (newAddr (alloc var13 (O_node var9))))) (and (and (and (and (and (= var13 (write var4 var5 (O_node (node 1 (n (getnode (read var4 var5))))))) (= var17 var6)) (= var16 var12)) (= var14 var2)) (= var8 var19)) (= var7 var5)))))) (inv_main25 var11 var10 var0 var1 var3 var15 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Addr) (var12 Int)) (or (not (and (inv_main51 var4 var6 var0 var2 var10 var5) (and (= var9 2) (and (and (and (and (and (and (= var3 var4) (= var12 var6)) (= var8 var0)) (= var7 var2)) (= var11 var10)) (= var1 var5)) (= var9 (h (getnode (read var4 var5)))))))) (inv_main59 var3 var12 (+ var8 1) var7 var11 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Int) (var9 Heap) (var10 Int) (var11 Addr) (var12 Addr)) (or (not (and (inv_main28 var6 var8 var1 var5 var11 var7) (and (and (and (and (and (and (= var9 var6) (= var0 var8)) (= var10 var1)) (= var12 var5)) (= var2 var11)) (= var4 var7)) (= var3 (n (getnode (read var6 var7))))))) (inv_main13 var9 var0 var10 var12 var2 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 node) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr)) (or (not (and (inv_main4 var6 var7 var2) (and (not (= var8 nullAddr)) (and (and (and (= var3 (newHeap (alloc var6 (O_node var4)))) (= var0 var7)) (= var5 var2)) (= var8 (newAddr (alloc var6 (O_node var4)))))))) (inv_main13 var3 var0 var5 var8 var1 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Heap) (var12 Int)) (or (not (and (inv_main56 var5 var7 var2 var3 var10 var6) (and (or (not (= var0 3)) (<= 0 (+ (+ 20 (* (- 1) (+ var9 var12))) (- 1)))) (and (and (and (and (and (and (= var11 var5) (= var9 var7)) (= var12 var2)) (= var1 var3)) (= var4 var10)) (= var8 var6)) (= var0 (h (getnode (read var5 var6)))))))) (inv_main62 var11 var9 var12 var1 var4 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (or (not (inv_main38 var2 var4 var0 var1 var5 var3)) (inv_main44 (write var2 var3 (O_node (node (h (getnode (read var2 var3))) var5))) var4 var0 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (or (not (inv_main22 var2 var4 var0 var1 var5 var3)) (inv_main28 (write var2 var3 (O_node (node (h (getnode (read var2 var3))) var5))) var4 var0 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr)) (or (not (and (inv_main51 var8 var10 var1 var5 var11 var9) (and (not (= var7 2)) (and (and (and (and (and (and (= var4 var8) (= var6 var10)) (= var0 var1)) (= var2 var5)) (= var3 var11)) (= var12 var9)) (= var7 (h (getnode (read var8 var9)))))))) (inv_main56 var4 var6 var0 var2 var3 var12))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (inv_main41 var3 var5 var0 var1 var6 var4 var2)) (inv_main41 var3 var5 var0 var1 var6 var4 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Heap) (var15 node) (var16 Heap) (var17 Addr) (var18 Int) (var19 Addr)) (or (not (and (inv_main34 var8 var10 var11 var6 var19 var9) (and (= var5 nullAddr) (and (and (and (and (and (and (and (= var16 (newHeap (alloc var14 (O_node var15)))) (= var0 var12)) (= var2 var18)) (= var13 var17)) (= var3 var7)) (= var4 var1)) (= var5 (newAddr (alloc var14 (O_node var15))))) (and (and (and (and (and (= var14 (write var8 var9 (O_node (node 2 (n (getnode (read var8 var9))))))) (= var12 var10)) (= var18 var11)) (= var17 var6)) (= var7 var19)) (= var1 var9)))))) (inv_main41 var16 var0 var2 var13 var5 var4 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (or (not (inv_main30 var2 var4 var0 var1 var5 var3)) (inv_main46 (write var2 var3 (O_node (node 3 (n (getnode (read var2 var3)))))) var4 var0 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int)) (or (not (inv_main9 var2 var3 var0 var1 var4)) (inv_main9 var2 var3 var0 var1 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 node) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr)) (or (not (and (inv_main4 var4 var5 var1) (and (= var7 nullAddr) (and (and (and (= var3 (newHeap (alloc var4 (O_node var2)))) (= var0 var5)) (= var6 var1)) (= var7 (newAddr (alloc var4 (O_node var2)))))))) (inv_main9 var3 var0 var6 var7 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 node) (var10 Int) (var11 Heap) (var12 Int) (var13 Heap) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Addr) (var19 Addr)) (or (not (and (inv_main18 var4 var6 var12 var2 var19 var5) (and (not (= var3 nullAddr)) (and (and (and (and (and (and (and (= var11 (newHeap (alloc var13 (O_node var9)))) (= var10 var17)) (= var0 var16)) (= var1 var14)) (= var18 var8)) (= var15 var7)) (= var3 (newAddr (alloc var13 (O_node var9))))) (and (and (and (and (and (= var13 (write var4 var5 (O_node (node 1 (n (getnode (read var4 var5))))))) (= var17 var6)) (= var16 var12)) (= var14 var2)) (= var8 var19)) (= var7 var5)))))) (inv_main22 var11 var10 var0 var1 var3 var15))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (and (inv_main14 var3 var5 var0 var2 var6 var4) (and (not (= var1 0)) (<= 0 (+ (+ 10 (* (- 1) var0)) (- 1)))))) (inv_main34 var3 var5 (+ var0 1) var2 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (and (inv_main13 var3 var5 var1 var2 var6 var4) (and (not (= var0 0)) (<= 0 (+ (+ 10 (* (- 1) var5)) (- 1)))))) (inv_main18 var3 (+ var5 1) var1 var2 var6 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Heap)) (or (not (and (inv_main54 var6 var8 var1 var4 var10 var7) (and (and (and (and (and (and (= var12 var6) (= var9 var8)) (= var11 var1)) (= var5 var4)) (= var0 var10)) (= var2 var7)) (= var3 (n (getnode (read var6 var7))))))) (inv_main50 var12 var9 var11 var5 var0 var3))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Heap)) (or (not (and (inv_main46 var5 var7 var2 var3 var10 var6) (and (and (and (and (and (= var11 (write var5 var6 (O_node (node (h (getnode (read var5 var6))) 0)))) (= var9 var7)) (= var1 var2)) (= var4 var3)) (= var8 var10)) (= var0 var6)))) (inv_main50 var11 0 0 var4 var8 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr)) (or (not (and (inv_main66 var5 var7 var2 var3 var12 var6) (and (not (= var8 nullAddr)) (and (and (and (and (and (and (= var1 var5) (= var9 var7)) (= var4 var2)) (= var0 var3)) (= var11 var12)) (= var10 var6)) (= var8 (n (getnode (read var5 var6)))))))) (inv_main68 var1 var9 var4 var0 var11 var10))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (or (not (and (inv_main14 var2 var4 var0 var1 var5 var3) (not (<= 0 (+ (+ 10 (* (- 1) var0)) (- 1)))))) (inv_main30 var2 var4 var0 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (and (inv_main14 var3 var5 var1 var2 var6 var4) (and (= var0 0) (<= 0 (+ (+ 10 (* (- 1) var1)) (- 1)))))) (inv_main30 var3 var5 var1 var2 var6 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int) (var8 Heap) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr)) (or (not (and (inv_main56 var8 var10 var2 var4 var12 var9) (and (and (= var0 3) (not (<= 0 (+ (+ 20 (* (- 1) (+ var7 var6))) (- 1))))) (and (and (and (and (and (and (= var5 var8) (= var7 var10)) (= var6 var2)) (= var3 var4)) (= var11 var12)) (= var1 var9)) (= var0 (h (getnode (read var8 var9)))))))) (inv_main66 var5 var7 var6 var3 var11 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Addr) (var14 Heap) (var15 Addr) (var16 Int) (var17 Addr) (var18 Addr)) (or (not (and (inv_main68 var5 var7 var12 var3 var18 var6) (and (and (and (and (and (and (and (= var14 var5) (= var16 var7)) (= var11 var12)) (= var0 var3)) (= var1 var18)) (= var9 var6)) (= var15 (n (getnode (read var5 var6))))) (and (and (and (and (and (= var2 (write var14 var9 defObj)) (= var4 var16)) (= var8 var11)) (= var13 var0)) (= var17 var15)) (= var10 var9))))) (inv_main66 var2 var4 var8 var13 var17 var17))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr)) (or (not (and (inv_main44 var6 var8 var1 var2 var11 var7) (and (and (and (and (and (and (= var9 var6) (= var5 var8)) (= var3 var1)) (= var0 var2)) (= var10 var11)) (= var12 var7)) (= var4 (n (getnode (read var6 var7))))))) (inv_main14 var9 var5 var3 var0 var10 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (or (not (and (inv_main13 var2 var4 var0 var1 var5 var3) (not (<= 0 (+ (+ 10 (* (- 1) var4)) (- 1)))))) (inv_main14 var2 var4 var0 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (and (inv_main13 var3 var5 var0 var2 var6 var4) (and (= var1 0) (<= 0 (+ (+ 10 (* (- 1) var5)) (- 1)))))) (inv_main14 var3 var5 var0 var2 var6 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main18 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main22 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main28 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main34 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main38 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main44 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main30 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main46 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main50 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main54 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main51 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main59 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main56 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (inv_main62 var2 var4 var0 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main66 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr)) (not (and (inv_main68 var2 var4 var0 var1 var5 var3) (not (is-O_node (read var2 var3)))))))
(check-sat)
