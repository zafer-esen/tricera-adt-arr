(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main10 (Heap Addr Addr) Bool)
(declare-fun inv_main11 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr) Bool)
(declare-fun inv_main14 (Heap Addr Addr) Bool)
(declare-fun inv_main19 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main21 (Heap Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr) Bool)
(declare-fun inv_main24 (Heap Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main35 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main43 (Heap Addr Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr) Bool)
(declare-fun inv_main56 (Heap Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main26 var4 var1 var3) (and (and (and (= var2 var4) (= var5 var1)) (= var0 var3)) (= var6 (next (getTSLL (read var4 var3))))))) (inv_main23 var2 var5 var6))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int)) (or (not (and (inv_main6 var3 var1 var2) (and (= var0 0) (= var4 0)))) (inv_main23 var3 var1 var1))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL nullAddr (data (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main12 var2 var0 var1)) (inv_main14 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) 0))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main23 var2 var0 var1) (= (next (getTSLL (read var2 var1))) nullAddr))) (inv_main24 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int)) (or (not (and (inv_main23 var2 var0 var1) (and (not (= var3 0)) (not (= (next (getTSLL (read var2 var1))) nullAddr))))) (inv_main24 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main35 var4 var0 var3) (and (= var2 1) (and (and (and (= var5 var4) (= var1 var0)) (= var6 var3)) (= var2 (data (getTSLL (read var4 var3)))))))) (inv_main36 var5 var1 var6))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main14 var2 var0 var1)) (inv_main6 (write var2 var1 (O_TSLL (TSLL nullAddr (data (getTSLL (read var2 var1)))))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr)) (or (not (and (inv_main4 var2 var0) (and (= var1 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) 0)))) (= var3 var0)))) (inv_main6 var1 var3 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main11 var3 var0 var2 var1)) (inv_main10 (write var3 var2 (O_TSLL (TSLL var1 (data (getTSLL (read var3 var2)))))) var0 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 TSLL) (var7 Addr) (var8 Int) (var9 Int)) (or (not (and (inv_main6 var5 var1 var3) (and (and (and (and (= var0 (newHeap (alloc var5 (O_TSLL var6)))) (= var7 var1)) (= var4 var3)) (= var2 (newAddr (alloc var5 (O_TSLL var6))))) (and (not (= var8 0)) (= var9 0))))) (inv_main19 var0 var7 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main32 var3 var1 var2 var0)) (inv_main34 (write var3 (next (getTSLL (read var3 var2))) (O_TSLL (TSLL (next (getTSLL (read var3 (next (getTSLL (read var3 var2)))))) 1))) var1 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main37 var3 var1 var2) (and (and (and (= var6 var3) (= var5 var1)) (= var0 var2)) (= var4 (next (getTSLL (read var3 var2))))))) (inv_main35 var6 var5 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main34 var5 var2 var4 var1) (and (and (= var3 (write var5 (next (getTSLL (read var5 var4))) (O_TSLL (TSLL var1 (data (getTSLL (read var5 (next (getTSLL (read var5 var4)))))))))) (= var6 var2)) (= var0 var4)))) (inv_main35 var3 var6 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 Addr)) (or (not (and (inv_main21 var2 var0 var1) (and (and (= var4 (write var2 var1 (O_TSLL (TSLL var0 (data (getTSLL (read var2 var1))))))) (= var5 var0)) (= var3 var1)))) (inv_main35 var4 var3 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap) (var6 TSLL) (var7 Addr)) (or (not (and (inv_main24 var5 var1 var4) (and (and (and (= var2 var5) (= var7 var1)) (= var3 var4)) (= var0 (next (getTSLL (read var5 var4))))))) (inv_main33 (newHeap (alloc var2 (O_TSLL var6))) var7 var3 var0 (newAddr (alloc var2 (O_TSLL var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Heap)) (or (not (and (inv_main56 var4 var1 var2) (and (and (not (= var7 nullAddr)) (and (and (and (= var9 var4) (= var5 var1)) (= var0 var2)) (= var3 (next (getTSLL (read var4 var2)))))) (and (and (= var8 (write var9 var5 defObj)) (= var6 var5)) (= var7 var3))))) (inv_main56 var8 var7 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main36 var4 var0 var2) (and (not (= var3 nullAddr)) (and (= var5 nullAddr) (and (and (and (= var1 var4) (= var3 var0)) (= var6 var2)) (= var5 (next (getTSLL (read var4 var2))))))))) (inv_main56 var1 var3 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main44 var4 var0 var3) (and (not (= var2 nullAddr)) (and (= var6 nullAddr) (and (and (and (= var1 var4) (= var2 var0)) (= var5 var3)) (= var6 (next (getTSLL (read var4 var3))))))))) (inv_main56 var1 var2 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int)) (or (not (and (inv_main23 var2 var0 var1) (and (= var3 0) (not (= (next (getTSLL (read var2 var1))) nullAddr))))) (inv_main26 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main43 var4 var1 var3) (and (not (= var0 1)) (and (and (and (= var2 var4) (= var5 var1)) (= var6 var3)) (= var0 (data (getTSLL (read var4 var3)))))))) (inv_main49 var2 var5 var6))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main36 var4 var0 var2) (and (not (= var5 nullAddr)) (and (and (and (= var1 var4) (= var3 var0)) (= var6 var2)) (= var5 (next (getTSLL (read var4 var2)))))))) (inv_main43 var1 var3 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main44 var4 var0 var3) (and (not (= var6 nullAddr)) (and (and (and (= var2 var4) (= var1 var0)) (= var5 var3)) (= var6 (next (getTSLL (read var4 var3)))))))) (inv_main43 var2 var1 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 TSLL) (var4 Int)) (or (not (and (inv_main6 var2 var0 var1) (not (= var4 0)))) (inv_main11 (newHeap (alloc var2 (O_TSLL var3))) var0 var1 (newAddr (alloc var2 (O_TSLL var3)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (inv_main33 var4 var1 var2 var0 var3)) (inv_main32 (write var4 var2 (O_TSLL (TSLL var3 (data (getTSLL (read var4 var2)))))) var1 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Heap)) (or (not (and (inv_main35 var6 var1 var4) (and (not (= var3 1)) (and (and (and (= var5 var6) (= var2 var1)) (= var0 var4)) (= var3 (data (getTSLL (read var6 var4)))))))) (inv_main37 var5 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main43 var3 var1 var2) (and (= var0 1) (and (and (and (= var6 var3) (= var4 var1)) (= var5 var2)) (= var0 (data (getTSLL (read var3 var2)))))))) (inv_main44 var6 var4 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap)) (or (not (and (inv_main10 var4 var1 var3) (and (and (and (= var6 var4) (= var0 var1)) (= var2 var3)) (= var5 (next (getTSLL (read var4 var3))))))) (inv_main12 var6 var0 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main19 var2 var0 var1)) (inv_main21 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) 1))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main11 var3 var0 var2 var1) (not (is-O_TSLL (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main10 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main12 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main14 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main19 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main21 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main23 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main26 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main24 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main33 var4 var1 var2 var0 var3) (not (is-O_TSLL (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main32 var3 var1 var2 var0) (not (is-O_TSLL (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main32 var3 var1 var2 var0) (not (is-O_TSLL (read var3 (next (getTSLL (read var3 var2))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main34 var3 var1 var2 var0) (not (is-O_TSLL (read var3 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main34 var3 var1 var2 var0) (not (is-O_TSLL (read var3 (next (getTSLL (read var3 var2))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main35 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main37 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main36 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main43 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main49 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main44 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main56 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(check-sat)
