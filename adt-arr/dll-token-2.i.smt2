(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defHeapObject)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main11 (Heap Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main13 (Heap Addr Addr) Bool)
(declare-fun inv_main14 (Heap Addr Addr) Bool)
(declare-fun inv_main18 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main24 (Heap Addr Addr) Bool)
(declare-fun inv_main27 (Heap Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main40 (Heap Addr Addr) Bool)
(declare-fun inv_main42 (Heap Addr Addr) Bool)
(declare-fun inv_main45 (Heap Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr) Bool)
(declare-fun inv_main53 (Heap Addr Addr) Bool)
(declare-fun inv_main55 (Heap Addr Addr) Bool)
(declare-fun inv_main58 (Heap Addr Addr) Bool)
(declare-fun inv_main60 (Heap Addr Addr) Bool)
(declare-fun inv_main8 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main45 var1 var0 var2) (= 2 (data (getTSLL (read var1 var2)))))) (inv_main49 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap)) (or (not (and (inv_main24 var3 var2 var4) (and (= nullAddr var0) (and (and (= var5 (write var3 (next (getTSLL (read var3 var4))) (O_TSLL (TSLL (next (getTSLL (read var3 (next (getTSLL (read var3 var4)))))) (prev (getTSLL (read var3 (next (getTSLL (read var3 var4)))))) 2)))) (= var0 var2)) (= var1 var4))))) (inv_main29 var5 var0 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main32 var1 var0 var2) (= 1 (data (getTSLL (read var1 var2)))))) (inv_main40 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main11 var1 var0 var2)) (inv_main13 (write var1 (next (getTSLL (read var1 var2))) (O_TSLL (TSLL (next (getTSLL (read var1 (next (getTSLL (read var1 var2)))))) var2 (data (getTSLL (read var1 (next (getTSLL (read var1 var2))))))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main45 var1 var0 var2) (not (= 2 (data (getTSLL (read var1 var2))))))) (inv_main52 var1 var0 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main55 var3 var1 var4) (and (and (and (= var0 var3) (= var2 var1)) (= var6 var4)) (= var5 (next (getTSLL (read var3 var4))))))) (inv_main52 (write var0 var2 defObj) var2 var5))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main33 var1 var0 var2) (= 0 (data (getTSLL (read var1 var2)))))) (inv_main34 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var1 var0))) (data (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main52 var1 var0 var2) (not (= 1 (data (getTSLL (read var1 var2))))))) (inv_main55 var1 var2 var2))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main33 var1 var0 var2) (not (= 0 (data (getTSLL (read var1 var2))))))) (inv_main36 var1 var0 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr)) (or (not (and (inv_main14 var4 var1 var5) (and (= nullAddr var3) (and (and (= var0 (write var4 var5 (O_TSLL (TSLL (next (getTSLL (read var4 var5))) (prev (getTSLL (read var4 var5))) 0)))) (= var2 var1)) (= var3 var5))))) (inv_main18 var0 var2 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main34 var3 var2 var5) (and (and (and (= var1 var3) (= var0 var2)) (= var6 var5)) (= var4 (next (getTSLL (read var3 var5))))))) (inv_main27 var1 var0 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap)) (or (not (and (inv_main24 var3 var2 var4) (and (not (= nullAddr var0)) (and (and (= var5 (write var3 (next (getTSLL (read var3 var4))) (O_TSLL (TSLL (next (getTSLL (read var3 (next (getTSLL (read var3 var4)))))) (prev (getTSLL (read var3 (next (getTSLL (read var3 var4)))))) 2)))) (= var0 var2)) (= var1 var4))))) (inv_main27 var5 var0 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main22 var1 var0 var2)) (inv_main24 (write var1 (next (getTSLL (read var1 var2))) (O_TSLL (TSLL (next (getTSLL (read var1 (next (getTSLL (read var1 var2)))))) var2 (data (getTSLL (read var1 (next (getTSLL (read var1 var2))))))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main13 var3 var1 var5) (and (and (and (= var4 var3) (= var6 var1)) (= var2 var5)) (= var0 (next (getTSLL (read var3 var5))))))) (inv_main14 var4 var6 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main53 var1 var0 var2) (= 1 (data (getTSLL (read var1 var2)))))) (inv_main58 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main23 var2 var1 var3 var0)) (inv_main22 (write var2 var3 (O_TSLL (TSLL var0 (prev (getTSLL (read var2 var3))) (data (getTSLL (read var2 var3)))))) var1 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main32 var1 var0 var2) (not (= 1 (data (getTSLL (read var1 var2))))))) (inv_main42 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr)) (or (not (and (inv_main40 var3 var0 var5) (and (and (and (= var1 var3) (= var2 var0)) (= var6 var5)) (= var4 (next (getTSLL (read var3 var5))))))) (inv_main45 var1 var2 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main12 var2 var0 var3 var1)) (inv_main11 (write var2 var3 (O_TSLL (TSLL var1 (prev (getTSLL (read var2 var3))) (data (getTSLL (read var2 var3)))))) var0 var3))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main4 var1 var0)) (inv_main5 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) nullAddr (data (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main53 var1 var0 var2) (not (= 1 (data (getTSLL (read var1 var2))))))) (inv_main60 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main27 var1 var0 var2) (= 1 (data (getTSLL (read var1 var2)))))) (inv_main32 var1 var0 var2))))
(assert (forall ((var0 TSLL) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr)) (or (not (and (inv_main14 var2 var1 var4) (and (not (= var3 0)) (and (not (= nullAddr var7)) (and (and (= var6 (write var2 var4 (O_TSLL (TSLL (next (getTSLL (read var2 var4))) (prev (getTSLL (read var2 var4))) 0)))) (= var5 var1)) (= var7 var4)))))) (inv_main12 (newHeap (alloc var6 (O_TSLL var0))) var5 var7 (newAddr (alloc var6 (O_TSLL var0)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 TSLL) (var3 Int) (var4 Heap) (var5 Addr)) (or (not (and (inv_main5 var4 var1) (and (not (= var3 0)) (and (= var0 (write var4 var1 (O_TSLL (TSLL (next (getTSLL (read var4 var1))) (prev (getTSLL (read var4 var1))) 0)))) (= var5 var1))))) (inv_main12 (newHeap (alloc var0 (O_TSLL var2))) var5 var5 (newAddr (alloc var0 (O_TSLL var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 TSLL) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main8 var4 var1 var6) (and (and (= var5 (write var4 var6 (O_TSLL (TSLL (next (getTSLL (read var4 var6))) (prev (getTSLL (read var4 var6))) 1)))) (= var0 var1)) (= var3 var6)))) (inv_main23 (newHeap (alloc var5 (O_TSLL var2))) var0 var3 (newAddr (alloc var5 (O_TSLL var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main52 var1 var0 var2) (= 1 (data (getTSLL (read var1 var2)))))) (inv_main53 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (and (inv_main27 var1 var0 var2) (not (= 1 (data (getTSLL (read var1 var2))))))) (inv_main33 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int)) (or (not (and (inv_main14 var1 var0 var2) (and (= var6 0) (and (not (= nullAddr var5)) (and (and (= var4 (write var1 var2 (O_TSLL (TSLL (next (getTSLL (read var1 var2))) (prev (getTSLL (read var1 var2))) 0)))) (= var3 var0)) (= var5 var2)))))) (inv_main8 var4 var3 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Addr)) (or (not (and (inv_main5 var2 var1) (and (= var0 0) (and (= var3 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) (prev (getTSLL (read var2 var1))) 0)))) (= var4 var1))))) (inv_main8 var3 var4 var4))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main5 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main12 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main11 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main11 var1 var0 var2) (not (is-O_TSLL (read var1 (next (getTSLL (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main13 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main14 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main18 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main8 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main23 var2 var1 var3 var0) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main22 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main22 var1 var0 var2) (not (is-O_TSLL (read var1 (next (getTSLL (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main24 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main24 var1 var0 var2) (not (is-O_TSLL (read var1 (next (getTSLL (read var1 var2))))))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main29 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main27 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main33 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main36 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main34 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main32 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main42 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main40 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main45 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main49 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main52 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main55 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main53 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (inv_main60 var1 var0 var2))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main58 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(check-sat)
