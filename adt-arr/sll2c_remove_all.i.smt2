(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (next Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
;(declare-const allDefHeapObject (Array Addr HeapObject))
;(define-fun allDefHeapObject () (Array Addr HeapObject)
;)

;(declare-const allDefHeapObject (Array Addr HeapObject))

(define-fun emptyHeap () Heap (
  HeapCtor 0 ((as const (Array Addr HeapObject)) defObj)))

;(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))

(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main12 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main21 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main28 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main31 (Heap Int Int Int Int Addr Addr Int Addr Int) Bool)
(declare-fun inv_main34 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Addr Int) Bool)
(declare-fun inv_main45 (Heap Int Int Addr Int Int) Bool)
(declare-fun inv_main52 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main53 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main54 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Heap) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 node)) (or (not (and (inv_main4 var4 var1 var0) (and (not (= nullAddr var8)) (and (and (and (and (and (and (= var5 (newHeap (alloc var4 (O_node var10)))) (= var3 var1)) (= var7 var0)) (= var6 var1)) (= var2 var0)) (= var9 var0)) (= var8 (newAddr (alloc var4 (O_node var10)))))))) (inv_main12 var5 var3 var7 var6 var2 var9 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Heap) (var13 Addr) (var14 Int) (var15 Addr) (var16 Int) (var17 Addr)) (or (not (and (inv_main34 var6 var5 var0 var14 var7 var15 var2 var1 var13) (and (and (and (and (and (and (and (and (= var12 (write var6 var13 (O_node (node (next (getnode (read var6 var13))) var1)))) (= var10 var5)) (= var8 var0)) (= var4 var14)) (= var16 var7)) (= var9 var15)) (= var17 var2)) (= var11 var1)) (= var3 var13)))) (inv_main36 var12 var10 var8 var4 var16 var9 var17 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int)) (or (not (and (inv_main41 var3 var1 var0 var2 var4) (<= 0 (+ (+ var1 (* (- 1) var4)) (- 1))))) (inv_main45 var3 var1 var0 var2 var4 3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Addr)) (or (not (and (inv_main21 var2 var1 var0 var5 var3 var6 var4) (not (<= 0 (+ (+ var5 (- 1)) (- 1)))))) (inv_main22 var2 var1 var0 var5 var3 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (or (not (inv_main12 var2 var1 var0 var5 var3 var6 var4)) (inv_main18 (write var2 var4 (O_node (node nullAddr (data (getnode (read var2 var4)))))) var1 var0 var5 var3 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr)) (or (not (inv_main31 var3 var2 var0 var8 var4 var9 var6 var5 var7 var1)) (inv_main31 var3 var2 var0 var8 var4 var9 var6 var5 var7 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 node) (var16 Addr)) (or (not (and (inv_main21 var10 var8 var0 var13 var11 var14 var6) (and (and (= nullAddr var4) (and (and (and (and (and (and (and (and (= var5 (newHeap (alloc var10 (O_node var15)))) (= var7 var8)) (= var2 var0)) (= var12 var13)) (= var3 var11)) (= var1 var14)) (= var16 var6)) (= var9 var11)) (= var4 (newAddr (alloc var10 (O_node var15)))))) (<= 0 (+ (+ var13 (- 1)) (- 1)))))) (inv_main31 var5 var7 var2 var12 var3 var1 var16 var9 var4 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Heap) (var13 Int) (var14 Addr) (var15 Addr) (var16 Int)) (or (not (and (inv_main52 var12 var8 var0 var9 var16 var4 var10 var15) (and (= var1 var14) (and (and (and (and (and (and (and (and (= var2 var12) (= var11 var8)) (= var5 var0)) (= var14 var9)) (= var13 var16)) (= var6 var4)) (= var3 var10)) (= var7 var15)) (= var1 (next (getnode (read var12 var15)))))))) (inv_main53 var2 var11 var5 var14 var13 var6 var3 var7))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Heap) (var17 Int) (var18 Addr) (var19 Int) (var20 Int) (var21 Addr) (var22 Addr) (var23 Int)) (or (not (and (inv_main53 var16 var12 var1 var14 var23 var7 var15 var22) (and (and (and (and (and (and (and (and (= var4 (write var16 var22 (O_node (node var15 (data (getnode (read var16 var22))))))) (= var20 var12)) (= var17 var1)) (= var6 var14)) (= var19 var23)) (= var11 var7)) (= var2 var15)) (= var18 var22)) (and (and (and (and (and (and (and (= var8 (write var4 var6 defObj)) (= var5 var20)) (= var3 var17)) (= var0 var6)) (= var10 var19)) (= var9 var11)) (= var13 var2)) (= var21 var18))))) (inv_main41 var8 var5 var3 var13 (+ var10 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr) (var17 Heap) (var18 Int) (var19 Heap) (var20 Int) (var21 Heap) (var22 Int) (var23 Int) (var24 Addr) (var25 Int)) (or (not (and (inv_main45 var19 var15 var1 var16 var25 var6) (and (and (and (= var24 var12) (and (and (and (and (and (and (= var17 var19) (= var0 var15)) (= var5 var1)) (= var12 var16)) (= var2 var25)) (= var9 var6)) (= var24 (next (getnode (read var19 var16)))))) (and (and (and (and (and (and (= var21 (write var17 var12 defObj)) (= var8 var0)) (= var20 var5)) (= var11 var12)) (= var23 var2)) (= var18 var9)) (= var14 var24))) (and (and (and (and (and (= var7 var21) (= var13 var8)) (= var22 var20)) (= var3 nullAddr)) (= var10 var23)) (= var4 var18))))) (inv_main41 var7 var13 var22 var3 (+ var10 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Addr) (var9 Heap) (var10 Int) (var11 Addr) (var12 Int) (var13 Addr)) (or (not (and (inv_main22 var5 var4 var0 var12 var6 var13 var2) (and (and (and (and (and (and (= var9 (write var5 var2 (O_node (node var13 (data (getnode (read var5 var2))))))) (= var1 var4)) (= var7 var0)) (= var3 var12)) (= var10 var6)) (= var8 var13)) (= var11 var2)))) (inv_main41 var9 var1 var7 var8 0))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Heap) (var12 Int) (var13 Int) (var14 Addr) (var15 Int)) (or (not (and (inv_main36 var11 var9 var1 var13 var12 var14 var5 var4) (and (and (and (and (and (and (and (= var0 (write var11 var4 (O_node (node var14 (data (getnode (read var11 var4))))))) (= var15 var9)) (= var8 var1)) (= var3 var13)) (= var2 var12)) (= var7 var14)) (= var10 var5)) (= var6 var4)))) (inv_main21 var0 var15 var8 (+ var3 (- 1)) var2 var6 var10))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Addr) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main18 var8 var6 var0 var12 var9 var5 var4) (and (and (and (and (and (and (= var1 (write var8 var4 (O_node (node (next (getnode (read var8 var4))) var5)))) (= var10 var6)) (= var3 var0)) (= var2 var12)) (= var11 var9)) (= var13 var5)) (= var7 var4)))) (inv_main21 var1 var10 var3 var2 var11 var7 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Int) (var14 Addr) (var15 Addr) (var16 Int)) (or (not (and (inv_main54 var12 var6 var0 var9 var16 var1 var10 var15) (and (and (and (and (and (and (and (and (= var8 var12) (= var2 var6)) (= var5 var0)) (= var14 var9)) (= var13 var16)) (= var4 var1)) (= var11 var10)) (= var7 var15)) (= var3 (next (getnode (read var12 var15))))))) (inv_main52 var8 var2 var5 var14 var13 var4 var11 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Int)) (or (not (and (inv_main45 var5 var2 var0 var3 var12 var7) (and (not (= var11 var4)) (and (and (and (and (and (and (= var6 var5) (= var1 var2)) (= var9 var0)) (= var4 var3)) (= var10 var12)) (= var8 var7)) (= var11 (next (getnode (read var5 var3)))))))) (inv_main52 var6 var1 var9 var4 var10 var8 var11 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 node) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr) (var16 Int)) (or (not (and (inv_main21 var10 var8 var0 var13 var11 var14 var5) (and (and (not (= nullAddr var15)) (and (and (and (and (and (and (and (and (= var3 (newHeap (alloc var10 (O_node var6)))) (= var12 var8)) (= var9 var0)) (= var4 var13)) (= var2 var11)) (= var1 var14)) (= var7 var5)) (= var16 var11)) (= var15 (newAddr (alloc var10 (O_node var6)))))) (<= 0 (+ (+ var13 (- 1)) (- 1)))))) (inv_main28 var3 var12 var9 var4 var2 var1 var7 var16 var15))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (or (not (inv_main28 var2 var1 var0 var7 var3 var8 var5 var4 var6)) (inv_main34 (write var2 var6 (O_node (node nullAddr (data (getnode (read var2 var6)))))) var1 var0 var7 var3 var8 var5 var4 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_main15 var2 var1 var0 var5 var3 var7 var4 var6)) (inv_main15 var2 var1 var0 var5 var3 var7 var4 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 node) (var10 Int)) (or (not (and (inv_main4 var5 var3 var0) (and (= nullAddr var7) (and (and (and (and (and (and (= var4 (newHeap (alloc var5 (O_node var9)))) (= var1 var3)) (= var2 var0)) (= var10 var3)) (= var8 var0)) (= var6 var0)) (= var7 (newAddr (alloc var5 (O_node var9)))))))) (inv_main15 var4 var1 var2 var10 var8 var6 var7 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Heap) (var12 Int) (var13 Addr) (var14 Int) (var15 Addr) (var16 Int)) (or (not (and (inv_main52 var11 var7 var0 var8 var16 var5 var9 var15) (and (not (= var13 var2)) (and (and (and (and (and (and (and (and (= var10 var11) (= var12 var7)) (= var1 var0)) (= var2 var8)) (= var14 var16)) (= var6 var5)) (= var4 var9)) (= var3 var15)) (= var13 (next (getnode (read var11 var15)))))))) (inv_main54 var10 var12 var1 var2 var14 var6 var4 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int)) (or (not (and (inv_main41 var3 var1 var0 var2 var4) (and (not (= nullAddr var2)) (not (<= 0 (+ (+ var1 (* (- 1) var4)) (- 1))))))) (inv_main62 var3 var1 var0 var2 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main12 var2 var1 var0 var5 var3 var6 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main18 var2 var1 var0 var5 var3 var6 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (not (and (inv_main28 var2 var1 var0 var7 var3 var8 var5 var4 var6) (not (is-O_node (read var2 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (not (and (inv_main34 var2 var1 var0 var7 var3 var8 var5 var4 var6) (not (is-O_node (read var2 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr)) (not (and (inv_main36 var2 var1 var0 var6 var3 var7 var5 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Addr)) (not (and (inv_main22 var2 var1 var0 var5 var3 var6 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int)) (not (and (inv_main45 var3 var1 var0 var2 var5 var4) (not (is-O_node (read var3 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main52 var4 var1 var0 var2 var7 var5 var3 var6) (not (is-O_node (read var4 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main54 var4 var1 var0 var2 var7 var5 var3 var6) (not (is-O_node (read var4 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main53 var4 var1 var0 var2 var7 var5 var3 var6) (not (is-O_node (read var4 var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int)) (not (inv_main62 var3 var1 var0 var2 var4))))
(check-sat)
