(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (TSLL 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_TSLL (getTSLL TSLL)) (defObj))
                   ((TSLL (next Addr) (prev Addr) (data Int)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main11 (Heap Addr Addr Int) Bool)
(declare-fun inv_main12 (Heap Addr Addr Int Addr) Bool)
(declare-fun inv_main13 (Heap Addr Addr Int) Bool)
(declare-fun inv_main14 (Heap Addr Addr Int) Bool)
(declare-fun inv_main17 (Heap Addr Addr Int) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main27 (Heap Addr Addr Int) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main30 (Heap Addr Addr Int) Bool)
(declare-fun inv_main33 (Heap Addr Addr Int) Bool)
(declare-fun inv_main35 (Heap Addr Addr Int) Bool)
(declare-fun inv_main38 (Heap Addr Addr Int) Bool)
(declare-fun inv_main39 (Heap Addr Addr Int) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main41 (Heap Addr Addr Int) Bool)
(declare-fun inv_main43 (Heap Addr Addr Int) Bool)
(declare-fun inv_main45 (Heap Addr Addr Int Int) Bool)
(declare-fun inv_main46 (Heap Addr Addr Int Int) Bool)
(declare-fun inv_main51 (Heap Addr Addr Int) Bool)
(declare-fun inv_main56 (Heap Addr Addr Int) Bool)
(declare-fun inv_main8 (Heap Addr Addr Int) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr)) (or (not (and (inv_main33 var4 var5 var3 var2) (and (= var6 0) (and (and (and (and (= var0 var4) (= var8 var5)) (= var1 var3)) (= var7 var2)) (= var6 (data (getTSLL (read var4 var3)))))))) (inv_main38 var0 var8 var1 var7))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main13 var5 var8 var4 var3) (and (and (and (and (= var0 var5) (= var2 var8)) (= var7 var4)) (= var1 var3)) (= var6 (next (getTSLL (read var5 var4))))))) (inv_main14 var0 var2 var6 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main8 var2 var3 var1 var0)) (inv_main30 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) (prev (getTSLL (read var2 var1))) var0))) var3 var1 var0))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main3 var0 var1)) (inv_main4 (write var0 var1 (O_TSLL (TSLL var1 (prev (getTSLL (read var0 var1))) (data (getTSLL (read var0 var1)))))) var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main11 var2 var3 var1 var0)) (inv_main13 (write var2 (next (getTSLL (read var2 var1))) (O_TSLL (TSLL (next (getTSLL (read var2 (next (getTSLL (read var2 var1)))))) var1 (data (getTSLL (read var2 (next (getTSLL (read var2 var1))))))))) var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main45 var3 var4 var2 var1 var0) (not (= var0 0)))) (inv_main46 var3 var4 var2 var1 (data (getTSLL (read var3 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main14 var3 var6 var2 var1) (and (not (= var5 2)) (and (not (= var5 1)) (and (not (= var0 0)) (and (and (and (= var4 (write var3 var2 (O_TSLL (TSLL var6 (prev (getTSLL (read var3 var2))) (data (getTSLL (read var3 var2))))))) (= var8 var6)) (= var7 var2)) (= var5 var1))))))) (inv_main8 var4 var8 var7 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr)) (or (not (and (inv_main17 var4 var8 var3 var2) (and (= var1 0) (and (not (= nullAddr var7)) (and (and (and (= var6 (write var4 var3 (O_TSLL (TSLL (next (getTSLL (read var4 var3))) (prev (getTSLL (read var4 var3))) var2)))) (= var5 var8)) (= var7 var3)) (= var0 var2)))))) (inv_main8 var6 var5 var7 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (inv_main4 var1 var2) (and (= var3 0) (and (= var4 (write var1 var2 (O_TSLL (TSLL (next (getTSLL (read var1 var2))) (prev (getTSLL (read var1 var2))) 0)))) (= var0 var2))))) (inv_main8 var4 var0 var0 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main14 var2 var6 var1 var0) (and (= var3 0) (and (and (and (= var4 (write var2 var1 (O_TSLL (TSLL var6 (prev (getTSLL (read var2 var1))) (data (getTSLL (read var2 var1))))))) (= var8 var6)) (= var7 var1)) (= var5 var0))))) (inv_main17 var4 var8 var7 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main14 var3 var6 var2 var1) (and (= var5 1) (and (not (= var0 0)) (and (and (and (= var4 (write var3 var2 (O_TSLL (TSLL var6 (prev (getTSLL (read var3 var2))) (data (getTSLL (read var3 var2))))))) (= var8 var6)) (= var7 var2)) (= var5 var1)))))) (inv_main17 var4 var8 var7 2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main14 var3 var6 var2 var1) (and (= var5 2) (and (not (= var5 1)) (and (not (= var0 0)) (and (and (and (= var4 (write var3 var2 (O_TSLL (TSLL var6 (prev (getTSLL (read var3 var2))) (data (getTSLL (read var3 var2))))))) (= var8 var6)) (= var7 var2)) (= var5 var1))))))) (inv_main17 var4 var8 var7 3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Addr) (var8 TSLL) (var9 Addr)) (or (not (and (inv_main17 var4 var9 var3 var2) (and (not (= var0 0)) (and (not (= nullAddr var7)) (and (and (and (= var6 (write var4 var3 (O_TSLL (TSLL (next (getTSLL (read var4 var3))) (prev (getTSLL (read var4 var3))) var2)))) (= var5 var9)) (= var7 var3)) (= var1 var2)))))) (inv_main12 (newHeap (alloc var6 (O_TSLL var8))) var5 var7 var1 (newAddr (alloc var6 (O_TSLL var8)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Heap) (var4 TSLL) (var5 Addr)) (or (not (and (inv_main4 var3 var5) (and (not (= var1 0)) (and (= var2 (write var3 var5 (O_TSLL (TSLL (next (getTSLL (read var3 var5))) (prev (getTSLL (read var3 var5))) 0)))) (= var0 var5))))) (inv_main12 (newHeap (alloc var2 (O_TSLL var4))) var0 var0 1 (newAddr (alloc var2 (O_TSLL var4)))))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int)) (or (not (and (inv_main51 var3 var5 var2 var1) (and (not (= var4 0)) (and (and (and (and (= var0 var3) (= var7 var5)) (= var6 var2)) (= var8 var1)) (= var4 (data (getTSLL (read var3 var2)))))))) (inv_main56 var0 var6 var6 var8))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main39 var2 var3 var1 var0)) (inv_main45 var2 var3 var1 var0 (data (getTSLL (read var2 (next (getTSLL (read var2 var1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main45 var3 var4 var2 var1 var0) (= var0 0))) (inv_main43 var3 var4 var2 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Heap) (var9 Int)) (or (not (and (inv_main46 var5 var7 var4 var3 var1) (and (= var9 0) (and (and (and (and (= var8 var5) (= var0 var7)) (= var2 var4)) (= var6 var3)) (or (and (<= 0 (+ (+ var1 (* (- 1) (data (getTSLL (read var5 (next (getTSLL (read var5 var4)))))))) (- 1))) (= var9 1)) (and (not (<= 0 (+ (+ var1 (* (- 1) (data (getTSLL (read var5 (next (getTSLL (read var5 var4)))))))) (- 1)))) (= var9 0))))))) (inv_main43 var8 var0 var2 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr)) (or (not (and (inv_main33 var6 var8 var5 var4) (and (not (= var7 0)) (and (and (and (and (= var3 var6) (= var1 var8)) (= var0 var5)) (= var2 var4)) (= var7 (data (getTSLL (read var6 var5)))))))) (inv_main39 var3 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr)) (or (not (and (inv_main38 var4 var8 var3 var2) (and (and (and (and (= var7 var4) (= var5 var8)) (= var1 var3)) (= var0 var2)) (= var6 (next (getTSLL (read var4 var8))))))) (inv_main51 var7 var5 var6 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int)) (or (not (and (inv_main56 var5 var7 var4 var3) (and (and (and (and (= var1 var5) (= var2 var7)) (= var0 var4)) (= var8 var3)) (= var6 (next (getTSLL (read var5 var4))))))) (inv_main51 (write var1 var2 defObj) var2 var6 var8))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Heap) (var9 Int)) (or (not (and (inv_main46 var5 var7 var4 var3 var1) (and (not (= var9 0)) (and (and (and (and (= var8 var5) (= var0 var7)) (= var2 var4)) (= var6 var3)) (or (and (<= 0 (+ (+ var1 (* (- 1) (data (getTSLL (read var5 (next (getTSLL (read var5 var4)))))))) (- 1))) (= var9 1)) (and (not (<= 0 (+ (+ var1 (* (- 1) (data (getTSLL (read var5 (next (getTSLL (read var5 var4)))))))) (- 1)))) (= var9 0))))))) (inv_main41 var8 var0 var2 var6))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main30 var5 var6 var4 var3) (and (= nullAddr var8) (and (and (and (and (= var1 var5) (= var7 var6)) (= var0 var4)) (= var2 var3)) (= var8 (next (getTSLL (read var5 var6)))))))) (inv_main35 var1 var7 var8 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int)) (or (not (and (inv_main41 var4 var6 var3 var2) (and (and (and (and (= var7 var4) (= var1 var6)) (= var0 var3)) (= var8 var2)) (= var5 (next (getTSLL (read var4 var3))))))) (inv_main33 var7 var1 var5 var8))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main30 var5 var6 var4 var3) (and (not (= nullAddr var8)) (and (and (and (and (= var1 var5) (= var7 var6)) (= var0 var4)) (= var2 var3)) (= var8 (next (getTSLL (read var5 var6)))))))) (inv_main33 var1 var7 var8 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int)) (or (not (and (inv_main17 var4 var5 var3 var2) (and (= nullAddr var6) (and (and (and (= var0 (write var4 var3 (O_TSLL (TSLL (next (getTSLL (read var4 var3))) (prev (getTSLL (read var4 var3))) var2)))) (= var1 var5)) (= var6 var3)) (= var7 var2))))) (inv_main27 var0 var1 var6 var7))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (inv_main12 var2 var4 var1 var0 var3)) (inv_main11 (write var2 var1 (O_TSLL (TSLL var3 (prev (getTSLL (read var2 var1))) (data (getTSLL (read var2 var1)))))) var4 var1 var0))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main3 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main4 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main12 var2 var4 var1 var0 var3) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main11 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main11 var2 var3 var1 var0) (not (is-O_TSLL (read var2 (next (getTSLL (read var2 var1))))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main13 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main14 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main17 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main27 var2 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main8 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main30 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main35 var2 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main33 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main39 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main39 var2 var3 var1 var0) (not (is-O_TSLL (read var2 (next (getTSLL (read var2 var1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main45 var3 var4 var2 var1 var0) (and (not (= var0 0)) (not (is-O_TSLL (read var3 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main46 var3 var4 var2 var1 var0) (not (is-O_TSLL (read var3 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main46 var3 var4 var2 var1 var0) (not (is-O_TSLL (read var3 (next (getTSLL (read var3 var2))))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main43 var2 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main41 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main38 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main51 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main56 var2 var3 var1 var0) (not (is-O_TSLL (read var2 var1)))))))
(check-sat)
