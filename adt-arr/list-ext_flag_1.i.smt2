(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (h Int) (flag Int) (n Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun defHeapObject    () HeapObject defObj)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(declare-const allDefHeapObject (Array Addr HeapObject))
(define-fun emptyHeap () Heap (HeapCtor 0 allDefHeapObject))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defHeapObject))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (valid h1 p) (valid h2 p))
               (= (read h1 p) (read h2 p)))))
;===============================================================================
(declare-fun inv_main13 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main14 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main19 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main20 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main22 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main23 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main26 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main29 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main3 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main34 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main37 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main38 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main39 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main41 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main42 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main43 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main56 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main58 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main64 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main9 (Heap Addr Addr Addr Int) Bool)
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (= var3 emptyHeap)) (inv_main3 var3 var2 var1 var0))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr)) (or (not (and (inv_main56 var0 var5 var4 var3 var8) (and (not (= var6 nullAddr)) (and (and (and (and (and (= var7 var0) (= var10 var5)) (= var2 var4)) (= var9 var3)) (= var1 var8)) (= var6 (n (getnode (read var0 var5)))))))) (inv_main58 var7 var10 var2 var9 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var1 var6 var5 var4 var9) (and (= var7 1) (and (and (and (and (and (= var10 var1) (= var0 var6)) (= var8 var5)) (= var2 var4)) (= var3 var9)) (= var7 (h (getnode (read var1 var6)))))))) (inv_main41 var10 var0 var8 var2 var3))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Int)) (or (not (and (inv_main43 var1 var7 var5 var4 var10) (and (= var3 2) (and (and (and (and (and (= var9 var1) (= var8 var7)) (= var2 var5)) (= var6 var4)) (= var0 var10)) (= var3 (h (getnode (read var1 var7)))))))) (inv_main41 var9 var8 var2 var6 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Int)) (or (not (inv_main29 var0 var4 var2 var1 var5 var3)) (inv_main29 var0 var4 var2 var1 var5 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 node) (var14 Addr) (var15 Addr) (var16 Heap)) (or (not (and (inv_main22 var2 var14 var12 var11 var7) (and (and (= var1 nullAddr) (and (and (and (and (and (= var5 (newHeap (alloc var16 (O_node var13)))) (= var9 var10)) (= var4 var15)) (= var6 var8)) (= var3 var0)) (= var1 (newAddr (alloc var16 (O_node var13)))))) (and (and (and (and (= var16 (write var2 var14 (O_node (node 1 (flag (getnode (read var2 var14))) (n (getnode (read var2 var14))))))) (= var10 var14)) (= var15 var12)) (= var8 var11)) (= var0 var7))))) (inv_main29 var5 var9 var4 var1 var3 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Heap) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 node) (var15 Addr) (var16 Int)) (or (not (and (inv_main23 var1 var13 var12 var11 var6) (and (and (= var7 nullAddr) (and (and (and (and (and (= var10 (newHeap (alloc var9 (O_node var14)))) (= var5 var8)) (= var4 var15)) (= var3 var0)) (= var16 var2)) (= var7 (newAddr (alloc var9 (O_node var14)))))) (and (and (and (and (= var9 (write var1 var13 (O_node (node 2 (flag (getnode (read var1 var13))) (n (getnode (read var1 var13))))))) (= var8 var13)) (= var15 var12)) (= var0 var11)) (= var2 var6))))) (inv_main29 var10 var5 var4 var7 var16 1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int)) (or (not (inv_main20 var0 var3 var2 var1 var5)) (inv_main19 (write var0 var3 (O_node (node (h (getnode (read var0 var3))) var4 (n (getnode (read var0 var3)))))) var3 var2 var1 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (and (inv_main39 var0 var3 var2 var1 var4) (not (= (flag (getnode (read var0 var3))) 0)))) (inv_main42 var0 var3 var2 var1 var4))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr)) (or (not (and (inv_main37 var1 var5 var4 var3 var9) (and (= var7 3) (and (and (and (and (and (= var2 var1) (= var10 var5)) (= var8 var4)) (= var6 var3)) (= var0 var9)) (= var7 (h (getnode (read var1 var5)))))))) (inv_main38 var2 var10 var8 var6 var0))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main38 var1 var6 var5 var4 var8) (and (and (= var9 3) (not (<= 0 (+ (+ var10 (- 20)) (- 1))))) (and (and (and (and (and (= var0 var1) (= var3 var6)) (= var2 var5)) (= var7 var4)) (= var10 var8)) (= var9 (h (getnode (read var1 var6)))))))) (inv_main56 var0 var2 var2 var7 var10))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Addr)) (or (not (and (inv_main58 var1 var12 var11 var10 var6) (and (and (and (and (and (and (= var7 var1) (= var4 var12)) (= var3 var11)) (= var5 var10)) (= var2 var6)) (= var15 (n (getnode (read var1 var12))))) (and (and (and (and (= var9 (write var7 var4 defObj)) (= var13 var4)) (= var0 var3)) (= var8 var15)) (= var14 var2))))) (inv_main56 var9 var8 var0 var8 var14))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (and (inv_main19 var0 var3 var2 var1 var4) (= (flag (getnode (read var0 var3))) 0))) (inv_main23 var0 var3 var2 var1 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 node)) (or (not (and (inv_main22 var3 var14 var12 var11 var6) (and (and (not (= var8 nullAddr)) (and (and (and (and (and (= var4 (newHeap (alloc var0 (O_node var16)))) (= var2 var1)) (= var9 var5)) (= var15 var13)) (= var7 var10)) (= var8 (newAddr (alloc var0 (O_node var16)))))) (and (and (and (and (= var0 (write var3 var14 (O_node (node 1 (flag (getnode (read var3 var14))) (n (getnode (read var3 var14))))))) (= var1 var14)) (= var5 var12)) (= var13 var11)) (= var10 var6))))) (inv_main26 var4 var2 var9 var8 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Int) (var7 node) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Addr) (var16 Int)) (or (not (and (inv_main23 var1 var11 var10 var9 var6) (and (and (not (= var15 nullAddr)) (and (and (and (and (and (= var3 (newHeap (alloc var5 (O_node var7)))) (= var12 var0)) (= var8 var13)) (= var4 var2)) (= var14 var16)) (= var15 (newAddr (alloc var5 (O_node var7)))))) (and (and (and (and (= var5 (write var1 var11 (O_node (node 2 (flag (getnode (read var1 var11))) (n (getnode (read var1 var11))))))) (= var0 var11)) (= var13 var10)) (= var2 var9)) (= var16 var6))))) (inv_main26 var3 var12 var8 var15 var14))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (inv_main9 var0 var3 var2 var1 var4)) (inv_main9 var0 var3 var2 var1 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 node) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main3 var2 var7 var5 var4) (and (= var0 nullAddr) (and (and (and (and (= var9 (newHeap (alloc var2 (O_node var6)))) (= var8 var7)) (= var3 var5)) (= var1 var4)) (= var0 (newAddr (alloc var2 (O_node var6)))))))) (inv_main9 var9 var8 var0 var1 1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Int)) (or (not (and (inv_main34 var0 var4 var3 var2 var9) (and (and (and (and (= var6 (write var0 var4 (O_node (node (h (getnode (read var0 var4))) (flag (getnode (read var0 var4))) 0)))) (= var8 var4)) (= var7 var3)) (= var5 var2)) (= var1 var9)))) (inv_main37 var6 var7 var7 var5 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Int)) (or (not (and (inv_main41 var0 var5 var3 var2 var10) (and (and (and (and (and (= var8 var0) (= var1 var5)) (= var7 var3)) (= var6 var2)) (= var4 var10)) (= var9 (n (getnode (read var0 var5))))))) (inv_main37 var8 var9 var7 var6 (+ var4 1)))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (inv_main26 var0 var3 var2 var1 var4)) (inv_main32 (write var0 var3 (O_node (node (h (getnode (read var0 var3))) (flag (getnode (read var0 var3))) var1))) var3 var2 var1 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var0 var7 var6 var5 var9) (and (not (= var4 1)) (and (and (and (and (and (= var10 var0) (= var1 var7)) (= var2 var6)) (= var3 var5)) (= var8 var9)) (= var4 (h (getnode (read var0 var7)))))))) (inv_main64 var10 var1 var2 var3 var8))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int)) (or (not (and (inv_main43 var1 var5 var3 var2 var8) (and (not (= var10 2)) (and (and (and (and (and (= var7 var1) (= var4 var5)) (= var0 var3)) (= var9 var2)) (= var6 var8)) (= var10 (h (getnode (read var1 var5)))))))) (inv_main64 var7 var4 var0 var9 var6))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int)) (or (not (and (inv_main38 var0 var4 var3 var2 var8) (and (or (not (= var5 3)) (<= 0 (+ (+ var10 (- 20)) (- 1)))) (and (and (and (and (and (= var1 var0) (= var6 var4)) (= var9 var3)) (= var7 var2)) (= var10 var8)) (= var5 (h (getnode (read var0 var4)))))))) (inv_main64 var1 var6 var9 var7 var10))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (and (inv_main39 var0 var3 var2 var1 var4) (= (flag (getnode (read var0 var3))) 0))) (inv_main43 var0 var3 var2 var1 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Heap) (var8 Int) (var9 Int) (var10 Addr)) (or (not (and (inv_main37 var1 var6 var4 var3 var9) (and (not (= var5 3)) (and (and (and (and (and (= var7 var1) (= var10 var6)) (= var2 var4)) (= var0 var3)) (= var8 var9)) (= var5 (h (getnode (read var1 var6)))))))) (inv_main39 var7 var10 var2 var0 var8))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (and (inv_main13 var0 var3 var2 var1 var4) (not (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1)))))) (inv_main14 var0 var3 var2 var1 var4))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int)) (or (not (and (inv_main13 var1 var4 var3 var2 var5) (and (= var0 0) (<= 0 (+ (+ 20 (* (- 1) var5)) (- 1)))))) (inv_main14 var1 var4 var3 var2 var5))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (and (inv_main19 var0 var3 var2 var1 var4) (not (= (flag (getnode (read var0 var3))) 0)))) (inv_main22 var0 var3 var2 var1 var4))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int)) (or (not (and (inv_main32 var1 var8 var7 var6 var10) (and (and (and (and (and (= var2 var1) (= var5 var8)) (= var9 var7)) (= var0 var6)) (= var3 var10)) (= var4 (n (getnode (read var1 var8))))))) (inv_main13 var2 var4 var9 var0 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 node) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main3 var2 var7 var5 var4) (and (not (= var0 nullAddr)) (and (and (and (and (= var9 (newHeap (alloc var2 (O_node var6)))) (= var8 var7)) (= var3 var5)) (= var1 var4)) (= var0 (newAddr (alloc var2 (O_node var6)))))))) (inv_main13 var9 var0 var0 var1 0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int)) (or (not (and (inv_main13 var0 var3 var2 var1 var5) (and (not (= var4 0)) (<= 0 (+ (+ 20 (* (- 1) var5)) (- 1)))))) (inv_main20 var0 var3 var2 var1 (+ var5 1)))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (or (not (inv_main14 var0 var3 var2 var1 var4)) (inv_main34 (write var0 var3 (O_node (node 3 (flag (getnode (read var0 var3))) (n (getnode (read var0 var3)))))) var3 var2 var1 var4))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main20 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main19 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main22 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main23 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main26 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main32 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main14 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main34 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main37 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main39 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main42 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main43 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main41 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main38 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main56 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (and (inv_main58 var0 var3 var2 var1 var4) (not (is-O_node (read var0 var3)))))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int)) (not (inv_main64 var0 var3 var2 var1 var4))))
(check-sat)
