(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (item 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_item (getitem item)) (defObj))
                   ((item (next Addr) (data Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main0 (Heap Int Int) Bool)
(declare-fun inv_main13 (Heap Int Addr Int Int Addr) Bool)
(declare-fun inv_main14 (Heap Int Addr Int Int Addr) Bool)
(declare-fun inv_main16 (Heap Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main20 (Heap Int Addr Int) Bool)
(declare-fun inv_main23 (Heap Int Addr Int) Bool)
(declare-fun inv_main24 (Heap Int Addr Int) Bool)
(declare-fun inv_main30 (Heap Int Addr Int) Bool)
(assert (inv_main2 emptyHeap 0))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int)) (or (not (inv_main24 var1 var3 var2 var0)) (inv_main23 (write var1 (data (getitem (read var1 var2))) defObj) var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int)) (or (not (and (inv_main16 var1 var4 var11 var10 var9 var3 var7) (and (not (<= 0 (+ (* (- 1) (+ var13 1)) (- 1)))) (and (<= 0 (+ (+ var13 1) (- 1))) (and (= var0 0) (and (and (and (and (and (= var5 (write var1 var3 (O_item (item (next (getitem (read var1 var3))) var7)))) (= var6 var4)) (= var2 var11)) (= var13 var10)) (= var8 var9)) (= var12 var3))))))) (inv_main23 var5 var6 var12 (+ var13 1)))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Heap) (var11 Addr) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr) (var17 Addr) (var18 Int)) (or (not (and (inv_main16 var0 var6 var16 var15 var13 var2 var11) (and (not (<= 0 (+ (* (- 1) var5) (- 1)))) (and (<= 0 (+ var5 (- 1))) (and (and (and (= var3 0) (not (= var9 0))) (and (and (and (and (= var10 var7) (= var8 var4)) (= var14 var17)) (= var5 (+ var18 1))) (or (and (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1))) (= var3 1)) (and (not (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1)))) (= var3 0))))) (and (and (and (and (and (= var7 (write var0 var2 (O_item (item (next (getitem (read var0 var2))) var11)))) (= var4 var6)) (= var1 var16)) (= var18 var15)) (= var12 var13)) (= var17 var2))))))) (inv_main23 var10 var8 var14 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (or (not (inv_main13 var2 var5 var3 var1 var0 var4)) (inv_main14 (write var2 var4 (O_item (item var3 (data (getitem (read var2 var4)))))) var5 var3 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int)) (or (not (and (inv_main20 var1 var3 var2 var0) (<= 0 (+ var0 (- 1))))) (inv_main30 var1 var3 var2 var0))))
(assert (forall ((var0 item) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Heap) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Addr) (var17 Addr) (var18 Int) (var19 Int)) (or (not (and (inv_main16 var1 var5 var16 var14 var13 var4 var10) (and (and (and (not (= var15 0)) (not (= var8 0))) (and (and (and (and (= var11 var6) (= var9 var7)) (= var3 var17)) (= var18 (+ var19 1))) (or (and (<= 0 (+ (+ 20 (* (- 1) var7)) (- 1))) (= var15 1)) (and (not (<= 0 (+ (+ 20 (* (- 1) var7)) (- 1)))) (= var15 0))))) (and (and (and (and (and (= var6 (write var1 var4 (O_item (item (next (getitem (read var1 var4))) var10)))) (= var7 var5)) (= var2 var16)) (= var19 var14)) (= var12 var13)) (= var17 var4))))) (inv_main13 (newHeap (alloc var11 (O_item var0))) (+ var9 1) var3 var18 2 (newAddr (alloc var11 (O_item var0)))))))
(assert (forall ((var0 Heap) (var1 item) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int)) (or (not (and (inv_main2 var3 var5) (and (and (= var0 var3) (= var4 var5)) (= var2 nullAddr)))) (inv_main13 (newHeap (alloc var0 (O_item var1))) (+ var4 1) var2 0 2 (newAddr (alloc var0 (O_item var1)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int)) (or (not (and (inv_main16 var1 var4 var11 var10 var9 var3 var7) (and (<= 0 (+ (* (- 1) (+ var13 1)) (- 1))) (and (<= 0 (+ (+ var13 1) (- 1))) (and (= var0 0) (and (and (and (and (and (= var5 (write var1 var3 (O_item (item (next (getitem (read var1 var3))) var7)))) (= var6 var4)) (= var2 var11)) (= var13 var10)) (= var8 var9)) (= var12 var3))))))) (inv_main24 var5 var6 var12 (+ var13 1)))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Heap) (var11 Addr) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr) (var17 Addr) (var18 Int)) (or (not (and (inv_main16 var0 var6 var16 var15 var13 var2 var11) (and (<= 0 (+ (* (- 1) var5) (- 1))) (and (<= 0 (+ var5 (- 1))) (and (and (and (= var3 0) (not (= var9 0))) (and (and (and (and (= var10 var7) (= var8 var4)) (= var14 var17)) (= var5 (+ var18 1))) (or (and (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1))) (= var3 1)) (and (not (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1)))) (= var3 0))))) (and (and (and (and (and (= var7 (write var0 var2 (O_item (item (next (getitem (read var0 var2))) var11)))) (= var4 var6)) (= var1 var16)) (= var18 var15)) (= var12 var13)) (= var17 var2))))))) (inv_main24 var10 var8 var14 var5))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int)) (or (not (and (inv_main20 var1 var3 var2 var0) (not (<= 0 (+ var0 (- 1)))))) (inv_main0 var1 var3 0))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int)) (or (not (and (inv_main23 var1 var5 var12 var10) (and (and (and (and (and (= var7 var1) (= var6 var5)) (= var9 var12)) (= var4 var10)) (= var2 (next (getitem (read var1 var12))))) (and (and (and (and (= var0 (write var7 var9 defObj)) (= var8 var6)) (= var3 var9)) (= var13 var4)) (= var11 var2))))) (inv_main20 var0 var8 var11 (+ var13 (- 1))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Int) (var9 Addr) (var10 Addr) (var11 Heap) (var12 Int) (var13 Int)) (or (not (and (inv_main30 var2 var4 var10 var8) (and (and (and (and (and (= var6 var2) (= var13 var4)) (= var9 var10)) (= var5 var8)) (= var3 (next (getitem (read var2 var10))))) (and (and (and (and (= var11 (write var6 var9 defObj)) (= var12 var13)) (= var7 var9)) (= var1 var5)) (= var0 var3))))) (inv_main20 var11 var12 var0 (+ var1 (- 1))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int)) (or (not (and (inv_main16 var1 var4 var11 var10 var9 var3 var7) (and (not (<= 0 (+ (+ var13 1) (- 1)))) (and (= var0 0) (and (and (and (and (and (= var5 (write var1 var3 (O_item (item (next (getitem (read var1 var3))) var7)))) (= var6 var4)) (= var2 var11)) (= var13 var10)) (= var8 var9)) (= var12 var3)))))) (inv_main20 var5 var6 var12 (+ var13 1)))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Heap) (var11 Addr) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr) (var17 Addr) (var18 Int)) (or (not (and (inv_main16 var0 var6 var16 var15 var13 var2 var11) (and (not (<= 0 (+ var5 (- 1)))) (and (and (and (= var3 0) (not (= var9 0))) (and (and (and (and (= var10 var7) (= var8 var4)) (= var14 var17)) (= var5 (+ var18 1))) (or (and (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1))) (= var3 1)) (and (not (<= 0 (+ (+ 20 (* (- 1) var4)) (- 1)))) (= var3 0))))) (and (and (and (and (and (= var7 (write var0 var2 (O_item (item (next (getitem (read var0 var2))) var11)))) (= var4 var6)) (= var1 var16)) (= var18 var15)) (= var12 var13)) (= var17 var2)))))) (inv_main20 var10 var8 var14 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (or (not (and (inv_main14 var2 var5 var3 var1 var0 var4) (not (= (next (getitem (read var2 var4))) nullAddr)))) (inv_main16 var2 var5 var3 var1 var0 var4 (data (getitem (read var2 (next (getitem (read var2 var4))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int) (var6 item)) (or (not (and (inv_main14 var2 var5 var3 var1 var0 var4) (= (next (getitem (read var2 var4))) nullAddr))) (inv_main16 (newHeap (alloc var2 (O_item var6))) var5 var3 var1 var0 var4 (newAddr (alloc var2 (O_item var6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main13 var2 var5 var3 var1 var0 var4) (not (is-O_item (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main14 var2 var5 var3 var1 var0 var4) (not (is-O_item (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main14 var2 var5 var3 var1 var0 var4) (and (not (= (next (getitem (read var2 var4))) nullAddr)) (not (is-O_item (read var2 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int)) (not (and (inv_main14 var2 var5 var3 var1 var0 var4) (and (not (= (next (getitem (read var2 var4))) nullAddr)) (not (is-O_item (read var2 (next (getitem (read var2 var4)))))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Int)) (not (and (inv_main16 var3 var6 var4 var2 var1 var5 var0) (not (is-O_item (read var3 var5)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int)) (not (and (inv_main24 var1 var3 var2 var0) (not (is-O_item (read var1 var2)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int)) (not (and (inv_main23 var1 var3 var2 var0) (not (is-O_item (read var1 var2)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int)) (not (and (inv_main30 var1 var3 var2 var0) (not (is-O_item (read var1 var2)))))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int)) (not (and (inv_main0 var0 var3 var1) (not (= (read var0 var2) defObj))))))
(check-sat)
