(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (data Int) (next Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main10 (Heap Int Int Int Int Addr) Bool)
(declare-fun inv_main17 (Heap Int Int Int Int Addr Int Addr) Bool)
(declare-fun inv_main20 (Heap Int Int Int Int Addr Int Addr Int) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Int Addr) Bool)
(declare-fun inv_main25 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main38 (Heap Int Int Addr Int Int Int Int Int Int Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Addr Int Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main44 (Heap Int Int Addr Int Int Int Int Int Int Addr) Bool)
(declare-fun inv_main48 (Heap Int Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main51 (Heap Int Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main54 (Heap Int Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main55 (Heap Int Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main59 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main60 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main61 (Heap Int Int Addr Int Int Addr Int Addr) Bool)
(declare-fun inv_main66 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main71 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main73 (Heap Int Int Addr Int Int Addr Int) Bool)
(declare-fun inv_main74 (Heap Int Int Addr Int Int Addr Int Addr) Bool)
(declare-fun inv_main86 (Heap Int Int Addr Int Int Addr Int Addr) Bool)
(declare-fun inv_main89 (Heap Int Int Addr Int Int Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main48 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var1 nullAddr)) (not (<= 0 (+ var3 (- 1))))))) (inv_main55 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main48 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ var3 (- 1))))) (inv_main51 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var0 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main23 var15 var14 var13 var12 var11 var10 var9 var8) (and (is-O_node (read var15 var8)) (and (and (and (and (and (and (and (= var7 (write var15 var8 (O_node (node var9 (next (getnode (read var15 var8))))))) (= var6 var14)) (= var5 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var8))))) (inv_main25 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main55 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var11 var1)))) (inv_main54 (write var11 var1 (O_node (node (data (getnode (read var11 var1))) var2))) var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main48 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var1 nullAddr) (not (<= 0 (+ var3 (- 1))))))) (inv_main54 var11 var10 var9 var2 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (inv_main41 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main41 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 node) (var15 Heap) (var16 Heap) (var17 Addr) (var18 Addr) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Heap) (var24 Int)) (or (not (and (inv_main10 var23 var22 var21 var20 var19 var18) (and (and (and (= nullAddr var17) (and (and (and (and (and (and (and (and (and (and (= var16 (newHeap (alloc var15 (O_node var14)))) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (= var3 3)) (= var2 var6)) (= var1 var4)) (= var0 var6)) (= var17 (newAddr (alloc var15 (O_node var14)))))) (and (and (and (and (and (= var15 var23) (= var12 var22)) (= var10 var21)) (= var8 var18)) (= var6 5)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var22 (* (- 2) var24)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var22 (* (- 2) var24)))) (- 1)))) (or (not (<= 0 (+ (+ var22 (* (- 2) var24)) (- 1)))) (<= 0 (+ var22 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var22 (* (- 2) var24))) (- 1)))) (<= 0 (+ (* (- 1) var22) (- 1))))) (= var4 var24)))) (not (<= 0 (+ var20 (- 1))))))) (inv_main41 var16 var13 var11 var9 var7 var5 var3 var2 var1 var0 var17 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main71 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var1 nullAddr)))) (inv_main73 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main25 var13 var12 var11 var10 var9 var8 var7) (and (is-O_node (read var13 var7)) (and (and (and (and (and (and (= var6 (write var13 var7 (O_node (node (data (getnode (read var13 var7))) var8)))) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))) (inv_main10 var6 var5 var4 (+ var3 (- 1)) var2 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main4 var8 var7 var6) (and (and (and (and (and (= var5 var8) (= var4 var7)) (= var3 var6)) (= var2 var7)) (= var1 var6)) (= var0 nullAddr)))) (inv_main10 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main17 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var7 var0)))) (inv_main23 (write var7 var0 (O_node (node (data (getnode (read var7 var0))) nullAddr))) var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (inv_main20 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main20 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 node) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main10 var14 var13 var12 var11 var10 var9) (and (and (= nullAddr var8) (and (and (and (and (and (and (and (= var7 (newHeap (alloc var14 (O_node var6)))) (= var5 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var10)) (= var8 (newAddr (alloc var14 (O_node var6)))))) (<= 0 (+ var11 (- 1)))))) (inv_main20 var7 var5 var4 var3 var2 var1 var0 var8 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 node) (var15 Heap) (var16 Heap) (var17 Addr) (var18 Addr) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Heap) (var24 Int)) (or (not (and (inv_main10 var23 var22 var21 var20 var19 var18) (and (and (and (not (= nullAddr var17)) (and (and (and (and (and (and (and (and (and (and (= var16 (newHeap (alloc var15 (O_node var14)))) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (= var3 3)) (= var2 var6)) (= var1 var4)) (= var0 var6)) (= var17 (newAddr (alloc var15 (O_node var14)))))) (and (and (and (and (and (= var15 var23) (= var12 var22)) (= var10 var21)) (= var8 var18)) (= var6 5)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var22 (* (- 2) var24)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var22 (* (- 2) var24)))) (- 1)))) (or (not (<= 0 (+ (+ var22 (* (- 2) var24)) (- 1)))) (<= 0 (+ var22 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var22 (* (- 2) var24))) (- 1)))) (<= 0 (+ (* (- 1) var22) (- 1))))) (= var4 var24)))) (not (<= 0 (+ var20 (- 1))))))) (inv_main38 var16 var13 var11 var9 var7 var5 var3 var2 var1 var0 var17))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main59 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var7 var1)) (= var3 (data (getnode (read var7 var1))))))) (inv_main66 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var8 var2)) (not (= var6 (data (getnode (read var8 var2)))))))) (inv_main89 var8 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main74 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var8 var2)) (not (= var6 (data (getnode (read var8 var2)))))))) (inv_main89 var8 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main59 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var7 var1)) (not (= var3 (data (getnode (read var7 var1)))))))) (inv_main89 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main71 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var0 (+ 1 var6))) (= var1 nullAddr)))) (inv_main89 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (and (not (= var0 nullAddr)) (not (= (+ var1 1) var3))) (and (is-O_node (read var8 var2)) (= var6 (data (getnode (read var8 var2)))))))) (inv_main60 var8 var7 var6 var5 var4 var3 var0 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Addr) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (inv_main54 var20 var19 var18 var17 var16 var15 var14 var13 var12 var11 var10 var9) (and (and (not (= var8 nullAddr)) (not (= 0 var7))) (and (is-O_node (read var20 var11)) (and (and (and (and (and (and (and (and (= var6 (write var20 var11 (O_node (node (data (getnode (read var20 var11))) var9)))) (= var5 var19)) (= var4 var18)) (= var8 var17)) (= var3 var16)) (= var7 var15)) (= var2 var14)) (= var1 var13)) (= var0 var12)))))) (inv_main60 var6 var5 var4 var8 var3 var7 var8 0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main73 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var7 var1)))) (inv_main74 var7 var6 var5 var4 var3 var2 var1 var0 (next (getnode (read var7 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (or (= var0 nullAddr) (= (+ var1 1) var3)) (and (is-O_node (read var8 var2)) (= var6 (data (getnode (read var8 var2)))))))) (inv_main59 var8 var7 var6 var5 var4 var3 var0 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Addr) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (inv_main54 var20 var19 var18 var17 var16 var15 var14 var13 var12 var11 var10 var9) (and (or (= var8 nullAddr) (= 0 var7)) (and (is-O_node (read var20 var11)) (and (and (and (and (and (and (and (and (= var6 (write var20 var11 (O_node (node (data (getnode (read var20 var11))) var9)))) (= var5 var19)) (= var4 var18)) (= var8 var17)) (= var3 var16)) (= var7 var15)) (= var2 var14)) (= var1 var13)) (= var0 var12)))))) (inv_main59 var6 var5 var4 var8 var3 var7 var8 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main38 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var10 var0)))) (inv_main44 (write var10 var0 (O_node (node (data (getnode (read var10 var0))) nullAddr))) var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main74 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_node (read var8 var2)) (= var6 (data (getnode (read var8 var2))))))) (inv_main71 var8 var7 var6 var5 var4 var3 var0 (+ var1 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Addr) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main66 var16 var15 var14 var13 var12 var11 var10 var9) (and (is-O_node (read var16 var10)) (and (and (and (and (and (and (and (and (= var8 var16) (= var7 var15)) (= var6 var14)) (= var5 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 (next (getnode (read var16 var10)))))))) (inv_main71 var8 var7 var6 var5 var4 var3 var0 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (read var7 var1)))) (inv_main61 var7 var6 var5 var4 var3 var2 var1 var0 (next (getnode (read var7 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 node) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main10 var14 var13 var12 var11 var10 var9) (and (and (not (= nullAddr var8)) (and (and (and (and (and (and (and (= var7 (newHeap (alloc var14 (O_node var6)))) (= var5 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var10)) (= var8 (newAddr (alloc var14 (O_node var6)))))) (<= 0 (+ var11 (- 1)))))) (inv_main17 var7 var5 var4 var3 var2 var1 var0 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Heap) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Addr) (var22 Int) (var23 Int) (var24 Heap)) (or (not (and (inv_main51 var24 var23 var22 var21 var20 var19 var18 var17 var16 var15 var14 var13) (and (is-O_node (read var24 var13)) (and (and (and (and (and (and (and (and (and (and (and (and (= var12 var24) (= var11 var23)) (= var10 var22)) (= var9 var21)) (= var8 var20)) (= var7 var19)) (= var6 var18)) (= var5 var17)) (= var4 var16)) (= var3 var15)) (= var2 var14)) (= var1 var13)) (= var0 (next (getnode (read var24 var13)))))))) (inv_main48 var12 var11 var10 var9 var8 var7 var6 var5 (+ var4 (- 1)) var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Heap) (var22 Addr) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Addr) (var30 Int) (var31 Int) (var32 Heap)) (or (not (and (inv_main44 var32 var31 var30 var29 var28 var27 var26 var25 var24 var23 var22) (and (and (and (and (and (and (and (and (and (and (and (= var21 var20) (= var19 var18)) (= var17 var16)) (= var15 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 nullAddr)) (and (is-O_node (read var32 var22)) (and (and (and (and (and (and (and (and (and (and (= var20 (write var32 var22 (O_node (node var23 (next (getnode (read var32 var22))))))) (= var18 var31)) (= var16 var30)) (= var14 var29)) (= var12 var28)) (= var10 var27)) (= var8 var26)) (= var6 var25)) (= var4 var24)) (= var0 var23)) (= var2 var22)))))) (inv_main48 var21 var19 var17 var15 var13 var11 var9 var7 var5 var3 var1 var15))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Addr) (var16 Int) (var17 Int) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Int) (var22 Addr) (var23 Int) (var24 Int) (var25 Addr) (var26 Int) (var27 Int) (var28 Heap)) (or (not (and (inv_main86 var28 var27 var26 var25 var24 var23 var22 var21 var20) (and (not (= var19 nullAddr)) (and (and (is-O_node (read var28 var20)) (and (and (and (and (and (and (and (and (and (= var18 var28) (= var17 var27)) (= var16 var26)) (= var15 var25)) (= var14 var24)) (= var13 var23)) (= var12 var22)) (= var11 var21)) (= var10 var20)) (= var9 (next (getnode (read var28 var20)))))) (and (and (and (and (and (and (and (and (and (= var8 (write var18 var10 defObj)) (= var7 var17)) (= var6 var16)) (= var5 var15)) (= var4 var14)) (= var3 var13)) (= var2 var12)) (= var1 var11)) (= var0 var10)) (= var19 var9)))))) (inv_main86 var8 var7 var6 var5 var4 var3 var2 var1 var19))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main71 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var4 nullAddr)) (and (= var0 (+ 1 var6)) (= var1 nullAddr))))) (inv_main86 var7 var6 var5 var4 var3 var2 var1 var0 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main17 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main23 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main25 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (not (and (inv_main38 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var10 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (not (and (inv_main44 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var10 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (not (and (inv_main51 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var11 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (not (and (inv_main55 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var11 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (not (and (inv_main54 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var11 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main59 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main66 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main73 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var7 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main74 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main86 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var8 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (not (inv_main89 var7 var6 var5 var4 var3 var2 var1 var0))))
(check-sat)
