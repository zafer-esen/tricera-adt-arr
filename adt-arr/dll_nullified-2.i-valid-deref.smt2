(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_AddrRange (getAddrRange AddrRange)) (O_node (getnode node)) (defObj))
                   ((node (|node::data_0| Int) (|node::next| Addr) (|node::data_1| Int) (|node::prev| Addr) (|node::data_2| Int)))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main578_3 (Heap Int Int Addr) Bool)
(declare-fun inv_main582_7 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main589_8 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main599_3 (Heap Int) Bool)
(declare-fun inv_main599_3_12 (Heap Int Addr) Bool)
(declare-fun inv_main599_3_14 (Heap Int Addr) Bool)
(declare-fun inv_main601_8 (Heap Int Addr Int) Bool)
(declare-fun inv_main601_8_17 (Heap Int Addr Int) Bool)
(declare-fun inv_main607_5 (Heap Int Addr Addr) Bool)
(declare-fun inv_main608_8 (Heap Int Addr Addr Int) Bool)
(declare-fun inv_main608_8_26 (Heap Int Addr Addr Int) Bool)
(declare-fun inv_main_15 (Heap Int Addr) Bool)
(declare-fun inv_main_2 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main_23 (Heap Int Addr) Bool)
(declare-fun inv_main_4 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main_5 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main_6 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main_7 (Heap Int Int Addr Addr) Bool)
(assert (forall ((var0 Int) (var1 Heap)) (or (not (and (= var1 emptyHeap) (= var0 5))) (inv_main599_3 var1 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main_6 var5 var4 var3 var2 var1) (and (and (is-O_node (read var5 var1)) (is-O_node (read var5 var1))) (= var0 (write var5 var1 (O_node (node (|node::data_0| (getnode (read var5 var1))) var2 (|node::data_1| (getnode (read var5 var1))) (|node::prev| (getnode (read var5 var1))) (|node::data_2| (getnode (read var5 var1)))))))))) (inv_main_7 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main578_3 var9 var8 var7 var6) (and (and (not (= nullAddr var5)) (and (and (and (and (= var4 (newHeap (alloc var9 (O_node var3)))) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (newAddr (alloc var9 (O_node var3)))))) (<= 0 (+ var7 (- 1)))))) (inv_main_2 var4 var2 var1 var0 var5))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main599_3_12 var2 var1 var0) (and (not (= var0 nullAddr)) (and (is-O_node (read var2 var0)) (= (|node::next| (getnode (read var2 var0))) nullAddr))))) (inv_main_23 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Addr) (var12 Int) (var13 Heap)) (or (not (and (inv_main608_8_26 var13 var12 var11 var10 var9) (and (not (= var8 nullAddr)) (and (and (= var7 0) (and (and (= var9 0) (is-O_node (read var13 var11))) (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 var11)) (= var3 var10)) (or (and (not (= 0 (|node::data_2| (getnode (read var13 var11))))) (= var7 1)) (and (= 0 (|node::data_2| (getnode (read var13 var11)))) (= var7 0)))))) (and (and (and (= var2 (write var6 var4 defObj)) (= var1 var5)) (= var0 var4)) (= var8 var3)))))) (inv_main_23 var2 var1 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (inv_main582_7 var5 var4 var3 var2 var1 var0)) (inv_main582_7 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 node) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main578_3 var10 var9 var8 var7) (and (and (and (= nullAddr var6) (and (and (and (and (= var5 (newHeap (alloc var10 (O_node var4)))) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var6 (newAddr (alloc var10 (O_node var4)))))) (<= 0 (+ var8 (- 1)))) (= var0 1)))) (inv_main582_7 var5 var3 var2 var1 var6 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (inv_main608_8 var5 var4 var3 var2 var1) (and (not (= var1 0)) (= var0 1)))) (inv_main608_8_26 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (inv_main608_8 var9 var8 var7 var6 var5) (and (and (= var5 0) (is-O_node (read var9 var7))) (and (and (and (and (= var4 var9) (= var3 var8)) (= var2 var7)) (= var1 var6)) (or (and (not (= 0 (|node::data_1| (getnode (read var9 var7))))) (= var0 1)) (and (= 0 (|node::data_1| (getnode (read var9 var7)))) (= var0 0))))))) (inv_main608_8_26 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main589_8 var10 var9 var8 var7 var6) (and (and (and (is-O_node (read var10 var7)) (is-O_node (read var10 var7))) (and (and (and (and (= var5 (write var10 var7 (O_node (node (|node::data_0| (getnode (read var10 var7))) (|node::next| (getnode (read var10 var7))) (|node::data_1| (getnode (read var10 var7))) var6 (|node::data_2| (getnode (read var10 var7))))))) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 var6))) (= var0 (+ var3 (- 1)))))) (inv_main578_3 var5 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main_7 var10 var9 var8 var7 var6) (and (and (and (= var5 nullAddr) (and (is-O_node (read var10 var6)) (is-O_node (read var10 var6)))) (and (and (and (and (= var4 (write var10 var6 (O_node (node (|node::data_0| (getnode (read var10 var6))) (|node::next| (getnode (read var10 var6))) (|node::data_1| (getnode (read var10 var6))) nullAddr (|node::data_2| (getnode (read var10 var6))))))) (= var3 var9)) (= var2 var8)) (= var5 var7)) (= var1 var6))) (= var0 (+ var2 (- 1)))))) (inv_main578_3 var4 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main599_3 var2 var1) (= var0 nullAddr))) (inv_main578_3 var2 var1 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (inv_main_15 var6 var5 var4) (and (is-O_node (read var6 var4)) (and (and (and (= var3 var6) (= var2 var5)) (= var1 var4)) (= var0 (|node::next| (getnode (read var6 var4)))))))) (inv_main599_3_12 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main578_3 var3 var2 var1 var0) (not (<= 0 (+ var1 (- 1)))))) (inv_main599_3_12 var3 var2 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main_2 var5 var4 var3 var2 var1) (and (and (is-O_node (read var5 var1)) (is-O_node (read var5 var1))) (= var0 (write var5 var1 (O_node (node 0 (|node::next| (getnode (read var5 var1))) (|node::data_1| (getnode (read var5 var1))) (|node::prev| (getnode (read var5 var1))) (|node::data_2| (getnode (read var5 var1)))))))))) (inv_main_4 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main_7 var9 var8 var7 var6 var5) (and (and (not (= var4 nullAddr)) (and (is-O_node (read var9 var5)) (is-O_node (read var9 var5)))) (and (and (and (and (= var3 (write var9 var5 (O_node (node (|node::data_0| (getnode (read var9 var5))) (|node::next| (getnode (read var9 var5))) (|node::data_1| (getnode (read var9 var5))) nullAddr (|node::data_2| (getnode (read var9 var5))))))) (= var2 var8)) (= var1 var7)) (= var4 var6)) (= var0 var5))))) (inv_main589_8 var3 var2 var1 var4 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main_5 var5 var4 var3 var2 var1) (and (and (is-O_node (read var5 var1)) (is-O_node (read var5 var1))) (= var0 (write var5 var1 (O_node (node (|node::data_0| (getnode (read var5 var1))) (|node::next| (getnode (read var5 var1))) (|node::data_1| (getnode (read var5 var1))) (|node::prev| (getnode (read var5 var1))) 0))))))) (inv_main_6 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (and (inv_main599_3_14 var3 var2 var1) (and (is-O_node (read var3 var1)) (or (and (not (= 0 (|node::data_0| (getnode (read var3 var1))))) (= var0 1)) (and (= 0 (|node::data_0| (getnode (read var3 var1)))) (= var0 0)))))) (inv_main601_8 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main601_8_17 var7 var6 var5 var4) (and (= var3 0) (and (and (= var4 0) (is-O_node (read var7 var5))) (and (and (and (= var2 var7) (= var1 var6)) (= var0 var5)) (or (and (not (= 0 (|node::data_2| (getnode (read var7 var5))))) (= var3 1)) (and (= 0 (|node::data_2| (getnode (read var7 var5)))) (= var3 0)))))))) (inv_main_15 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (or (not (and (inv_main599_3_12 var2 var1 var0) (and (is-O_node (read var2 var0)) (not (= (|node::next| (getnode (read var2 var0))) nullAddr))))) (inv_main599_3_14 var2 var1 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main_4 var5 var4 var3 var2 var1) (and (and (is-O_node (read var5 var1)) (is-O_node (read var5 var1))) (= var0 (write var5 var1 (O_node (node (|node::data_0| (getnode (read var5 var1))) (|node::next| (getnode (read var5 var1))) 0 (|node::prev| (getnode (read var5 var1))) (|node::data_2| (getnode (read var5 var1)))))))))) (inv_main_5 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (inv_main601_8 var4 var3 var2 var1) (and (not (= var1 0)) (= var0 1)))) (inv_main601_8_17 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main601_8 var7 var6 var5 var4) (and (and (= var4 0) (is-O_node (read var7 var5))) (and (and (and (= var3 var7) (= var2 var6)) (= var1 var5)) (or (and (not (= 0 (|node::data_1| (getnode (read var7 var5))))) (= var0 1)) (and (= 0 (|node::data_1| (getnode (read var7 var5)))) (= var0 0))))))) (inv_main601_8_17 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (and (inv_main_23 var3 var2 var1) (and (is-O_node (read var3 var1)) (= var0 (|node::prev| (getnode (read var3 var1))))))) (inv_main607_5 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (inv_main607_5 var4 var3 var2 var1) (and (is-O_node (read var4 var2)) (or (and (not (= 0 (|node::data_0| (getnode (read var4 var2))))) (= var0 1)) (and (= 0 (|node::data_0| (getnode (read var4 var2)))) (= var0 0)))))) (inv_main608_8 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_2 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_2 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var0)) (not (is-O_node (read var4 var0))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_4 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_4 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var0)) (not (is-O_node (read var4 var0))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_5 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_5 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var0)) (not (is-O_node (read var4 var0))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_6 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_6 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var0)) (not (is-O_node (read var4 var0))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_7 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main_7 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var0)) (not (is-O_node (read var4 var0))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main589_8 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main589_8 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var1)) (not (is-O_node (read var4 var1))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main599_3_12 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main599_3_14 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main601_8 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var3 var1))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main601_8_17 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var3 var1))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main_15 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main_23 var2 var1 var0) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main607_5 var3 var2 var1 var0) (not (is-O_node (read var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main608_8 var4 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main608_8_26 var4 var3 var2 var1 var0) (and (= var0 0) (not (is-O_node (read var4 var2))))))))
(check-sat)
