(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((HeapObject 0) (cell 0))
                   (((O_Int (getInt Int)) (O_Addr (getAddr Addr)) (O_cell (getcell cell)) (defObj))
                   ((cell (data Int) (next Addr)))))
(declare-datatypes ((AllocResHeap 0) (Heap 0))
                   (((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun valid     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun read ((h Heap) (p Addr)) HeapObject
  (ite (valid h p)
       (select (HeapContents h) p)
       defObj))
(define-fun write ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (valid h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun alloc   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))

;===============================================================================
(declare-fun inv_main0 (Heap Addr Int Int Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main16 (Heap Addr Int Int Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main18 (Heap Addr Int Int Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main2 (Heap Addr Int Int Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main20 (Heap Addr Int Int Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main22 (Heap Addr Int Int Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Int Int Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main42 (Heap Addr Int Int Addr Addr Addr Addr Addr Int Int) Bool)
(declare-fun inv_main51 (Heap Addr Int Int Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main60 (Heap Addr Int Int Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main64 (Heap Addr Int Int Addr Addr Addr Addr Addr Int Addr) Bool)
(declare-fun inv_main69 (Heap Addr Int Int Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main9 (Heap Addr Int Int Addr Addr Addr Addr Addr Int) Bool)
(assert (forall ((var0 Addr) (var1 Addr)) (inv_main2 emptyHeap var0 1 1 nullAddr nullAddr var1 nullAddr nullAddr)))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Addr) (var14 Addr) (var15 Heap) (var16 Addr) (var17 Int) (var18 Addr) (var19 Int) (var20 Addr)) (or (not (and (inv_main60 var8 var11 var12 var17 var3 var10 var14 var13 var2 var5) (and (and (and (and (and (and (and (and (and (and (= var15 var8) (= var9 var11)) (= var0 var12)) (= var1 var17)) (= var20 var3)) (= var16 var10)) (= var18 var14)) (= var7 var13)) (= var6 var2)) (= var19 var5)) (= var4 (data (getcell (read var8 var13))))))) (inv_main64 var15 var9 var0 var1 var20 var16 var18 var7 var6 var4 var18))))
(assert (forall ((var0 cell) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Addr) (var16 Addr) (var17 Int) (var18 Int) (var19 Addr) (var20 Int)) (or (not (and (inv_main16 var10 var12 var14 var18 var5 var11 var16 var15 var4 var9) (and (and (and (and (and (and (and (and (and (and (= var6 (newHeap (alloc var10 (O_cell var0)))) (= var19 var12)) (= var17 (+ var9 1))) (= var20 var18)) (= var3 var5)) (= var13 var11)) (= var2 var16)) (= var1 var15)) (= var7 var4)) (= var8 (newAddr (alloc var10 (O_cell var0))))) (= var9 1)))) (inv_main18 var6 var19 var17 var20 var3 var8 var2 var1 var7))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main9 var11 var2 var5 var8 var4 var1 var7 var6 var3 var10) (and (= var9 0) (not (= var10 0))))) (inv_main42 var11 var2 var5 var8 var4 var1 var7 var6 var3 var0 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (= var8 2))) (inv_main22 var9 var1 (+ var8 1) var7 var3 var0 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (= var8 5))) (inv_main60 var10 var1 var4 (+ var8 1) var3 var0 var7 var6 var2 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (= var8 1))) (inv_main2 var10 var1 var4 (+ var8 1) var3 var0 var7 var1 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Addr) (var16 Addr) (var17 Heap) (var18 Addr) (var19 Int) (var20 Addr)) (or (not (and (inv_main51 var8 var12 var14 var19 var1 var11 var16 var15 var0 var4) (and (and (and (and (and (and (and (and (and (and (= var17 var8) (= var3 var12)) (= var13 var14)) (= var6 var19)) (= var20 var1)) (= var18 var11)) (= var9 var16)) (= var5 var15)) (= var7 var0)) (= var2 var4)) (= var10 (next (getcell (read var8 var15))))))) (inv_main2 var17 var3 var13 var6 var20 var18 var9 var5 var10))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Int)) (or (not (and (inv_main64 var7 var11 var13 var20 var3 var10 var17 var15 var2 var4 var8) (and (and (and (and (and (and (and (and (and (= var9 (write var7 var15 (O_cell (cell (data (getcell (read var7 var15))) var8)))) (= var0 var11)) (= var1 var13)) (= var5 var20)) (= var16 var3)) (= var12 var10)) (= var6 var17)) (= var19 var15)) (= var18 var2)) (= var14 var4)))) (inv_main2 var9 var0 var1 1 var16 var12 var19 var19 var18))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (and (= var6 nullAddr) (= var8 2)))) (inv_main2 var10 var1 var4 1 var3 var0 var7 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (and (not (= var6 nullAddr)) (= var8 2)))) (inv_main2 var10 var1 var4 (+ var8 1) var3 var0 var7 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (and (= var1 var6) (= var8 4)))) (inv_main2 var10 var2 var4 (+ var8 1) var3 var0 var7 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (and (not (= var1 var6)) (= var8 4)))) (inv_main2 var10 var1 var4 1 var3 var0 var7 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Addr) (var8 Heap) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Int) (var13 Addr) (var14 Addr) (var15 Int) (var16 Addr) (var17 Int)) (or (not (and (inv_main20 var9 var11 var12 var15 var4 var10 var14 var13 var3) (and (and (and (and (and (and (and (and (= var8 (write var9 var10 (O_cell (cell (data (getcell (read var9 var10))) nullAddr)))) (= var0 var11)) (= var6 var12)) (= var17 var15)) (= var5 var4)) (= var1 var10)) (= var16 var14)) (= var2 var13)) (= var7 var3)))) (inv_main2 var8 var0 var6 var17 var5 var1 var16 var2 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Heap) (var16 Int) (var17 Int)) (or (not (and (inv_main22 var6 var9 var11 var16 var2 var8 var14 var13 var1) (and (and (and (and (and (and (and (and (= var15 (write var6 var8 (O_cell (cell 4 (next (getcell (read var6 var8))))))) (= var5 var9)) (= var17 var11)) (= var3 var16)) (= var12 var2)) (= var0 var8)) (= var10 var14)) (= var4 var13)) (= var7 var1)))) (inv_main2 var15 var5 var17 var3 var12 var0 var10 var4 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (= var8 3))) (inv_main2 var9 var1 (+ var8 1) var7 var1 var0 var6 var5 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Int) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Int)) (or (not (and (inv_main29 var7 var10 var12 var18 var3 var9 var14 var13 var2 var17) (and (and (and (and (and (and (and (and (= var5 (write var7 var9 (O_cell (cell (data (getcell (read var7 var9))) var17)))) (= var6 var10)) (= var0 var12)) (= var1 var18)) (= var11 var3)) (= var15 var9)) (= var16 var14)) (= var4 var13)) (= var8 var2)))) (inv_main2 var5 var6 var0 var1 var11 var15 var16 var4 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (= var8 6))) (inv_main2 var9 var1 1 var7 var3 var0 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (and (= var1 var3) (= var8 5)))) (inv_main2 var9 var0 (+ var8 1) var7 var3 var0 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (and (not (= var1 var3)) (= var8 5)))) (inv_main2 var9 var1 3 var7 var3 var0 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main9 var10 var1 var4 var8 var3 var0 var6 var5 var2 var9) (and (not (= var7 0)) (not (= var9 0))))) (inv_main16 var10 var1 var4 var8 var3 var0 var6 var5 var2 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (or (not (inv_main18 var8 var1 var4 var7 var3 var0 var6 var5 var2)) (inv_main20 (write var8 var0 (O_cell (cell 0 (next (getcell (read var8 var0)))))) var1 var4 var7 var3 var0 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Addr) (var28 Addr) (var29 Int) (var30 Int) (var31 Addr) (var32 Addr) (var33 Addr) (var34 Addr) (var35 Heap) (var36 Addr) (var37 Int) (var38 Addr) (var39 Addr) (var40 Heap) (var41 Addr) (var42 Addr) (var43 Heap) (var44 Addr) (var45 Int) (var46 Int) (var47 Int) (var48 Addr) (var49 Addr) (var50 Int) (var51 Addr) (var52 Int) (var53 Addr) (var54 Addr)) (or (not (and (inv_main9 var43 var20 var50 var30 var6 var19 var26 var24 var5 var15) (and (and (and (and (and (and (= var26 nullAddr) (and (and (and (and (and (and (and (and (= var2 var43) (= var53 nullAddr)) (= var1 var50)) (= var4 var30)) (= var17 var6)) (= var48 var19)) (= var42 var26)) (= var51 var24)) (= var13 var5))) (and (and (and (and (and (and (and (and (= var40 var2) (= var36 var53)) (= var16 var1)) (= var11 var4)) (= var49 nullAddr)) (= var18 var48)) (= var22 var42)) (= var32 var51)) (= var3 var13))) (and (and (and (and (and (and (and (and (= var35 var40) (= var8 var36)) (= var46 var16)) (= var29 var11)) (= var0 var49)) (= var28 nullAddr)) (= var25 var22)) (= var33 var32)) (= var12 var3))) (and (and (and (and (and (and (and (and (= var7 var35) (= var27 var8)) (= var52 var46)) (= var47 var29)) (= var31 var0)) (= var34 var28)) (= var44 var25)) (= var39 nullAddr)) (= var14 var12))) (and (and (and (and (and (and (and (and (= var10 var7) (= var21 var27)) (= var37 var52)) (= var45 var47)) (= var23 var31)) (= var38 var34)) (= var54 var44)) (= var9 var39)) (= var41 nullAddr))) (= var15 0)))) (and (or (not (not (= var54 nullAddr))) (inv_main0 var10 var21 var37 var45 var23 var38 var54 var9 var41 1)) (or (not (= var54 nullAddr)) (inv_main0 var10 var21 var37 var45 var23 var38 var54 var9 var41 0))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr) (var16 Heap) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Int) (var25 Addr) (var26 Addr) (var27 Int) (var28 Addr) (var29 Heap) (var30 Int) (var31 Addr) (var32 Addr) (var33 Int) (var34 Int) (var35 Int) (var36 Addr) (var37 Addr) (var38 Heap) (var39 Addr) (var40 Addr) (var41 Addr) (var42 Addr) (var43 Addr) (var44 Addr) (var45 Heap) (var46 Addr) (var47 Addr) (var48 Int) (var49 Addr) (var50 Int) (var51 Addr) (var52 Addr) (var53 Addr) (var54 Addr) (var55 Addr) (var56 Int) (var57 Addr) (var58 Int) (var59 Addr) (var60 Heap) (var61 Addr) (var62 Addr) (var63 Addr) (var64 Addr) (var65 Addr) (var66 Addr) (var67 Addr) (var68 Int) (var69 Int) (var70 Addr) (var71 Addr) (var72 Int) (var73 Addr)) (or (not (and (inv_main69 var29 var10 var35 var56 var4 var9 var53 var52 var43) (and (and (and (and (and (and (= var0 nullAddr) (and (and (and (and (and (and (and (and (= var38 var5) (= var44 nullAddr)) (= var12 var50)) (= var48 var72)) (= var14 var71)) (= var3 var6)) (= var55 var0)) (= var42 var39)) (= var22 var21))) (and (and (and (and (and (and (and (and (= var16 var38) (= var25 var44)) (= var58 var12)) (= var33 var48)) (= var70 nullAddr)) (= var65 var3)) (= var32 var55)) (= var66 var42)) (= var20 var22))) (and (and (and (and (and (and (and (and (= var45 var16) (= var51 var25)) (= var68 var58)) (= var24 var33)) (= var18 var70)) (= var26 nullAddr)) (= var67 var32)) (= var23 var66)) (= var57 var20))) (and (and (and (and (and (and (and (and (= var60 var45) (= var61 var51)) (= var13 var68)) (= var69 var24)) (= var62 var18)) (= var49 var26)) (= var28 var67)) (= var19 nullAddr)) (= var15 var57))) (and (and (and (and (and (and (and (and (= var1 var60) (= var64 var61)) (= var27 var13)) (= var11 var69)) (= var46 var62)) (= var31 var49)) (= var63 var28)) (= var7 var19)) (= var36 nullAddr))) (and (and (and (and (and (and (and (and (and (and (= var8 var29) (= var40 var10)) (= var34 var35)) (= var30 var56)) (= var37 var4)) (= var41 var9)) (= var47 var53)) (= var59 var52)) (= var17 var43)) (= var2 (next (getcell (read var29 var53))))) (and (and (and (and (and (and (and (and (and (= var5 (write var8 var47 defObj)) (= var54 var40)) (= var50 var34)) (= var72 var30)) (= var71 var37)) (= var6 var41)) (= var73 var47)) (= var39 var59)) (= var21 var17)) (= var0 var2)))))) (and (or (not (not (= var63 nullAddr))) (inv_main0 var1 var64 var27 var11 var46 var31 var63 var7 var36 1)) (or (not (= var63 nullAddr)) (inv_main0 var1 var64 var27 var11 var46 var31 var63 var7 var36 0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main9 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (and (not (= var6 nullAddr)) (= var8 0)))) (inv_main69 var9 var1 var4 var7 var3 var0 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Addr) (var18 Addr) (var19 Heap) (var20 Int) (var21 Int) (var22 Int) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Int) (var28 Addr)) (or (not (and (inv_main69 var19 var10 var22 var16 var4 var9 var13 var12 var3) (and (not (= var1 nullAddr)) (and (and (and (and (and (and (and (and (and (and (= var7 var19) (= var25 var10)) (= var21 var22)) (= var20 var16)) (= var24 var4)) (= var0 var9)) (= var8 var13)) (= var17 var12)) (= var14 var3)) (= var5 (next (getcell (read var19 var13))))) (and (and (and (and (and (and (and (and (and (= var2 (write var7 var8 defObj)) (= var15 var25)) (= var11 var21)) (= var27 var20)) (= var26 var24)) (= var6 var0)) (= var28 var8)) (= var23 var17)) (= var18 var14)) (= var1 var5)))))) (inv_main69 var2 var15 var11 var27 var26 var6 var1 var23 var18))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (= var8 4))) (inv_main29 var9 var1 (+ var8 1) var7 var3 var0 var6 var5 var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (= var8 3))) (inv_main51 var10 var1 var4 (+ var8 1) var3 var0 var7 var6 var2 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Addr) (var18 Int)) (or (not (and (inv_main2 var6 var10 var11 var16 var4 var9 var13 var12 var3) (and (not (= var0 0)) (and (and (and (and (and (and (and (and (and (= var5 var6) (= var14 var10)) (= var2 var11)) (= var18 var16)) (= var8 var4)) (= var7 var9)) (= var1 var13)) (= var17 var12)) (= var15 var3)) (or (and (not (= 1 var11)) (= var0 1)) (and (= 1 var11) (= var0 0))))))) (inv_main9 var5 var14 var2 var18 var8 var7 var1 var17 var15 1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Int) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Int) (var22 Addr) (var23 Addr) (var24 Heap) (var25 Addr) (var26 Addr) (var27 Int) (var28 Heap)) (or (not (and (inv_main2 var24 var11 var27 var16 var3 var10 var14 var13 var2) (and (not (= var17 0)) (and (and (= var15 0) (and (and (and (and (and (and (and (and (and (= var1 var24) (= var4 var11)) (= var8 var27)) (= var7 var16)) (= var25 var3)) (= var26 var10)) (= var19 var14)) (= var22 var13)) (= var9 var2)) (or (and (not (= 1 var27)) (= var15 1)) (and (= 1 var27) (= var15 0))))) (and (and (and (and (and (and (and (and (and (= var28 var1) (= var6 var4)) (= var21 var8)) (= var0 var7)) (= var23 var25)) (= var12 var26)) (= var5 var19)) (= var18 var22)) (= var20 var9)) (or (and (not (= 1 var7)) (= var17 1)) (and (= 1 var7) (= var17 0)))))))) (inv_main9 var28 var6 var21 var0 var23 var12 var5 var18 var20 1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Int) (var23 Addr) (var24 Addr) (var25 Heap) (var26 Addr) (var27 Addr) (var28 Int) (var29 Heap)) (or (not (and (inv_main2 var25 var12 var28 var17 var3 var11 var15 var14 var2) (and (= var18 0) (and (and (= var16 0) (and (and (and (and (and (and (and (and (and (= var1 var25) (= var4 var12)) (= var8 var28)) (= var7 var17)) (= var26 var3)) (= var27 var11)) (= var20 var15)) (= var23 var14)) (= var9 var2)) (or (and (not (= 1 var28)) (= var16 1)) (and (= 1 var28) (= var16 0))))) (and (and (and (and (and (and (and (and (and (= var29 var1) (= var6 var4)) (= var22 var8)) (= var0 var7)) (= var24 var26)) (= var13 var27)) (= var5 var20)) (= var19 var23)) (= var21 var9)) (or (and (not (= 1 var7)) (= var18 1)) (and (= 1 var7) (= var18 0)))))))) (inv_main9 var29 var6 var22 var0 var24 var13 var5 var19 var21 var10))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main18 var8 var1 var4 var7 var3 var0 var6 var5 var2) (not (is-O_cell (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main20 var8 var1 var4 var7 var3 var0 var6 var5 var2) (not (is-O_cell (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main22 var8 var1 var4 var7 var3 var0 var6 var5 var2) (not (is-O_cell (read var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (not (and (inv_main29 var9 var1 var4 var8 var3 var0 var6 var5 var2 var7) (not (is-O_cell (read var9 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (not (and (inv_main16 var9 var1 var4 var7 var3 var0 var6 var5 var2 var8) (and (and (and (and (and (not (= var8 1)) (not (= var8 2))) (not (= var8 3))) (not (= var8 4))) (not (= var8 5))) (not (= var8 6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (not (and (inv_main51 var9 var1 var4 var8 var3 var0 var7 var6 var2 var5) (not (is-O_cell (read var9 var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (not (and (inv_main60 var9 var1 var4 var8 var3 var0 var7 var6 var2 var5) (not (is-O_cell (read var9 var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr)) (not (and (inv_main64 var9 var1 var4 var8 var3 var0 var7 var6 var2 var5 var10) (not (is-O_cell (read var9 var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Heap)) (not (and (inv_main42 var10 var1 var4 var9 var3 var0 var7 var6 var2 var5 var8) (and (and (and (and (not (= var8 1)) (not (= var8 2))) (not (= var8 3))) (not (= var8 4))) (not (= var8 5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main69 var8 var1 var4 var7 var3 var0 var6 var5 var2) (not (is-O_cell (read var8 var6)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (not (and (inv_main0 var10 var2 var5 var9 var4 var1 var8 var6 var3 var0) (not (= (read var10 var7) defObj))))))
(check-sat)
