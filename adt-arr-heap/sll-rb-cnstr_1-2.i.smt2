(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (TSLL 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_TSLL (getTSLL TSLL))
   (defObj)
  )
  (
   (TSLL (next Addr) (colour Int))
  )
))
(declare-fun inv_main10 (Heap Addr Addr) Bool)
(declare-fun inv_main11 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main12 (Heap Addr Addr) Bool)
(declare-fun inv_main15 (Heap Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main19 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main20 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main21 (Heap Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr) Bool)
(declare-fun inv_main28 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main38 (Heap Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main41 (Heap Addr Addr) Bool)
(declare-fun inv_main44 (Heap Addr Addr) Bool)
(declare-fun inv_main46 (Heap Addr Addr) Bool)
(declare-fun inv_main51 (Heap Addr Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr) Bool)
(declare-fun inv_main53 (Heap Addr Addr) Bool)
(declare-fun inv_main56 (Heap Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Int)) (or (not (and (inv_main6 var5 var0 var1) (and (not (= nullAddr var4)) (and (= var6 0) (and (and (= var3 var5) (= var4 var0)) (= var2 nullAddr)))))) (inv_main26 var3 var4 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main52 var5 var0 var1) (and (and (and (= var4 var5) (= var2 var0)) (= var6 var1)) (= var3 (next (getTSLL (read var5 var0))))))) (inv_main56 (write var4 var2 defObj) var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main38 var2 var0 var1) (= (next (getTSLL (read var2 var1))) nullAddr))) (inv_main46 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main26 var2 var0 var1) (not (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main33 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main51 var2 var0 var1) (= 0 (colour (getTSLL (read var2 var0)))))) (inv_main52 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main44 var3 var0 var1) (and (not (= nullAddr var6)) (and (and (and (= var5 var3) (= var4 var0)) (= var2 var1)) (= var6 (next (getTSLL (read var3 var1)))))))) (inv_main37 var5 var4 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main26 var2 var0 var1) (and (not (= nullAddr var1)) (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main37 var2 var0 var1))))
(assert (forall ((var0 TSLL) (var1 Heap)) (or (not (inv_main2 var1)) (inv_main3 (newHeap (alloc var1 (O_TSLL var0))) (newAddr (alloc var1 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main38 var2 var0 var1) (not (= (next (getTSLL (read var2 var1))) nullAddr)))) (inv_main44 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr)) (or (not (and (inv_main19 var4 var0 var1) (and (and (and (= var5 var4) (= var6 var0)) (= var3 var1)) (= var2 (next (getTSLL (read var4 var1))))))) (inv_main21 var5 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap) (var5 TSLL) (var6 Addr)) (or (not (and (inv_main16 var4 var0 var1) (and (and (= var2 (write var4 var1 (O_TSLL (TSLL (next (getTSLL (read var4 var1))) 0)))) (= var6 var0)) (= var3 var1)))) (inv_main20 (newHeap (alloc var2 (O_TSLL var5))) var6 var3 (newAddr (alloc var2 (O_TSLL var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main11 var2 var0 var1 var3)) (inv_main10 (write var2 var1 (O_TSLL (TSLL var3 (colour (getTSLL (read var2 var1)))))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main37 var2 var0 var1) (= 0 (colour (getTSLL (read var2 var1)))))) (inv_main39 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main51 var2 var0 var1) (not (= 0 (colour (getTSLL (read var2 var0))))))) (inv_main53 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap)) (or (not (and (inv_main41 var6 var0 var1) (and (and (and (= var5 var6) (= var2 var0)) (= var4 var1)) (= var3 (next (getTSLL (read var6 var1))))))) (inv_main38 var5 var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main37 var2 var0 var1) (not (= 0 (colour (getTSLL (read var2 var1))))))) (inv_main38 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (inv_main20 var3 var0 var1 var2)) (inv_main19 (write var3 var1 (O_TSLL (TSLL var2 (colour (getTSLL (read var3 var1)))))) var0 var1))))
(assert (forall ((var0 TSLL) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int)) (or (not (and (inv_main6 var3 var1 var2) (not (= var4 0)))) (inv_main11 (newHeap (alloc var3 (O_TSLL var0))) var1 var2 (newAddr (alloc var3 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap)) (or (not (and (inv_main39 var4 var1 var2) (and (and (and (= var6 var4) (= var0 var1)) (= var3 var2)) (= var5 (next (getTSLL (read var4 var2))))))) (inv_main41 var6 var0 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Heap) (var9 Heap)) (or (not (and (inv_main56 var8 var1 var2) (and (and (not (= nullAddr var0)) (and (and (and (= var9 var8) (= var7 var1)) (= var5 var2)) (= var3 (next (getTSLL (read var8 var2)))))) (and (and (= var6 (write var9 var5 defObj)) (= var0 var3)) (= var4 var5))))) (inv_main51 var6 var0 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main53 var6 var0 var2) (and (not (= nullAddr var5)) (and (and (and (and (= var9 var6) (= var3 var0)) (= var7 var2)) (= var1 (next (getTSLL (read var6 var0))))) (and (and (= var4 (write var9 var3 defObj)) (= var8 var3)) (= var5 var1)))))) (inv_main51 var4 var5 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Addr)) (or (not (and (inv_main44 var3 var0 var1) (and (not (= nullAddr var5)) (and (= nullAddr var6) (and (and (and (= var4 var3) (= var5 var0)) (= var2 var1)) (= var6 (next (getTSLL (read var3 var1))))))))) (inv_main51 var4 var5 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main26 var2 var0 var1) (and (not (= nullAddr var0)) (and (= nullAddr var1) (= 1 (colour (getTSLL (read var2 var1)))))))) (inv_main51 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main21 var2 var0 var1)) (inv_main23 (write var2 var1 (O_TSLL (TSLL nullAddr (colour (getTSLL (read var2 var1)))))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL nullAddr (colour (getTSLL (read var1 var0)))))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr)) (or (not (and (inv_main10 var5 var0 var1) (and (and (and (= var2 var5) (= var4 var0)) (= var3 var1)) (= var6 (next (getTSLL (read var5 var1))))))) (inv_main12 var2 var4 var6))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap)) (or (not (and (inv_main12 var4 var1 var2) (and (= var0 0) (and (and (= var6 (write var4 var2 (O_TSLL (TSLL nullAddr (colour (getTSLL (read var4 var2))))))) (= var5 var1)) (= var3 var2))))) (inv_main16 var6 var5 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Int)) (or (not (and (inv_main6 var5 var0 var1) (and (= nullAddr var4) (and (= var6 0) (and (and (= var3 var5) (= var4 var0)) (= var2 nullAddr)))))) (inv_main28 var3 var4 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Heap)) (or (not (and (inv_main12 var4 var0 var1) (and (not (= var3 0)) (and (and (= var6 (write var4 var1 (O_TSLL (TSLL nullAddr (colour (getTSLL (read var4 var1))))))) (= var5 var0)) (= var2 var1))))) (inv_main15 var6 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main15 var2 var0 var1)) (inv_main6 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) 1))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (inv_main23 var2 var0 var1)) (inv_main6 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) 1))) var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr)) (or (not (and (inv_main4 var1 var0) (and (= var2 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) 1)))) (= var3 var0)))) (inv_main6 var2 var3 var3))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main11 var2 var0 var1 var3) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main10 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main12 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main15 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main16 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main20 var3 var0 var1 var2) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main19 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main21 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main23 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main28 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main26 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main33 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main37 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main39 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main41 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main38 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main46 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main44 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main51 var2 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main52 var2 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main56 var2 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main53 var2 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(check-sat)
