(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (next Addr) (prev Addr))
  )
))
(declare-fun inv_main0 (Heap Int) Bool)
(declare-fun inv_main12 (Heap Int Int Addr Int) Bool)
(declare-fun inv_main16 (Heap Int Int Addr) Bool)
(declare-fun inv_main18 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main26 (Heap Int Int Addr Addr Addr Int) Bool)
(declare-fun inv_main3 (Heap Int) Bool)
(declare-fun inv_main30 (Heap Int Int Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main40 (Heap Int Addr Addr) Bool)
(declare-fun inv_main43 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main8 (Heap Int Int Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main3 var0 3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main34 var9 var8 var7 var6 var5) (and (is-O_node (read var9 var5)) (and (and (and (and (= var4 (write var9 var5 (O_node (node (next (getnode (read var9 var5))) var6)))) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 var5))))) (inv_main40 var4 var3 var0 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (and (inv_main40 var3 var2 var1 var0) (is-O_node (read var3 var0)))) (inv_main43 var3 var2 var1 var0 (prev (getnode (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main22 var5 var4 var3 var2 var1 var0) (is-O_node (read var5 var0)))) (inv_main30 (write var5 var0 (O_node (node var1 (prev (getnode (read var5 var0)))))) var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (is-O_node (read var4 var1)))) (inv_main34 (write var4 var1 (O_node (node var0 (prev (getnode (read var4 var1)))))) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 node) (var3 Heap) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (inv_main3 var6 var5) (and (not (= nullAddr var4)) (and (and (and (= var3 (newHeap (alloc var6 (O_node var2)))) (= var1 var5)) (= var0 var5)) (= var4 (newAddr (alloc var6 (O_node var2)))))))) (inv_main8 var3 var1 var0 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 node) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main18 var11 var10 var9 var8 var7) (and (and (not (= nullAddr var6)) (and (and (and (and (and (= var5 (newHeap (alloc var11 (O_node var4)))) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var6 (newAddr (alloc var11 (O_node var4)))))) (<= 0 (+ (+ var9 (- 1)) (- 1)))))) (inv_main22 var5 var3 var2 var1 var0 var6))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (or (not (inv_main26 var6 var5 var4 var3 var2 var1 var0)) (inv_main26 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 node) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main18 var11 var10 var9 var8 var7) (and (and (= nullAddr var6) (and (and (and (and (and (= var5 (newHeap (alloc var11 (O_node var4)))) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var6 (newAddr (alloc var11 (O_node var4)))))) (<= 0 (+ (+ var9 (- 1)) (- 1)))))) (inv_main26 var5 var3 var2 var1 var0 var6 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (inv_main12 var4 var3 var2 var1 var0)) (inv_main12 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 node) (var3 Heap) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (inv_main3 var6 var5) (and (= nullAddr var4) (and (and (and (= var3 (newHeap (alloc var6 (O_node var2)))) (= var1 var5)) (= var0 var5)) (= var4 (newAddr (alloc var6 (O_node var2)))))))) (inv_main12 var3 var1 var0 var4 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main8 var3 var2 var1 var0) (is-O_node (read var3 var0)))) (inv_main16 (write var3 var0 (O_node (node var0 (prev (getnode (read var3 var0)))))) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Int) (var20 Heap) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Int) (var26 Heap) (var27 Int) (var28 Int) (var29 Addr) (var30 Addr) (var31 Addr) (var32 Int) (var33 Heap)) (or (not (and (inv_main43 var33 var32 var31 var30 var29) (and (and (and (and (not (= var28 0)) (and (and (not (= var27 0)) (and (is-O_node (read var33 var30)) (and (and (and (and (and (= var26 var33) (= var25 var32)) (= var24 var31)) (= var23 var30)) (= var22 var29)) (= var21 (next (getnode (read var33 var30))))))) (and (and (and (and (and (= var20 (write var26 var23 defObj)) (= var19 var25)) (= var18 var24)) (= var17 var23)) (= var16 var22)) (= var15 var21)))) (and (and (and (and (and (= var14 (write var20 var15 defObj)) (= var13 var19)) (= var12 var18)) (= var11 var17)) (= var10 var16)) (= var9 var15))) (and (and (and (and (and (= var8 (write var14 var10 defObj)) (= var7 var13)) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9))) (and (and (= var2 var8) (= var1 var7)) (= var0 nullAddr))))) (inv_main0 var2 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Int) (var20 Heap) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Int) (var26 Heap) (var27 Int) (var28 Int) (var29 Addr) (var30 Addr) (var31 Addr) (var32 Int) (var33 Heap)) (or (not (and (inv_main43 var33 var32 var31 var30 var29) (and (and (and (and (= var28 0) (and (and (not (= var27 0)) (and (is-O_node (read var33 var30)) (and (and (and (and (and (= var26 var33) (= var25 var32)) (= var24 var31)) (= var23 var30)) (= var22 var29)) (= var21 (next (getnode (read var33 var30))))))) (and (and (and (and (and (= var20 (write var26 var23 defObj)) (= var19 var25)) (= var18 var24)) (= var17 var23)) (= var16 var22)) (= var15 var21)))) (and (and (and (and (and (= var14 (write var20 var16 defObj)) (= var13 var19)) (= var12 var18)) (= var11 var17)) (= var10 var16)) (= var9 var15))) (and (and (and (and (and (= var8 (write var14 var9 defObj)) (= var7 var13)) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9))) (and (and (= var2 var8) (= var1 var7)) (= var0 nullAddr))))) (inv_main0 var2 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Int) (var20 Heap) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Int) (var26 Heap) (var27 Int) (var28 Int) (var29 Int) (var30 Addr) (var31 Addr) (var32 Addr) (var33 Int) (var34 Heap)) (or (not (and (inv_main43 var34 var33 var32 var31 var30) (and (and (and (and (not (= var29 0)) (and (and (not (= var28 0)) (and (= var27 0) (and (is-O_node (read var34 var31)) (and (and (and (and (and (= var26 var34) (= var25 var33)) (= var24 var32)) (= var23 var31)) (= var22 var30)) (= var21 (next (getnode (read var34 var31)))))))) (and (and (and (and (and (= var20 (write var26 var21 defObj)) (= var19 var25)) (= var18 var24)) (= var17 var23)) (= var16 var22)) (= var15 var21)))) (and (and (and (and (and (= var14 (write var20 var17 defObj)) (= var13 var19)) (= var12 var18)) (= var11 var17)) (= var10 var16)) (= var9 var15))) (and (and (and (and (and (= var8 (write var14 var10 defObj)) (= var7 var13)) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9))) (and (and (= var2 var8) (= var1 var7)) (= var0 nullAddr))))) (inv_main0 var2 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Int) (var20 Heap) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Int) (var26 Heap) (var27 Int) (var28 Int) (var29 Int) (var30 Addr) (var31 Addr) (var32 Addr) (var33 Int) (var34 Heap)) (or (not (and (inv_main43 var34 var33 var32 var31 var30) (and (and (and (and (= var29 0) (and (and (not (= var28 0)) (and (= var27 0) (and (is-O_node (read var34 var31)) (and (and (and (and (and (= var26 var34) (= var25 var33)) (= var24 var32)) (= var23 var31)) (= var22 var30)) (= var21 (next (getnode (read var34 var31)))))))) (and (and (and (and (and (= var20 (write var26 var21 defObj)) (= var19 var25)) (= var18 var24)) (= var17 var23)) (= var16 var22)) (= var15 var21)))) (and (and (and (and (and (= var14 (write var20 var16 defObj)) (= var13 var19)) (= var12 var18)) (= var11 var17)) (= var10 var16)) (= var9 var15))) (and (and (and (and (and (= var8 (write var14 var11 defObj)) (= var7 var13)) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9))) (and (and (= var2 var8) (= var1 var7)) (= var0 nullAddr))))) (inv_main0 var2 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Int) (var20 Heap) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Int) (var26 Heap) (var27 Int) (var28 Int) (var29 Int) (var30 Addr) (var31 Addr) (var32 Addr) (var33 Int) (var34 Heap)) (or (not (and (inv_main43 var34 var33 var32 var31 var30) (and (and (and (and (not (= var29 0)) (and (and (= var28 0) (and (= var27 0) (and (is-O_node (read var34 var31)) (and (and (and (and (and (= var26 var34) (= var25 var33)) (= var24 var32)) (= var23 var31)) (= var22 var30)) (= var21 (next (getnode (read var34 var31)))))))) (and (and (and (and (and (= var20 (write var26 var22 defObj)) (= var19 var25)) (= var18 var24)) (= var17 var23)) (= var16 var22)) (= var15 var21)))) (and (and (and (and (and (= var14 (write var20 var17 defObj)) (= var13 var19)) (= var12 var18)) (= var11 var17)) (= var10 var16)) (= var9 var15))) (and (and (and (and (and (= var8 (write var14 var9 defObj)) (= var7 var13)) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9))) (and (and (= var2 var8) (= var1 var7)) (= var0 nullAddr))))) (inv_main0 var2 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Int) (var20 Heap) (var21 Int) (var22 Int) (var23 Int) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Int) (var28 Heap)) (or (not (and (inv_main43 var28 var27 var26 var25 var24) (and (and (and (= var23 0) (and (and (= var22 0) (and (= var21 0) (and (is-O_node (read var28 var25)) (and (and (and (and (and (= var20 var28) (= var19 var27)) (= var18 var26)) (= var17 var25)) (= var16 var24)) (= var15 (next (getnode (read var28 var25)))))))) (and (and (and (and (and (= var14 (write var20 var16 defObj)) (= var13 var19)) (= var12 var18)) (= var11 var17)) (= var10 var16)) (= var9 var15)))) (and (and (and (and (and (= var8 (write var14 var11 defObj)) (= var7 var13)) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9))) (and (and (= var2 var8) (= var1 var7)) (= var0 nullAddr))))) (inv_main0 var2 0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main18 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var2 (- 1)) (- 1)))))) (inv_main19 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main30 var11 var10 var9 var8 var7 var6) (and (is-O_node (read var11 var7)) (and (and (and (and (and (= var5 (write var11 var7 (O_node (node (next (getnode (read var11 var7))) var6)))) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6))))) (inv_main18 var5 var4 (+ var3 (- 1)) var2 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main16 var7 var6 var5 var4) (and (is-O_node (read var7 var4)) (and (and (and (= var3 (write var7 var4 (O_node (node (next (getnode (read var7 var4))) var4)))) (= var2 var6)) (= var1 var5)) (= var0 var4))))) (inv_main18 var3 var2 var1 var0 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main16 var3 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main22 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var5 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main30 var5 var4 var3 var2 var1 var0) (not (is-O_node (read var5 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main19 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main34 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap)) (not (and (inv_main40 var3 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap)) (not (and (inv_main0 var2 var1) (not (= (read var2 var0) defObj))))))
(check-sat)
