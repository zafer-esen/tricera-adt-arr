(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (data Int) (next Addr))
  )
))
(declare-fun inv_main10 (Heap Int Int Int Int Addr) Bool)
(declare-fun inv_main17 (Heap Int Int Int Int Addr Int Addr) Bool)
(declare-fun inv_main20 (Heap Int Int Int Int Addr Int Addr Int) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Int Addr) Bool)
(declare-fun inv_main25 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main39 (Heap Int Int Addr Int Int Int Addr Int) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main42 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main44 (Heap Int Int Addr Int Int Addr) Bool)
(declare-fun inv_main47 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main49 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main50 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main65 (Heap Int Int Addr Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Heap) (var10 Int) (var11 node) (var12 Int) (var13 Heap) (var14 Int)) (or (not (and (inv_main10 var9 var4 var7 var6 var14 var3) (and (and (not (= nullAddr var8)) (and (and (and (and (and (and (and (= var13 (newHeap (alloc var9 (O_node var11)))) (= var2 var4)) (= var10 var7)) (= var0 var6)) (= var12 var14)) (= var5 var3)) (= var1 var14)) (= var8 (newAddr (alloc var9 (O_node var11)))))) (<= 0 (+ var6 (- 1)))))) (inv_main17 var13 var2 var10 var0 var12 var5 var1 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (inv_main49 var5 var3 var4 var1 var2 var0)) (inv_main50 var5 var3 var4 var1 var2 var0 (next (getnode (read var5 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (or (not (inv_main39 var7 var4 var5 var0 var2 var6 var8 var1 var3)) (inv_main39 var7 var4 var5 var0 var2 var6 var8 var1 var3))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Heap) (var10 Int) (var11 Int) (var12 Int) (var13 node) (var14 Int)) (or (not (and (inv_main10 var9 var4 var7 var6 var14 var3) (and (and (= nullAddr var8) (and (and (and (and (and (and (and (= var0 (newHeap (alloc var9 (O_node var13)))) (= var1 var4)) (= var5 var7)) (= var2 var3)) (= var12 3)) (= var11 var7)) (= var10 var7)) (= var8 (newAddr (alloc var9 (O_node var13)))))) (not (<= 0 (+ var6 (- 1))))))) (inv_main39 var0 var1 var5 var2 var12 var11 var10 var8 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (inv_main17 var7 var1 var5 var4 var6 var0 var3 var2)) (inv_main23 (write var7 var2 (O_node (node (data (getnode (read var7 var2))) nullAddr))) var1 var5 var4 var6 var0 var3 var2))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Int) (var11 Int) (var12 Addr) (var13 Addr) (var14 Int) (var15 Int)) (or (not (and (inv_main42 var9 var3 var7 var12 var14 var8 var15 var13) (and (and (and (and (and (and (and (= var0 (write var9 var13 (O_node (node var15 (next (getnode (read var9 var13))))))) (= var2 var3)) (= var6 var7)) (= var5 var12)) (= var10 var14)) (= var11 var8)) (= var4 var15)) (= var1 var13)))) (inv_main44 var0 var2 var6 var5 var10 var11 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Addr) (var14 Int) (var15 Int)) (or (not (and (inv_main23 var9 var4 var7 var6 var15 var3 var5 var13) (and (and (and (and (and (and (and (= var10 (write var9 var13 (O_node (node var5 (next (getnode (read var9 var13))))))) (= var1 var4)) (= var11 var7)) (= var0 var6)) (= var12 var15)) (= var2 var3)) (= var14 var5)) (= var8 var13)))) (inv_main25 var10 var1 var11 var0 var12 var2 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Addr) (var12 Int) (var13 Addr) (var14 Int) (var15 Addr) (var16 Addr) (var17 Int) (var18 Int) (var19 Addr) (var20 Int) (var21 Addr) (var22 Addr)) (or (not (and (inv_main62 var9 var6 var8 var15 var19 var14 var13) (and (not (= var5 nullAddr)) (and (and (and (and (and (and (and (and (= var10 var9) (= var4 var6)) (= var17 var8)) (= var3 var15)) (= var21 var19)) (= var12 var14)) (= var16 var13)) (= var11 (next (getnode (read var9 var13))))) (and (and (and (and (and (and (and (= var2 (write var10 var16 defObj)) (= var20 var4)) (= var18 var17)) (= var0 var3)) (= var22 var21)) (= var7 var12)) (= var1 var16)) (= var5 var11)))))) (inv_main62 var2 var20 var18 var0 var22 var7 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main47 var5 var3 var4 var1 var2 var0) (and (not (= var1 nullAddr)) (and (= var0 (+ 1 var3)) (= var2 nullAddr))))) (inv_main62 var5 var3 var4 var1 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Addr) (var9 Int) (var10 Int) (var11 Addr) (var12 Int) (var13 node) (var14 Int)) (or (not (and (inv_main10 var7 var2 var6 var5 var14 var0) (and (and (not (= nullAddr var11)) (and (and (and (and (and (and (and (= var3 (newHeap (alloc var7 (O_node var13)))) (= var10 var2)) (= var12 var6)) (= var8 var0)) (= var1 3)) (= var4 var6)) (= var9 var6)) (= var11 (newAddr (alloc var7 (O_node var13)))))) (not (<= 0 (+ var5 (- 1))))))) (inv_main36 var3 var10 var12 var8 var1 var4 var9 var11))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main47 var5 var3 var4 var1 var2 var0) (not (= var2 nullAddr)))) (inv_main49 var5 var3 var4 var1 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main50 var6 var4 var5 var1 var3 var0 var2) (not (= var5 (data (getnode (read var6 var3))))))) (inv_main65 var6 var4 var5 var1 var3 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main47 var5 var3 var4 var1 var2 var0) (and (not (= var0 (+ 1 var3))) (= var2 nullAddr)))) (inv_main65 var5 var3 var4 var1 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (or (not (inv_main36 var6 var3 var4 var0 var2 var5 var7 var1)) (inv_main42 (write var6 var1 (O_node (node (data (getnode (read var6 var1))) nullAddr))) var3 var4 var0 var2 var5 var7 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (inv_main20 var8 var2 var6 var5 var7 var1 var4 var3 var0)) (inv_main20 var8 var2 var6 var5 var7 var1 var4 var3 var0))))
(assert (forall ((var0 node) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Heap) (var12 Int) (var13 Int) (var14 Addr)) (or (not (and (inv_main10 var10 var6 var9 var8 var13 var4) (and (and (= nullAddr var14) (and (and (and (and (and (and (and (= var11 (newHeap (alloc var10 (O_node var0)))) (= var3 var6)) (= var2 var9)) (= var1 var8)) (= var7 var13)) (= var5 var4)) (= var12 var13)) (= var14 (newAddr (alloc var10 (O_node var0)))))) (<= 0 (+ var8 (- 1)))))) (inv_main20 var11 var3 var2 var1 var7 var5 var12 var14 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main50 var6 var4 var5 var1 var3 var0 var2) (= var5 (data (getnode (read var6 var3)))))) (inv_main47 var6 var4 var5 var1 var2 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Addr)) (or (not (and (inv_main44 var8 var3 var6 var10 var11 var7 var1) (and (and (and (and (and (and (= var4 (write var8 var1 (O_node (node (data (getnode (read var8 var1))) var10)))) (= var9 var3)) (= var12 var6)) (= var13 var10)) (= var0 var11)) (= var2 var7)) (= var5 var1)))) (inv_main47 var4 var9 var12 var5 var5 0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Heap) (var13 Int)) (or (not (and (inv_main25 var7 var4 var6 var5 var13 var2 var3) (and (and (and (and (and (and (= var12 (write var7 var3 (O_node (node (data (getnode (read var7 var3))) var2)))) (= var9 var4)) (= var8 var6)) (= var11 var5)) (= var0 var13)) (= var10 var2)) (= var1 var3)))) (inv_main10 var12 var9 var8 (+ var11 (- 1)) var0 var1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Int)) (or (not (and (inv_main4 var7 var4 var6) (and (and (and (and (and (= var1 var7) (= var0 var4)) (= var8 var6)) (= var3 var4)) (= var2 var6)) (= var5 nullAddr)))) (inv_main10 var1 var0 var8 var3 var2 var5))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main17 var7 var1 var5 var4 var6 var0 var3 var2) (not (is-O_node (read var7 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main23 var7 var1 var5 var4 var6 var0 var3 var2) (not (is-O_node (read var7 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main25 var6 var2 var4 var3 var5 var0 var1) (not (is-O_node (read var6 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (not (and (inv_main36 var6 var3 var4 var0 var2 var5 var7 var1) (not (is-O_node (read var6 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (not (and (inv_main42 var6 var3 var4 var0 var2 var5 var7 var1) (not (is-O_node (read var6 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main44 var6 var3 var4 var1 var2 var5 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main49 var5 var3 var4 var1 var2 var0) (not (is-O_node (read var5 var2)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main50 var6 var4 var5 var1 var3 var0 var2) (not (is-O_node (read var6 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main62 var6 var4 var5 var2 var3 var1 var0) (not (is-O_node (read var6 var0)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (not (inv_main65 var5 var3 var4 var1 var2 var0))))
(check-sat)
