(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (data Int) (next Addr) (prev Addr))
  )
))
(declare-fun inv_main12 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Addr Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main34 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main37 (Heap Int Int Addr Int Int Int Addr Int) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main40 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main41 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main43 (Heap Int Int Addr Int Int Addr) Bool)
(declare-fun inv_main46 (Heap Int Int Addr Int Int Addr) Bool)
(declare-fun inv_main49 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main51 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main52 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main64 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main67 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main8 (Heap Int Int Int Int Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Addr) (var13 Int) (var14 Addr) (var15 Int)) (or (not (and (inv_main41 var1 var7 var3 var14 var15 var9 var8 var12) (and (and (and (and (and (and (and (= var10 (write var1 var12 (O_node (node var8 (next (getnode (read var1 var12))) (prev (getnode (read var1 var12))))))) (= var11 var7)) (= var0 var3)) (= var2 var14)) (= var13 var15)) (= var6 var9)) (= var4 var8)) (= var5 var12)))) (inv_main43 var10 var11 var0 var2 var13 var6 var5))))
(assert (forall ((var0 Heap) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Int)) (or (not (and (inv_main43 var1 var5 var2 var12 var13 var6 var4) (and (not (= var7 nullAddr)) (and (and (and (and (and (and (= var0 (write var1 var4 (O_node (node (data (getnode (read var1 var4))) var12 (prev (getnode (read var1 var4))))))) (= var3 var5)) (= var9 var2)) (= var7 var12)) (= var11 var13)) (= var10 var6)) (= var8 var4))))) (inv_main46 var0 var3 var9 var7 var11 var10 var8))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Heap) (var14 Addr) (var15 Int) (var16 Int) (var17 Heap) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Int) (var22 Addr)) (or (not (and (inv_main64 var3 var12 var5 var19 var1 var2 var14) (and (not (= var20 nullAddr)) (and (and (and (and (and (and (and (and (= var17 var3) (= var16 var12)) (= var7 var5)) (= var22 var19)) (= var18 var1)) (= var11 var2)) (= var4 var14)) (= var6 (next (getnode (read var3 var14))))) (and (and (and (and (and (and (and (= var13 (write var17 var4 defObj)) (= var0 var16)) (= var15 var7)) (= var8 var22)) (= var10 var18)) (= var21 var11)) (= var9 var4)) (= var20 var6)))))) (inv_main64 var13 var0 var15 var8 var10 var21 var20))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int)) (or (not (and (inv_main49 var2 var5 var3 var4 var0 var1) (and (not (= var4 nullAddr)) (and (= var1 (+ 1 var5)) (= var0 nullAddr))))) (inv_main64 var2 var5 var3 var4 var0 var1 var4))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main12 var1 var6 var2 var4 var0 var3 var5)) (inv_main18 (write var1 var5 (O_node (node var0 (next (getnode (read var1 var5))) (prev (getnode (read var1 var5)))))) var6 var2 var4 var0 var3 var5))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int)) (or (not (inv_main51 var2 var5 var3 var4 var0 var1)) (inv_main52 var2 var5 var3 var4 var0 var1 (next (getnode (read var2 var0)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main18 var1 var6 var2 var4 var0 var3 var5)) (inv_main19 (write var1 var5 (O_node (node (data (getnode (read var1 var5))) var3 (prev (getnode (read var1 var5)))))) var6 var2 var4 var0 var3 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int)) (or (not (inv_main40 var2 var7 var3 var5 var6 var1 var0 var4)) (inv_main41 (write var2 var4 (O_node (node (data (getnode (read var2 var4))) (next (getnode (read var2 var4))) nullAddr))) var7 var3 var5 var6 var1 var0 var4))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Heap) (var3 Addr) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Addr)) (or (not (and (inv_main19 var2 var10 var4 var7 var1 var6 var13) (and (not (= var12 nullAddr)) (and (and (and (and (and (and (= var0 (write var2 var13 (O_node (node (data (getnode (read var2 var13))) (next (getnode (read var2 var13))) nullAddr)))) (= var5 var10)) (= var9 var4)) (= var8 var7)) (= var11 var1)) (= var12 var6)) (= var3 var13))))) (inv_main22 var0 var5 var9 var8 var11 var12 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int)) (or (not (inv_main34 var2 var7 var3 var5 var6 var1 var0 var4)) (inv_main40 (write var2 var4 (O_node (node (data (getnode (read var2 var4))) nullAddr (prev (getnode (read var2 var4)))))) var7 var3 var5 var6 var1 var0 var4))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Addr) (var13 Addr)) (or (not (and (inv_main22 var5 var9 var6 var8 var2 var7 var13) (and (and (and (and (and (and (= var0 (write var5 var7 (O_node (node (data (getnode (read var5 var7))) (next (getnode (read var5 var7))) var13)))) (= var1 var9)) (= var11 var6)) (= var4 var8)) (= var3 var2)) (= var10 var7)) (= var12 var13)))) (inv_main8 var0 var1 var11 (+ var4 (- 1)) var3 var12))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Heap) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Addr)) (or (not (and (inv_main19 var2 var8 var3 var7 var1 var6 var13) (and (= var0 nullAddr) (and (and (and (and (and (and (= var5 (write var2 var13 (O_node (node (data (getnode (read var2 var13))) (next (getnode (read var2 var13))) nullAddr)))) (= var9 var8)) (= var11 var3)) (= var4 var7)) (= var10 var1)) (= var0 var6)) (= var12 var13))))) (inv_main8 var5 var9 var11 (+ var4 (- 1)) var10 var12))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Int)) (or (not (inv_main4 var0 var2 var1)) (inv_main8 var0 var2 var1 var2 var1 nullAddr))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Addr) (var13 node)) (or (not (and (inv_main8 var3 var9 var5 var7 var2 var6) (and (and (not (= nullAddr var12)) (and (and (and (and (and (and (= var10 (newHeap (alloc var3 (O_node var13)))) (= var0 var9)) (= var8 var5)) (= var1 var7)) (= var11 var2)) (= var4 var6)) (= var12 (newAddr (alloc var3 (O_node var13)))))) (<= 0 (+ var7 (- 1)))))) (inv_main12 var10 var0 var8 var1 var11 var4 var12))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int)) (or (not (and (inv_main49 var2 var5 var3 var4 var0 var1) (not (= var0 nullAddr)))) (inv_main51 var2 var5 var3 var4 var0 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 node) (var14 Heap)) (or (not (and (inv_main8 var3 var9 var4 var7 var1 var6) (and (and (not (= nullAddr var0)) (and (and (and (and (and (and (and (= var14 (newHeap (alloc var3 (O_node var13)))) (= var12 var9)) (= var2 var4)) (= var10 var6)) (= var11 3)) (= var5 var4)) (= var8 var4)) (= var0 (newAddr (alloc var3 (O_node var13)))))) (not (<= 0 (+ var7 (- 1))))))) (inv_main34 var14 var12 var2 var10 var11 var5 var8 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main52 var3 var6 var4 var5 var1 var2 var0) (= var4 (data (getnode (read var3 var1)))))) (inv_main49 var3 var6 var4 var5 var0 (+ var2 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Heap) (var13 Addr)) (or (not (and (inv_main46 var2 var6 var3 var9 var10 var7 var5) (and (and (and (and (and (and (= var12 (write var2 var9 (O_node (node (data (getnode (read var2 var9))) (next (getnode (read var2 var9))) var5)))) (= var11 var6)) (= var4 var3)) (= var13 var9)) (= var8 var10)) (= var1 var7)) (= var0 var5)))) (inv_main49 var12 var11 var4 var0 var0 0))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int)) (or (not (and (inv_main43 var0 var6 var1 var12 var13 var8 var2) (and (= var11 nullAddr) (and (and (and (and (and (and (= var4 (write var0 var2 (O_node (node (data (getnode (read var0 var2))) var12 (prev (getnode (read var0 var2))))))) (= var3 var6)) (= var5 var1)) (= var11 var12)) (= var9 var13)) (= var7 var8)) (= var10 var2))))) (inv_main49 var4 var3 var5 var10 var10 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Addr) (var7 Int)) (or (not (inv_main15 var2 var7 var3 var5 var0 var4 var6 var1)) (inv_main15 var2 var7 var3 var5 var0 var4 var6 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 node)) (or (not (and (inv_main8 var3 var11 var4 var8 var2 var7) (and (and (= nullAddr var6) (and (and (and (and (and (and (= var5 (newHeap (alloc var3 (O_node var13)))) (= var1 var11)) (= var10 var4)) (= var12 var8)) (= var0 var2)) (= var9 var7)) (= var6 (newAddr (alloc var3 (O_node var13)))))) (<= 0 (+ var8 (- 1)))))) (inv_main15 var5 var1 var10 var12 var0 var9 var6 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main52 var3 var6 var4 var5 var1 var2 var0) (not (= var4 (data (getnode (read var3 var1))))))) (inv_main67 var3 var6 var4 var5 var1 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int)) (or (not (and (inv_main49 var2 var5 var3 var4 var0 var1) (and (not (= var1 (+ 1 var5))) (= var0 nullAddr)))) (inv_main67 var2 var5 var3 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int)) (or (not (inv_main37 var3 var8 var4 var6 var7 var1 var0 var5 var2)) (inv_main37 var3 var8 var4 var6 var7 var1 var0 var5 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 node)) (or (not (and (inv_main8 var2 var11 var3 var7 var1 var6) (and (and (= nullAddr var8) (and (and (and (and (and (and (and (= var4 (newHeap (alloc var2 (O_node var14)))) (= var5 var11)) (= var13 var3)) (= var12 var6)) (= var10 3)) (= var9 var3)) (= var0 var3)) (= var8 (newAddr (alloc var2 (O_node var14)))))) (not (<= 0 (+ var7 (- 1))))))) (inv_main37 var4 var5 var13 var12 var10 var9 var0 var8 1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main12 var1 var6 var2 var4 var0 var3 var5) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main18 var1 var6 var2 var4 var0 var3 var5) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main19 var1 var6 var2 var4 var0 var3 var5) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main22 var1 var6 var2 var4 var0 var3 var5) (not (is-O_node (read var1 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main34 var2 var7 var3 var5 var6 var1 var0 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main40 var2 var7 var3 var5 var6 var1 var0 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main41 var2 var7 var3 var5 var6 var1 var0 var4) (not (is-O_node (read var2 var4)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main43 var1 var6 var2 var4 var5 var0 var3) (not (is-O_node (read var1 var3)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main46 var1 var6 var2 var4 var5 var0 var3) (not (is-O_node (read var1 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int)) (not (and (inv_main51 var2 var5 var3 var4 var0 var1) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main52 var3 var6 var4 var5 var1 var2 var0) (not (is-O_node (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main64 var3 var6 var4 var5 var1 var2 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int)) (not (inv_main67 var2 var5 var3 var4 var0 var1))))
(check-sat)
