(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (TSLL 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_TSLL (getTSLL TSLL))
   (defObj)
  )
  (
   (TSLL (next Addr) (prev Addr) (colour Int))
  )
))
(declare-fun inv_main11 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main15 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main17 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main18 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main21 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main22 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main27 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main28 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main43 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main48 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr) Bool)
(declare-fun inv_main50 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main55 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main59 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main60 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main61 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main65 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main67 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main7 (Heap Addr Addr) Bool)
(declare-fun inv_main71 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main76 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main77 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main78 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main8 (Heap Addr Addr) Bool)
(declare-fun inv_main81 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main9 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main29 var2 var3 var0 var1)) (inv_main31 (write var2 var1 (O_TSLL (TSLL var3 (prev (getTSLL (read var2 var1))) (colour (getTSLL (read var2 var1)))))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main32 var2 var3 var0 var1) (not (= var3 (next (getTSLL (read var2 var1))))))) (inv_main39 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main32 var2 var3 var0 var1) (and (= var3 var1) (= var3 (next (getTSLL (read var2 var1))))))) (inv_main43 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main21 var2 var3 var0 var1) (not (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main34 var2 var3 var0 var1))))
(assert (forall ((var0 TSLL) (var1 Heap)) (or (not (inv_main2 var1)) (inv_main3 (newHeap (alloc var1 (O_TSLL var0))) (newAddr (alloc var1 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main76 var2 var3 var0 var1) (not (= 0 (colour (getTSLL (read var2 var0))))))) (inv_main78 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Addr)) (or (not (and (inv_main77 var5 var6 var0 var1) (and (and (and (and (= var7 var5) (= var8 var6)) (= var2 var0)) (= var4 var1)) (= var3 (next (getTSLL (read var5 var0))))))) (inv_main81 (write var7 var2 defObj) var8 var2 var3))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main3 var0 var1)) (inv_main4 (write var0 var1 (O_TSLL (TSLL nullAddr (prev (getTSLL (read var0 var1))) (colour (getTSLL (read var0 var1)))))) var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Addr) (var12 Addr)) (or (not (and (inv_main81 var6 var9 var2 var3) (and (and (not (= var11 var0)) (and (and (and (and (= var10 var6) (= var5 var9)) (= var8 var2)) (= var1 var3)) (= var12 (next (getTSLL (read var6 var3)))))) (and (and (and (= var4 (write var10 var1 defObj)) (= var11 var5)) (= var0 var12)) (= var7 var1))))) (inv_main76 var4 var11 var0 var7))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr)) (or (not (and (inv_main78 var6 var9 var1 var2) (and (not (= var12 var7)) (and (and (and (and (and (= var0 var6) (= var4 var9)) (= var10 var1)) (= var5 var2)) (= var8 (next (getTSLL (read var6 var1))))) (and (and (and (= var3 (write var0 var10 defObj)) (= var12 var4)) (= var11 var10)) (= var7 var8)))))) (inv_main76 var3 var12 var7 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main60 var4 var6 var1 var2) (and (not (= var8 var7)) (and (= var8 var5) (and (and (and (and (= var3 var4) (= var8 var6)) (= var7 var1)) (= var0 var2)) (= var5 (next (getTSLL (read var4 var2))))))))) (inv_main76 var3 var8 var7 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main48 var2 var3 var0 var1) (and (not (= var3 var0)) (and (= var3 var1) (= 1 (colour (getTSLL (read var2 var1)))))))) (inv_main76 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main60 var4 var6 var1 var2) (and (not (= var8 var5)) (and (and (and (and (= var3 var4) (= var8 var6)) (= var7 var1)) (= var0 var2)) (= var5 (next (getTSLL (read var4 var2)))))))) (inv_main59 var3 var8 var7 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main48 var2 var3 var0 var1) (and (not (= var3 var1)) (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main59 var2 var3 var0 var1))))
(assert (forall ((var0 Heap) (var1 Addr)) (or (not (inv_main4 var0 var1)) (inv_main5 (write var0 var1 (O_TSLL (TSLL (next (getTSLL (read var0 var1))) nullAddr (colour (getTSLL (read var0 var1)))))) var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main17 var3 var6 var1 var2) (and (and (and (and (= var8 var3) (= var7 var6)) (= var5 var1)) (= var4 var2)) (= var0 (next (getTSLL (read var3 var2))))))) (inv_main18 var8 var7 var5 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main26 var2 var3 var0 var1)) (inv_main28 (write var2 (next (getTSLL (read var2 var1))) (O_TSLL (TSLL (next (getTSLL (read var2 (next (getTSLL (read var2 var1)))))) var1 (colour (getTSLL (read var2 (next (getTSLL (read var2 var1))))))))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main18 var3 var5 var0 var1) (and (= var2 0) (and (and (and (= var4 (write var3 var1 (O_TSLL (TSLL var5 (prev (getTSLL (read var3 var1))) (colour (getTSLL (read var3 var1))))))) (= var8 var5)) (= var7 var0)) (= var6 var1))))) (inv_main23 var4 var8 var7 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr)) (or (not (and (inv_main11 var2 var4 var0 var1) (and (not (= var4 var0)) (= var3 0)))) (inv_main48 var2 var4 var0 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main7 var1 var2 var0)) (inv_main8 (write var1 var0 (O_TSLL (TSLL var2 (prev (getTSLL (read var1 var0))) (colour (getTSLL (read var1 var0)))))) var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main65 var2 var3 var0 var1) (not (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main71 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 TSLL) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main23 var5 var7 var1 var2) (and (and (and (= var8 (write var5 var2 (O_TSLL (TSLL (next (getTSLL (read var5 var2))) (prev (getTSLL (read var5 var2))) 0)))) (= var6 var7)) (= var0 var1)) (= var3 var2)))) (inv_main27 (newHeap (alloc var8 (O_TSLL var4))) var6 var0 var3 (newAddr (alloc var8 (O_TSLL var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (inv_main27 var2 var3 var0 var1 var4)) (inv_main26 (write var2 var1 (O_TSLL (TSLL var4 (prev (getTSLL (read var2 var1))) (colour (getTSLL (read var2 var1)))))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main59 var2 var3 var0 var1) (not (= 0 (colour (getTSLL (read var2 var1))))))) (inv_main60 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main65 var2 var3 var0 var1) (= 1 (colour (getTSLL (read var2 var1)))))) (inv_main60 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main21 var2 var3 var0 var1) (= 1 (colour (getTSLL (read var2 var1)))))) (inv_main32 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (inv_main16 var2 var3 var0 var1 var4)) (inv_main15 (write var2 var1 (O_TSLL (TSLL var4 (prev (getTSLL (read var2 var1))) (colour (getTSLL (read var2 var1)))))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main76 var2 var3 var0 var1) (= 0 (colour (getTSLL (read var2 var0)))))) (inv_main77 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main48 var2 var3 var0 var1) (not (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main55 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr)) (or (not (and (inv_main11 var2 var4 var0 var1) (and (= var4 var0) (= var3 0)))) (inv_main50 var2 var4 var0 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main61 var5 var6 var1 var2) (and (not (= var3 var7)) (and (and (and (and (= var8 var5) (= var3 var6)) (= var0 var1)) (= var4 var2)) (= var7 (next (getTSLL (read var5 var2)))))))) (inv_main65 var8 var3 var0 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Addr)) (or (not (and (inv_main18 var2 var4 var0 var1) (and (not (= var7 0)) (and (and (and (= var3 (write var2 var1 (O_TSLL (TSLL var4 (prev (getTSLL (read var2 var1))) (colour (getTSLL (read var2 var1))))))) (= var8 var4)) (= var6 var0)) (= var5 var1))))) (inv_main22 var3 var8 var6 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 TSLL) (var5 Addr)) (or (not (and (inv_main11 var3 var5 var0 var1) (not (= var2 0)))) (inv_main16 (newHeap (alloc var3 (O_TSLL var4))) var5 var0 var1 (newAddr (alloc var3 (O_TSLL var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main59 var2 var3 var0 var1) (= 0 (colour (getTSLL (read var2 var1)))))) (inv_main61 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main28 var5 var7 var1 var2) (and (and (and (and (= var8 var5) (= var0 var7)) (= var3 var1)) (= var6 var2)) (= var4 (next (getTSLL (read var5 var2))))))) (inv_main29 var8 var0 var3 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main15 var2 var3 var0 var1)) (inv_main17 (write var2 (next (getTSLL (read var2 var1))) (O_TSLL (TSLL (next (getTSLL (read var2 (next (getTSLL (read var2 var1)))))) var1 (colour (getTSLL (read var2 (next (getTSLL (read var2 var1))))))))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main22 var2 var3 var0 var1)) (inv_main21 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) (prev (getTSLL (read var2 var1))) 1))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main31 var2 var3 var0 var1)) (inv_main21 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) (prev (getTSLL (read var2 var1))) 1))) var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main61 var5 var6 var1 var2) (and (= var3 var7) (and (and (and (and (= var8 var5) (= var3 var6)) (= var0 var1)) (= var4 var2)) (= var7 (next (getTSLL (read var5 var2)))))))) (inv_main67 var8 var3 var0 var7))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main8 var1 var2 var0)) (inv_main9 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) var2 (colour (getTSLL (read var1 var0)))))) var2 var0))))
(assert (forall ((var0 TSLL) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Heap)) (or (not (and (inv_main5 var2 var3) (and (= var4 (write var2 var3 (O_TSLL (TSLL (next (getTSLL (read var2 var3))) (prev (getTSLL (read var2 var3))) 1)))) (= var1 var3)))) (inv_main7 (newHeap (alloc var4 (O_TSLL var0))) var1 (newAddr (alloc var4 (O_TSLL var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main32 var2 var3 var0 var1) (and (not (= var3 var1)) (= var3 (next (getTSLL (read var2 var1))))))) (inv_main11 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr)) (or (not (and (inv_main9 var2 var4 var0) (and (and (= var1 (write var2 var0 (O_TSLL (TSLL (next (getTSLL (read var2 var0))) (prev (getTSLL (read var2 var0))) 1)))) (= var3 var4)) (= var5 var0)))) (inv_main11 var1 var3 var5 var5))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main3 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main4 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Heap) (var1 Addr)) (not (and (inv_main5 var0 var1) (not (is-O_TSLL (read var0 var1)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main7 var1 var2 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main8 var1 var2 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main9 var1 var2 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main16 var2 var3 var0 var1 var4) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main15 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main15 var2 var3 var0 var1) (not (is-O_TSLL (read var2 (next (getTSLL (read var2 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main17 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main18 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main22 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main23 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main27 var2 var3 var0 var1 var4) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main26 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main26 var2 var3 var0 var1) (not (is-O_TSLL (read var2 (next (getTSLL (read var2 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main28 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main29 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main31 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main21 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main34 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main32 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main39 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main43 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main50 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main48 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main55 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main59 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main61 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main67 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main65 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main71 var2 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main60 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main76 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main77 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main81 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main78 var2 var3 var0 var1) (not (is-O_TSLL (read var2 var0)))))))
(check-sat)
