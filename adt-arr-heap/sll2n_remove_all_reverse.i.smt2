(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (data Int) (next Addr))
  )
))
(declare-fun inv_main10 (Heap Int Int Int Int Addr) Bool)
(declare-fun inv_main17 (Heap Int Int Int Int Addr Int Addr) Bool)
(declare-fun inv_main20 (Heap Int Int Int Int Addr Int Addr Int) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Int Addr) Bool)
(declare-fun inv_main25 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main30 (Heap Int Int Addr Int) Bool)
(declare-fun inv_main33 (Heap Int Int Addr Int Int) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main40 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main41 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main43 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main49 (Heap Int Int Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int)) (or (not (and (inv_main30 var2 var4 var3 var0 var1) (and (not (= nullAddr var0)) (not (<= 0 var1))))) (inv_main49 var2 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Heap) (var14 Int) (var15 Int)) (or (not (and (inv_main23 var2 var5 var11 var1 var3 var8 var14 var9) (and (and (and (and (and (and (and (= var13 (write var2 var9 (O_node (node var14 (next (getnode (read var2 var9))))))) (= var10 var5)) (= var15 var11)) (= var4 var1)) (= var12 var3)) (= var6 var8)) (= var0 var14)) (= var7 var9)))) (inv_main25 var13 var10 var15 var4 var12 var6 var7))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main20 var1 var8 var4 var0 var5 var2 var7 var3 var6)) (inv_main20 var1 var8 var4 var0 var5 var2 var7 var3 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 node) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int)) (or (not (and (inv_main10 var3 var10 var13 var1 var5 var12) (and (and (= nullAddr var11) (and (and (and (and (and (and (and (= var4 (newHeap (alloc var3 (O_node var6)))) (= var2 var10)) (= var8 var13)) (= var9 var1)) (= var0 var5)) (= var7 var12)) (= var14 var5)) (= var11 (newAddr (alloc var3 (O_node var6)))))) (<= 0 (+ var1 (- 1)))))) (inv_main20 var4 var2 var8 var9 var0 var7 var14 var11 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Addr) (var15 Int) (var16 Addr)) (or (not (and (inv_main43 var4 var6 var15 var7 var13 var9 var2 var0) (and (and (and (and (and (and (and (and (= var1 var4) (= var3 var6)) (= var5 var15)) (= var8 var7)) (= var11 var13)) (= var10 var9)) (= var16 var2)) (= var12 var0)) (= var14 (next (getnode (read var4 var0))))))) (inv_main40 var1 var3 var5 var8 var11 var10 var16 var14))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main33 var5 var9 var8 var0 var4 var12) (and (and (and (and (and (and (and (= var2 var5) (= var1 var9)) (= var11 var8)) (= var7 var0)) (= var6 var4)) (= var10 var12)) (= var3 nullAddr)) (not (= nullAddr (next (getnode (read var5 var0)))))))) (inv_main40 var2 var1 var11 var7 var6 var10 var3 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main40 var4 var6 var5 var0 var3 var7 var2 var1) (= (next (getnode (read var4 var1))) nullAddr))) (inv_main41 var4 var6 var5 var0 var3 var7 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 node) (var7 Int) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Int) (var14 Int)) (or (not (and (inv_main10 var4 var7 var13 var1 var5 var12) (and (and (not (= nullAddr var11)) (and (and (and (and (and (and (and (= var9 (newHeap (alloc var4 (O_node var6)))) (= var3 var7)) (= var14 var13)) (= var8 var1)) (= var2 var5)) (= var10 var12)) (= var0 var5)) (= var11 (newAddr (alloc var4 (O_node var6)))))) (<= 0 (+ var1 (- 1)))))) (inv_main17 var9 var3 var14 var8 var2 var10 var0 var11))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Heap) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Addr) (var16 Int) (var17 Int) (var18 Int) (var19 Addr) (var20 Addr) (var21 Heap)) (or (not (and (inv_main41 var6 var10 var18 var12 var16 var13 var3 var1) (and (and (and (and (and (and (and (and (= var4 (write var6 var3 (O_node (node (data (getnode (read var6 var3))) nullAddr)))) (= var9 var10)) (= var8 var18)) (= var7 var12)) (= var17 var16)) (= var5 var13)) (= var15 var3)) (= var19 var1)) (and (and (and (and (and (= var21 (write var4 var19 defObj)) (= var14 var9)) (= var11 var8)) (= var20 var7)) (= var0 var17)) (= var2 var5))))) (inv_main30 var21 var14 var11 var20 (+ var0 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap) (var14 Int) (var15 Heap) (var16 Addr) (var17 Int)) (or (not (and (inv_main33 var2 var6 var14 var7 var11 var8) (and (and (= nullAddr (next (getnode (read var2 var7)))) (and (and (and (and (and (= var13 (write var2 var7 defObj)) (= var12 var6)) (= var10 var14)) (= var5 var7)) (= var4 var11)) (= var3 var8))) (and (and (and (and (and (= var15 var13) (= var1 var12)) (= var0 var10)) (= var16 nullAddr)) (= var9 var4)) (= var17 var3))))) (inv_main30 var15 var1 var0 var16 (+ var9 (- 1))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main10 var1 var5 var3 var0 var4 var2) (not (<= 0 (+ var0 (- 1)))))) (inv_main30 var1 var5 var3 var2 (+ var5 (- 1))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_main17 var1 var7 var4 var0 var5 var2 var6 var3)) (inv_main23 (write var1 var3 (O_node (node (data (getnode (read var1 var3))) nullAddr))) var7 var4 var0 var5 var2 var6 var3))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int)) (or (not (and (inv_main30 var2 var4 var3 var0 var1) (<= 0 var1))) (inv_main33 var2 var4 var3 var0 var1 3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Heap) (var4 Int) (var5 Addr) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Addr) (var12 Int) (var13 Addr)) (or (not (and (inv_main25 var2 var7 var12 var0 var4 var11 var13) (and (and (and (and (and (and (= var3 (write var2 var13 (O_node (node (data (getnode (read var2 var13))) var11)))) (= var8 var7)) (= var6 var12)) (= var9 var0)) (= var10 var4)) (= var5 var11)) (= var1 var13)))) (inv_main10 var3 var8 var6 (+ var9 (- 1)) var10 var1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (or (not (and (inv_main4 var2 var7 var4) (and (and (and (and (and (= var1 var2) (= var5 var7)) (= var3 var4)) (= var0 var7)) (= var8 var4)) (= var6 nullAddr)))) (inv_main10 var1 var5 var3 var0 var8 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main40 var4 var6 var5 var0 var3 var7 var2 var1) (not (= (next (getnode (read var4 var1))) nullAddr)))) (inv_main43 var4 var6 var5 var0 var3 var7 var1 var1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (not (and (inv_main17 var1 var7 var4 var0 var5 var2 var6 var3) (not (is-O_node (read var1 var3)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (not (and (inv_main23 var1 var7 var4 var0 var5 var2 var6 var3) (not (is-O_node (read var1 var3)))))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main25 var1 var6 var3 var0 var4 var2 var5) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main33 var2 var4 var3 var0 var1 var5) (not (is-O_node (read var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int)) (not (and (inv_main40 var4 var6 var5 var0 var3 var7 var2 var1) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int)) (not (and (inv_main43 var4 var6 var5 var0 var3 var7 var2 var1) (not (is-O_node (read var4 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int)) (not (and (inv_main41 var4 var6 var5 var0 var3 var7 var2 var1) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int)) (not (inv_main49 var2 var4 var3 var0 var1))))
(check-sat)
