(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-datatype bool (
  (true)
  (false)
))
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (O_AddrRange (getAddrRange AddrRange))
   (defObj)
  )
))
(declare-fun inv_main19_2 (Heap Addr) Bool)
(declare-fun inv_main23_12_0 (Heap Addr) Bool)
(declare-fun inv_main23_8 (Heap Addr Int Addr Int Addr) Bool)
(declare-fun rec (Heap Addr Addr Heap Addr Addr) Bool)
(declare-fun rec10_3 (Heap Addr Addr Heap Addr Addr Int) Bool)
(declare-fun rec15_9 (Heap Addr Addr Heap Addr Addr Int) Bool)
(declare-fun rec15_9_3 (Heap Addr Addr Heap Addr Addr Addr) Bool)
(declare-fun rec8_1 (Heap Addr Addr Heap Addr Addr) Bool)
(declare-fun rec9_5 (Heap Addr Addr Heap Addr Addr) Bool)
(declare-fun rec9_5_0 (Heap Addr Addr Heap Addr Addr) Bool)
(declare-fun rec_1 (Heap Addr Addr Heap Addr Addr Int) Bool)
(declare-fun rec_2 (Heap Addr Addr Heap Addr Addr) Bool)
(declare-fun rec_post (Heap Addr Addr Heap Addr Int) Bool)
(declare-fun rec_pre (Heap Addr Addr) Bool)
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (and (= var1 emptyHeap) (= var0 nullAddr))) (inv_main19_2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int) (var7 Addr) (var8 Heap)) (or (not (and (and (inv_main23_8 var8 var7 var6 var5 var4 var3) (rec_post var8 var7 var3 var2 var1 var0)) (not (<= 0 (+ (+ var4 var0) (- 1)))))) (inv_main23_12_0 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap)) (or (not (and (inv_main19_2 var2 var1) (not (<= 0 (+ var0 (- 1)))))) (inv_main23_12_0 var2 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Bool) (var8 Addr) (var9 Int) (var10 Heap) (var11 Int) (var12 Addr) (var13 Heap) (var14 Addr) (var15 Int) (var16 Addr) (var17 Int) (var18 Addr) (var19 Heap)) (or (not (and (and (inv_main23_8 var19 var18 var17 var16 var15 var14) (rec_post var19 var18 var14 var13 var12 var11)) (and (and (and (and (and (= var10 (newHeap (alloc var13 (O_Int var9)))) (or (and var7 (= var8 (newAddr (alloc var13 (O_Int var9))))) (and (not var7) (= var8 var12)))) (= var6 (+ var15 var11))) (= var5 (newAddr (alloc var13 (O_Int var9))))) (and (and (and (= var4 (write var10 var5 (O_Int var3))) (= var2 var8)) (= var1 var6)) (= var0 var5))) (<= 0 (+ (+ var15 var11) (- 1)))))) (inv_main23_8 var4 var2 var1 var0 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Bool) (var9 Addr) (var10 Int) (var11 Heap) (var12 Addr) (var13 Heap)) (or (not (and (inv_main19_2 var13 var12) (and (and (and (and (and (= var11 (newHeap (alloc var13 (O_Int var10)))) (or (and var8 (= var9 (newAddr (alloc var13 (O_Int var10))))) (and (not var8) (= var9 var12)))) (= var7 var6)) (= var5 (newAddr (alloc var13 (O_Int var10))))) (and (and (and (= var4 (write var11 var5 (O_Int var3))) (= var2 var9)) (= var1 var7)) (= var0 var5))) (<= 0 (+ var6 (- 1)))))) (inv_main23_8 var4 var2 var1 var0 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Int) (var4 Addr) (var5 Heap)) (or (not (inv_main23_8 var5 var4 var3 var2 var1 var0)) (rec_pre var5 var4 var0))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main23_12_0 var1 var0) (not (= var0 nullAddr))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (rec_pre var2 var1 var0)) (rec8_1 var2 var1 var0 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (rec8_1 var5 var4 var3 var2 var1 var0) (<= 0 (+ (* (- 1) (getInt (read var5 var3))) (- 1))))) (rec9_5 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (rec8_1 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (* (- 1) (getInt (read var5 var3))) (- 1)))))) (rec9_5_0 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (rec9_5 var6 var5 var4 var3 var2 var1) (= var0 (getInt (read var6 var4))))) (rec10_3 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (rec10_3 var8 var7 var6 var5 var4 var3 var2) (and (= var1 (write var8 var6 defObj)) (or (and (= var7 var6) (= var0 nullAddr)) (and (not (= var7 var6)) (= var0 var7)))))) (rec_1 var1 var0 var6 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (rec_1 var6 var5 var4 var3 var2 var1 var0)) (rec15_9 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (rec9_5_0 var5 var4 var3 var2 var1 var0)) (rec var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (rec var6 var5 var4 var3 var2 var1) (= var0 (write var6 var4 (O_Int (+ (getInt (read var6 var4)) (- 1))))))) (rec_2 var0 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (rec_2 var5 var4 var3 var2 var1 var0)) (rec15_9_3 var5 var4 var3 var2 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (rec15_9_3 var9 var8 var7 var6 var5 var4 var3) (rec_post var9 var8 var3 var2 var1 var0))) (rec15_9 var2 var1 var7 var6 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (rec15_9 var6 var5 var4 var3 var2 var1 var0)) (rec_post var3 var2 var1 var6 var5 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (rec15_9_3 var6 var5 var4 var3 var2 var1 var0)) (rec_pre var6 var5 var0))))
(check-sat)
