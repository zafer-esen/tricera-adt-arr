(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (TSLL 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_TSLL (getTSLL TSLL))
   (defObj)
  )
  (
   (TSLL (next Addr) (colour Int))
  )
))
(declare-fun inv_main13 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main14 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main15 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main18 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main19 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main23 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main24 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main3 (Heap Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr) Bool)
(declare-fun inv_main40 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main41 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main42 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main46 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main48 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main57 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main58 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main59 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr) Bool)
(declare-fun inv_main62 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main7 (Heap Addr Addr) Bool)
(declare-fun inv_main9 (Heap Addr Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main40 var2 var0 var3 var1) (= 0 (colour (getTSLL (read var2 var1)))))) (inv_main42 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main29 var2 var0 var3 var1) (not (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main36 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (inv_main3 var1 var0)) (inv_main4 (write var1 var0 (O_TSLL (TSLL (next (getTSLL (read var1 var0))) 1))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main57 var2 var0 var3 var1) (= 0 (colour (getTSLL (read var2 var3)))))) (inv_main58 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main58 var5 var0 var7 var2) (and (and (and (and (= var8 var5) (= var6 var0)) (= var4 var7)) (= var3 var2)) (= var1 (next (getTSLL (read var5 var7))))))) (inv_main62 (write var8 var4 defObj) var6 var4 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main15 var5 var1 var7 var2) (and (not (= var4 0)) (and (and (and (= var8 (write var5 var2 (O_TSLL (TSLL var1 (colour (getTSLL (read var5 var2))))))) (= var3 var1)) (= var6 var7)) (= var0 var2))))) (inv_main18 var8 var3 var6 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (or (not (inv_main6 var1 var0 var2)) (inv_main7 (write var1 var2 (O_TSLL (TSLL var0 (colour (getTSLL (read var1 var2)))))) var0 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int)) (or (not (and (inv_main15 var4 var1 var6 var2) (and (= var8 0) (and (and (and (= var7 (write var4 var2 (O_TSLL (TSLL var1 (colour (getTSLL (read var4 var2))))))) (= var3 var1)) (= var5 var6)) (= var0 var2))))) (inv_main19 var7 var3 var5 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main42 var3 var1 var6 var2) (and (= var0 var5) (and (and (and (and (= var8 var3) (= var0 var1)) (= var7 var6)) (= var4 var2)) (= var5 (next (getTSLL (read var3 var2)))))))) (inv_main48 var8 var0 var7 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main24 var2 var0 var3 var1)) (inv_main26 (write var2 var1 (O_TSLL (TSLL var0 (colour (getTSLL (read var2 var1)))))) var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main57 var2 var0 var3 var1) (not (= 0 (colour (getTSLL (read var2 var3))))))) (inv_main59 var2 var0 var3 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main9 var3 var1 var4 var2) (and (= var1 var4) (= var0 0)))) (inv_main31 var3 var1 var4 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main46 var2 var0 var3 var1) (= 1 (colour (getTSLL (read var2 var1)))))) (inv_main52 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 TSLL) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main19 var3 var0 var7 var1) (and (and (and (= var8 (write var3 var1 (O_TSLL (TSLL (next (getTSLL (read var3 var1))) 0)))) (= var6 var0)) (= var5 var7)) (= var2 var1)))) (inv_main23 (newHeap (alloc var8 (O_TSLL var4))) var6 var5 var2 (newAddr (alloc var8 (O_TSLL var4)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main22 var3 var0 var6 var1) (and (and (and (and (= var4 var3) (= var7 var0)) (= var8 var6)) (= var5 var1)) (= var2 (next (getTSLL (read var3 var1))))))) (inv_main24 var4 var7 var8 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main40 var2 var0 var3 var1) (not (= 0 (colour (getTSLL (read var2 var1))))))) (inv_main41 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main46 var2 var0 var3 var1) (not (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main41 var2 var0 var3 var1))))
(assert (forall ((var0 Heap) (var1 TSLL)) (or (not (inv_main2 var0)) (inv_main3 (newHeap (alloc var0 (O_TSLL var1))) (newAddr (alloc var0 (O_TSLL var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (inv_main23 var3 var0 var4 var1 var2)) (inv_main22 (write var3 var1 (O_TSLL (TSLL var2 (colour (getTSLL (read var3 var1)))))) var0 var4 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 TSLL) (var5 Int)) (or (not (and (inv_main9 var2 var0 var3 var1) (not (= var5 0)))) (inv_main14 (newHeap (alloc var2 (O_TSLL var4))) var0 var3 var1 (newAddr (alloc var2 (O_TSLL var4)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 TSLL) (var3 Heap) (var4 Addr)) (or (not (and (inv_main4 var1 var0) (and (= var3 (write var1 var0 (O_TSLL (TSLL nullAddr (colour (getTSLL (read var1 var0))))))) (= var4 var0)))) (inv_main6 (newHeap (alloc var3 (O_TSLL var2))) var4 (newAddr (alloc var3 (O_TSLL var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (or (not (inv_main14 var2 var0 var3 var1 var4)) (inv_main13 (write var2 var1 (O_TSLL (TSLL var4 (colour (getTSLL (read var2 var1)))))) var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main42 var3 var1 var6 var2) (and (not (= var0 var5)) (and (and (and (and (= var8 var3) (= var0 var1)) (= var7 var6)) (= var4 var2)) (= var5 (next (getTSLL (read var3 var2)))))))) (inv_main46 var8 var0 var7 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Heap) (var7 Addr) (var8 Addr)) (or (not (and (inv_main13 var5 var1 var7 var2) (and (and (and (and (= var6 var5) (= var8 var1)) (= var3 var7)) (= var0 var2)) (= var4 (next (getTSLL (read var5 var2))))))) (inv_main15 var6 var8 var3 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (or (not (and (inv_main9 var3 var1 var4 var2) (and (not (= var1 var4)) (= var0 0)))) (inv_main29 var3 var1 var4 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap) (var12 Addr)) (or (not (and (inv_main62 var7 var1 var10 var2) (and (and (not (= var12 var4)) (and (and (and (and (= var11 var7) (= var0 var1)) (= var9 var10)) (= var6 var2)) (= var3 (next (getTSLL (read var7 var2)))))) (and (and (and (= var5 (write var11 var6 defObj)) (= var12 var0)) (= var4 var3)) (= var8 var6))))) (inv_main57 var5 var12 var4 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap) (var12 Addr)) (or (not (and (inv_main59 var5 var0 var7 var3) (and (not (= var8 var12)) (and (and (and (and (and (= var11 var5) (= var2 var0)) (= var1 var7)) (= var6 var3)) (= var10 (next (getTSLL (read var5 var7))))) (and (and (and (= var4 (write var11 var1 defObj)) (= var8 var2)) (= var9 var1)) (= var12 var10)))))) (inv_main57 var4 var8 var12 var12))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main41 var5 var0 var6 var2) (and (not (= var3 var4)) (and (= var3 var8) (and (and (and (and (= var1 var5) (= var3 var0)) (= var4 var6)) (= var7 var2)) (= var8 (next (getTSLL (read var5 var2))))))))) (inv_main57 var1 var3 var4 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main29 var2 var0 var3 var1) (and (not (= var0 var3)) (and (= var0 var1) (= 1 (colour (getTSLL (read var2 var1)))))))) (inv_main57 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main18 var2 var0 var3 var1)) (inv_main9 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) 1))) var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (inv_main26 var2 var0 var3 var1)) (inv_main9 (write var2 var1 (O_TSLL (TSLL (next (getTSLL (read var2 var1))) 1))) var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr)) (or (not (and (inv_main7 var2 var0 var3) (and (and (= var1 (write var2 var3 (O_TSLL (TSLL (next (getTSLL (read var2 var3))) 1)))) (= var4 var0)) (= var5 var3)))) (inv_main9 var1 var4 var5 var5))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr)) (or (not (and (inv_main41 var5 var0 var6 var2) (and (not (= var3 var8)) (and (and (and (and (= var1 var5) (= var3 var0)) (= var4 var6)) (= var7 var2)) (= var8 (next (getTSLL (read var5 var2)))))))) (inv_main40 var1 var3 var4 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (or (not (and (inv_main29 var2 var0 var3 var1) (and (not (= var0 var1)) (= 1 (colour (getTSLL (read var2 var1))))))) (inv_main40 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main3 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap)) (not (and (inv_main4 var1 var0) (not (is-O_TSLL (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main6 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr)) (not (and (inv_main7 var1 var0 var2) (not (is-O_TSLL (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr)) (not (and (inv_main14 var2 var0 var3 var1 var4) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main13 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main15 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main18 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main19 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr)) (not (and (inv_main23 var3 var0 var4 var1 var2) (not (is-O_TSLL (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main22 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main24 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main26 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main31 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main29 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main36 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main40 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main42 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main48 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main46 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (inv_main52 var2 var0 var3 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main41 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main57 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main58 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var3)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main62 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr)) (not (and (inv_main59 var2 var0 var3 var1) (not (is-O_TSLL (read var2 var3)))))))
(check-sat)
