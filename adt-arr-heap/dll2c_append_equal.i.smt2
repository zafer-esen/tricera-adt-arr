(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (next Addr) (prev Addr) (data Int))
  )
))
(declare-fun inv_main12 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main15 (Heap Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Int Addr) Bool)
(declare-fun inv_main22 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main23 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main32 (Heap Int Int Int Int Addr Addr Int Addr Int) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main38 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main44 (Heap Int Int Int Int Addr Addr) Bool)
(declare-fun inv_main55 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main58 (Heap Int Int Addr Int Int Int Addr Int) Bool)
(declare-fun inv_main61 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main62 (Heap Int Int Addr Int Int Int Addr) Bool)
(declare-fun inv_main65 (Heap Int Int Addr Int Int Addr) Bool)
(declare-fun inv_main66 (Heap Int Int Addr Int Int Addr) Bool)
(declare-fun inv_main67 (Heap Int Int Addr Int Int Addr) Bool)
(declare-fun inv_main69 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main70 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main71 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main72 (Heap Int Int Addr Int Int Addr Addr) Bool)
(declare-fun inv_main74 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main77 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main89 (Heap Int Int Addr Addr Int Addr) Bool)
(declare-fun inv_main93 (Heap Int Int Addr Addr Int Addr Addr) Bool)
(declare-fun inv_main96 (Heap Int Int Addr Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main4 var0 2 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (or (not (inv_main23 var1 var2 var3 var6 var5 var4 var0)) (inv_main44 (write var1 var0 (O_node (node var4 (prev (getnode (read var1 var0))) (data (getnode (read var1 var0)))))) var2 var3 var6 var5 var4 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (or (not (inv_main61 var5 var6 var7 var0 var1 var2 var3 var4)) (inv_main62 (write var5 var4 (O_node (node (next (getnode (read var5 var4))) nullAddr (data (getnode (read var5 var4)))))) var6 var7 var0 var1 var2 var3 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Addr)) (or (not (and (inv_main77 var5 var8 var9 var0 var7 var6) (and (not (= nullAddr var12)) (and (= (+ var4 1) (+ 1 var11)) (and (= var3 var12) (and (and (and (and (and (and (= var2 var5) (= var11 var8)) (= var10 var9)) (= var12 var0)) (= var1 var7)) (= var4 var6)) (= var3 (next (getnode (read var5 var7)))))))))) (inv_main89 var2 var11 var10 var12 var3 (+ var4 1) var12))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 node) (var15 Int) (var16 Int)) (or (not (and (inv_main22 var6 var15 var16 var12 var11 var10 var3) (and (and (not (= nullAddr var2)) (and (and (and (and (and (and (and (and (= var1 (newHeap (alloc var6 (O_node var14)))) (= var13 var15)) (= var4 var16)) (= var7 var12)) (= var5 var11)) (= var8 var10)) (= var0 var3)) (= var9 var11)) (= var2 (newAddr (alloc var6 (O_node var14)))))) (<= 0 (+ (+ var12 (- 1)) (- 1)))))) (inv_main29 var1 var13 var4 var7 var5 var8 var0 var9 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Int)) (or (not (inv_main58 var6 var7 var8 var0 var1 var2 var3 var4 var5)) (inv_main58 var6 var7 var8 var0 var1 var2 var3 var4 var5))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Heap) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Addr) (var16 Int) (var17 Addr) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 node)) (or (not (and (inv_main44 var6 var19 var21 var11 var10 var9 var5) (and (and (= nullAddr var4) (and (and (and (and (and (and (and (= var3 (newHeap (alloc var7 (O_node var22)))) (= var16 var18)) (= var2 var13)) (= var0 var17)) (= var12 3)) (= var20 var13)) (= var8 var13)) (= var4 (newAddr (alloc var7 (O_node var22)))))) (and (and (and (and (and (and (= var7 (write var6 var9 (O_node (node (next (getnode (read var6 var9))) var5 (data (getnode (read var6 var9))))))) (= var18 var19)) (= var13 var21)) (= var14 var11)) (= var1 var10)) (= var17 var9)) (= var15 var5))))) (inv_main58 var3 var16 var2 var0 var12 var20 var8 var4 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_main12 var1 var2 var4 var6 var5 var3 var0)) (inv_main18 (write var1 var0 (O_node (node nullAddr (prev (getnode (read var1 var0))) (data (getnode (read var1 var0)))))) var2 var4 var6 var5 var3 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Int)) (or (not (and (inv_main74 var1 var4 var5 var0 var3 var2) (= var5 (data (getnode (read var1 var3)))))) (inv_main77 var1 var4 var5 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Int) (var6 Int) (var7 Heap) (var8 Addr) (var9 Int) (var10 Int) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Int)) (or (not (and (inv_main41 var3 var14 var15 var10 var9 var8 var2 var4) (and (and (and (and (and (and (and (= var7 (write var3 var8 (O_node (node (next (getnode (read var3 var8))) var4 (data (getnode (read var3 var8))))))) (= var5 var14)) (= var6 var15)) (= var0 var10)) (= var1 var9)) (= var13 var8)) (= var12 var2)) (= var11 var4)))) (inv_main22 var7 var5 var6 (+ var0 (- 1)) var1 var11 var12))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Addr) (var12 Heap) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main38 var4 var13 var15 var9 var8 var7 var3 var5) (and (= var11 nullAddr) (and (and (and (and (and (and (and (= var12 (write var4 var5 (O_node (node var7 (prev (getnode (read var4 var5))) (data (getnode (read var4 var5))))))) (= var6 var13)) (= var0 var15)) (= var1 var9)) (= var14 var8)) (= var11 var7)) (= var2 var3)) (= var10 var5))))) (inv_main22 var12 var6 var0 (+ var1 (- 1)) var14 var10 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Addr) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main19 var2 var11 var13 var7 var6 var3 var10) (and (and (and (and (and (and (= var9 (write var2 var10 (O_node (node (next (getnode (read var2 var10))) (prev (getnode (read var2 var10))) var3)))) (= var5 var11)) (= var4 var13)) (= var12 var7)) (= var0 var6)) (= var8 var3)) (= var1 var10)))) (inv_main22 var9 var5 var4 var12 var0 var1 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_main18 var1 var2 var4 var6 var5 var3 var0)) (inv_main19 (write var1 var0 (O_node (node (next (getnode (read var1 var0))) nullAddr (data (getnode (read var1 var0)))))) var2 var4 var6 var5 var3 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (or (not (inv_main70 var5 var6 var7 var0 var1 var2 var4 var3)) (inv_main71 (write var5 var4 (O_node (node (next (getnode (read var5 var4))) var3 (data (getnode (read var5 var4)))))) var6 var7 var0 var1 var2 var4 var3))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (or (not (inv_main65 var4 var5 var6 var0 var1 var2 var3)) (inv_main67 (write var4 var3 (O_node (node (next (getnode (read var4 var3))) var3 (data (getnode (read var4 var3)))))) var5 var6 var0 var1 var2 var3))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Addr)) (or (not (and (inv_main77 var5 var8 var9 var0 var7 var6) (and (not (= var3 var12)) (and (and (and (and (and (and (= var2 var5) (= var11 var8)) (= var10 var9)) (= var12 var0)) (= var1 var7)) (= var4 var6)) (= var3 (next (getnode (read var5 var7)))))))) (inv_main74 var2 var11 var10 var12 var3 (+ var4 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Addr)) (or (not (and (inv_main72 var5 var10 var12 var7 var0 var1 var3 var9) (and (and (and (and (and (= var4 (write var5 var7 (O_node (node (next (getnode (read var5 var7))) var3 (data (getnode (read var5 var7))))))) (= var8 var10)) (= var2 var12)) (= var13 var7)) (= var11 var0)) (= var6 var1)))) (inv_main74 var4 var8 var2 var13 var13 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Heap) (var7 Int) (var8 Int) (var9 Addr) (var10 Int) (var11 Addr) (var12 Int) (var13 Int)) (or (not (and (inv_main67 var4 var10 var13 var9 var0 var1 var3) (and (and (and (and (and (and (= var6 (write var4 var3 (O_node (node var3 (prev (getnode (read var4 var3))) (data (getnode (read var4 var3))))))) (= var12 var10)) (= var8 var13)) (= var5 var9)) (= var2 var0)) (= var7 var1)) (= var11 var3)))) (inv_main74 var6 var12 var8 var11 var11 0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Int)) (or (not (and (inv_main74 var1 var4 var5 var0 var3 var2) (not (= var5 (data (getnode (read var1 var3))))))) (inv_main96 var1 var4 var5 var0 var3 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Heap) (var6 Int) (var7 Addr) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Addr)) (or (not (and (inv_main77 var5 var8 var9 var0 var7 var6) (and (not (= (+ var4 1) (+ 1 var11))) (and (= var3 var12) (and (and (and (and (and (and (= var2 var5) (= var11 var8)) (= var10 var9)) (= var12 var0)) (= var1 var7)) (= var4 var6)) (= var3 (next (getnode (read var5 var7))))))))) (inv_main96 var2 var11 var10 var12 var3 (+ var4 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (or (not (inv_main71 var5 var6 var7 var0 var1 var2 var4 var3)) (inv_main72 (write var5 var4 (O_node (node var0 (prev (getnode (read var5 var4))) (data (getnode (read var5 var4)))))) var6 var7 var0 var1 var2 var4 var3))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Int)) (or (not (inv_main32 var4 var5 var6 var9 var8 var7 var3 var2 var0 var1)) (inv_main32 var4 var5 var6 var9 var8 var7 var3 var2 var0 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 node) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int)) (or (not (and (inv_main22 var5 var14 var16 var10 var9 var8 var4) (and (and (= nullAddr var2) (and (and (and (and (and (and (and (and (= var1 (newHeap (alloc var5 (O_node var3)))) (= var13 var14)) (= var12 var16)) (= var11 var10)) (= var15 var9)) (= var7 var8)) (= var0 var4)) (= var6 var9)) (= var2 (newAddr (alloc var5 (O_node var3)))))) (<= 0 (+ (+ var10 (- 1)) (- 1)))))) (inv_main32 var1 var13 var12 var11 var15 var7 var0 var6 var2 1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (or (not (and (inv_main22 var1 var2 var3 var6 var5 var4 var0) (not (<= 0 (+ (+ var6 (- 1)) (- 1)))))) (inv_main23 var1 var2 var3 var6 var5 var4 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (or (not (inv_main66 var4 var5 var6 var0 var1 var2 var3)) (inv_main69 var4 var5 var6 var0 var1 var2 var3 (prev (getnode (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Heap) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Addr) (var17 Int)) (or (not (and (inv_main36 var3 var14 var17 var8 var7 var6 var2 var12 var10) (and (and (and (and (and (and (and (and (= var11 (write var3 var10 (O_node (node (next (getnode (read var3 var10))) (prev (getnode (read var3 var10))) var12)))) (= var9 var14)) (= var1 var17)) (= var15 var8)) (= var13 var7)) (= var0 var6)) (= var16 var2)) (= var4 var12)) (= var5 var10)))) (inv_main38 var11 var9 var1 var15 var13 var0 var16 var5))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_main15 var2 var3 var5 var7 var6 var4 var1 var0)) (inv_main15 var2 var3 var5 var7 var6 var4 var1 var0))))
(assert (forall ((var0 Int) (var1 node) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Heap) (var9 Int) (var10 Int)) (or (not (and (inv_main4 var6 var7 var9) (and (= nullAddr var2) (and (and (and (and (and (and (= var8 (newHeap (alloc var6 (O_node var1)))) (= var0 var7)) (= var5 var9)) (= var4 var7)) (= var10 var9)) (= var3 var9)) (= var2 (newAddr (alloc var6 (O_node var1)))))))) (inv_main15 var8 var0 var5 var4 var10 var3 var2 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Addr) (var12 Heap) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main62 var4 var13 var15 var7 var1 var2 var8 var11) (and (= nullAddr var3) (and (and (and (and (and (and (and (= var12 (write var4 var11 (O_node (node (next (getnode (read var4 var11))) (prev (getnode (read var4 var11))) var8)))) (= var6 var13)) (= var14 var15)) (= var3 var7)) (= var10 var1)) (= var0 var2)) (= var5 var8)) (= var9 var11))))) (inv_main65 var12 var6 var14 var3 var10 var0 var9))))
(assert (forall ((var0 Int) (var1 node) (var2 Addr) (var3 Int) (var4 Heap) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Int) (var22 Int)) (or (not (and (inv_main44 var4 var18 var21 var10 var9 var8 var2) (and (and (not (= nullAddr var6)) (and (and (and (and (and (and (and (= var20 (newHeap (alloc var5 (O_node var1)))) (= var22 var17)) (= var3 var11)) (= var16 var15)) (= var19 3)) (= var7 var11)) (= var13 var11)) (= var6 (newAddr (alloc var5 (O_node var1)))))) (and (and (and (and (and (and (= var5 (write var4 var8 (O_node (node (next (getnode (read var4 var8))) var2 (data (getnode (read var4 var8))))))) (= var17 var18)) (= var11 var21)) (= var12 var10)) (= var0 var9)) (= var15 var8)) (= var14 var2))))) (inv_main55 var20 var22 var3 var16 var19 var7 var13 var6))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (or (not (inv_main35 var3 var4 var5 var8 var7 var6 var2 var1 var0)) (inv_main36 (write var3 var0 (O_node (node (next (getnode (read var3 var0))) nullAddr (data (getnode (read var3 var0)))))) var4 var5 var8 var7 var6 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Addr) (var12 Heap) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main62 var4 var13 var15 var7 var1 var2 var8 var11) (and (not (= nullAddr var3)) (and (and (and (and (and (and (and (= var12 (write var4 var11 (O_node (node (next (getnode (read var4 var11))) (prev (getnode (read var4 var11))) var8)))) (= var6 var13)) (= var14 var15)) (= var3 var7)) (= var10 var1)) (= var0 var2)) (= var5 var8)) (= var9 var11))))) (inv_main66 var12 var6 var14 var3 var10 var0 var9))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int) (var9 Addr) (var10 Int) (var11 Int) (var12 Addr) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main38 var5 var13 var15 var11 var10 var9 var2 var6) (and (not (= var4 nullAddr)) (and (and (and (and (and (and (and (= var3 (write var5 var6 (O_node (node var9 (prev (getnode (read var5 var6))) (data (getnode (read var5 var6))))))) (= var8 var13)) (= var0 var15)) (= var14 var11)) (= var1 var10)) (= var4 var9)) (= var7 var2)) (= var12 var6))))) (inv_main41 var3 var8 var0 var14 var1 var4 var7 var12))))
(assert (forall ((var0 Int) (var1 Int) (var2 Heap) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 node) (var9 Int) (var10 Int)) (or (not (and (inv_main4 var4 var6 var9) (and (not (= nullAddr var7)) (and (and (and (and (and (and (= var2 (newHeap (alloc var4 (O_node var8)))) (= var1 var6)) (= var3 var9)) (= var5 var6)) (= var10 var9)) (= var0 var9)) (= var7 (newAddr (alloc var4 (O_node var8)))))))) (inv_main12 var2 var1 var3 var5 var10 var0 var7))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Heap) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Int) (var11 Addr) (var12 Int) (var13 Addr) (var14 Int)) (or (not (and (inv_main89 var3 var12 var14 var8 var6 var4 var13) (and (not (= var7 var11)) (and (and (and (and (and (and (and (= var5 var3) (= var10 var12)) (= var9 var14)) (= var1 var8)) (= var0 var6)) (= var2 var4)) (= var11 var13)) (= var7 (next (getnode (read var3 var13)))))))) (inv_main93 var5 var10 var9 var1 var0 var2 var11 var7))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Heap) (var16 Addr) (var17 Int) (var18 Addr) (var19 Addr) (var20 Int) (var21 Addr) (var22 Int) (var23 Int) (var24 Addr) (var25 Int)) (or (not (and (inv_main93 var7 var23 var25 var14 var9 var8 var24 var6) (and (not (= var16 var18)) (and (and (and (and (and (and (and (and (and (= var1 var7) (= var17 var23)) (= var11 var25)) (= var3 var14)) (= var5 var9)) (= var22 var8)) (= var19 var24)) (= var10 var6)) (= var21 (next (getnode (read var7 var6))))) (and (and (and (and (and (and (and (and (= var15 (write var1 var10 defObj)) (= var0 var17)) (= var20 var11)) (= var12 var3)) (= var4 var5)) (= var2 var22)) (= var18 var19)) (= var13 var10)) (= var16 var21)))))) (inv_main93 var15 var0 var20 var12 var4 var2 var18 var16))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (or (not (inv_main69 var5 var6 var7 var0 var1 var2 var4 var3)) (inv_main70 (write var5 var3 (O_node (node var4 (prev (getnode (read var5 var3))) (data (getnode (read var5 var3)))))) var6 var7 var0 var1 var2 var4 var3))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (or (not (inv_main55 var5 var6 var7 var0 var1 var2 var3 var4)) (inv_main61 (write var5 var4 (O_node (node nullAddr (prev (getnode (read var5 var4))) (data (getnode (read var5 var4)))))) var6 var7 var0 var1 var2 var3 var4))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (or (not (inv_main29 var3 var4 var5 var8 var7 var6 var2 var1 var0)) (inv_main35 (write var3 var0 (O_node (node nullAddr (prev (getnode (read var3 var0))) (data (getnode (read var3 var0)))))) var4 var5 var8 var7 var6 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main12 var1 var2 var4 var6 var5 var3 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main18 var1 var2 var4 var6 var5 var3 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main19 var1 var2 var4 var6 var5 var3 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (not (and (inv_main29 var3 var4 var5 var8 var7 var6 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (not (and (inv_main35 var3 var4 var5 var8 var7 var6 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Int)) (not (and (inv_main36 var3 var4 var5 var8 var7 var6 var2 var1 var0) (not (is-O_node (read var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main38 var1 var3 var4 var7 var6 var5 var0 var2) (not (is-O_node (read var1 var2)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Int)) (not (and (inv_main41 var1 var3 var4 var7 var6 var5 var0 var2) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main23 var1 var2 var3 var6 var5 var4 var0) (not (is-O_node (read var1 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Int)) (not (and (inv_main44 var1 var2 var3 var6 var5 var4 var0) (not (is-O_node (read var1 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main55 var5 var6 var7 var0 var1 var2 var3 var4) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main61 var5 var6 var7 var0 var1 var2 var3 var4) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main62 var5 var6 var7 var0 var1 var2 var3 var4) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (not (and (inv_main65 var4 var5 var6 var0 var1 var2 var3) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (not (and (inv_main67 var4 var5 var6 var0 var1 var2 var3) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int)) (not (and (inv_main66 var4 var5 var6 var0 var1 var2 var3) (not (is-O_node (read var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main69 var5 var6 var7 var0 var1 var2 var4 var3) (not (is-O_node (read var5 var3)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main70 var5 var6 var7 var0 var1 var2 var4 var3) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main71 var5 var6 var7 var0 var1 var2 var4 var3) (not (is-O_node (read var5 var4)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Int)) (not (and (inv_main72 var5 var6 var7 var0 var1 var2 var4 var3) (not (is-O_node (read var5 var0)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Int)) (not (and (inv_main74 var1 var4 var5 var0 var3 var2) (not (is-O_node (read var1 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Int)) (not (and (inv_main77 var1 var4 var5 var0 var3 var2) (not (is-O_node (read var1 var3)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main89 var1 var4 var6 var0 var3 var2 var5) (not (is-O_node (read var1 var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Int) (var6 Addr) (var7 Int)) (not (and (inv_main93 var2 var5 var7 var0 var4 var3 var6 var1) (not (is-O_node (read var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Int) (var5 Int)) (not (inv_main96 var1 var4 var5 var0 var3 var2))))
(check-sat)
